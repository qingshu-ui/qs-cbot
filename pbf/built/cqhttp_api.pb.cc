// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cqhttp_api.proto

#include "cqhttp_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace cqhttp {
PROTOBUF_CONSTEXPR SendPrivateMsg_Params::SendPrivateMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.auto_escape_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateMsg_ParamsDefaultTypeInternal() {}
  union {
    SendPrivateMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateMsg_ParamsDefaultTypeInternal _SendPrivateMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR SendPrivateMsg::SendPrivateMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateMsgDefaultTypeInternal() {}
  union {
    SendPrivateMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateMsgDefaultTypeInternal _SendPrivateMsg_default_instance_;
PROTOBUF_CONSTEXPR SendPrivateMsgResp::SendPrivateMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateMsgRespDefaultTypeInternal() {}
  union {
    SendPrivateMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateMsgRespDefaultTypeInternal _SendPrivateMsgResp_default_instance_;
PROTOBUF_CONSTEXPR SendGroupMsg_Params::SendGroupMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.auto_escape_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupMsg_ParamsDefaultTypeInternal() {}
  union {
    SendGroupMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupMsg_ParamsDefaultTypeInternal _SendGroupMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR SendGroupMsg::SendGroupMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupMsgDefaultTypeInternal() {}
  union {
    SendGroupMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupMsgDefaultTypeInternal _SendGroupMsg_default_instance_;
PROTOBUF_CONSTEXPR SendGroupMsgResp::SendGroupMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupMsgRespDefaultTypeInternal() {}
  union {
    SendGroupMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupMsgRespDefaultTypeInternal _SendGroupMsgResp_default_instance_;
PROTOBUF_CONSTEXPR SendGroupForwardMsg_Params::SendGroupForwardMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupForwardMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupForwardMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupForwardMsg_ParamsDefaultTypeInternal() {}
  union {
    SendGroupForwardMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupForwardMsg_ParamsDefaultTypeInternal _SendGroupForwardMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR SendGroupForwardMsg::SendGroupForwardMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupForwardMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupForwardMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupForwardMsgDefaultTypeInternal() {}
  union {
    SendGroupForwardMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupForwardMsgDefaultTypeInternal _SendGroupForwardMsg_default_instance_;
PROTOBUF_CONSTEXPR SendGroupForwardMsgResp::SendGroupForwardMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.forward_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupForwardMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupForwardMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupForwardMsgRespDefaultTypeInternal() {}
  union {
    SendGroupForwardMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupForwardMsgRespDefaultTypeInternal _SendGroupForwardMsgResp_default_instance_;
PROTOBUF_CONSTEXPR SendMessage_Params::SendMessage_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.auto_escape_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessage_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessage_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessage_ParamsDefaultTypeInternal() {}
  union {
    SendMessage_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessage_ParamsDefaultTypeInternal _SendMessage_Params_default_instance_;
PROTOBUF_CONSTEXPR SendMessage::SendMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageDefaultTypeInternal() {}
  union {
    SendMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageDefaultTypeInternal _SendMessage_default_instance_;
PROTOBUF_CONSTEXPR SendMessageResp::SendMessageResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageRespDefaultTypeInternal() {}
  union {
    SendMessageResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageRespDefaultTypeInternal _SendMessageResp_default_instance_;
PROTOBUF_CONSTEXPR DeleteMsg_Params::DeleteMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMsg_ParamsDefaultTypeInternal() {}
  union {
    DeleteMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMsg_ParamsDefaultTypeInternal _DeleteMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteMsg::DeleteMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMsgDefaultTypeInternal() {}
  union {
    DeleteMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMsgDefaultTypeInternal _DeleteMsg_default_instance_;
PROTOBUF_CONSTEXPR getMsg_Params::getMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMsg_ParamsDefaultTypeInternal() {}
  union {
    getMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMsg_ParamsDefaultTypeInternal _getMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR getMsg::getMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMsgDefaultTypeInternal() {}
  union {
    getMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMsgDefaultTypeInternal _getMsg_default_instance_;
PROTOBUF_CONSTEXPR getMsgResp::getMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.raw_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sender_)*/nullptr
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.group_)*/false
  , /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_.real_id_)*/0
  , /*decltype(_impl_.time_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMsgRespDefaultTypeInternal() {}
  union {
    getMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMsgRespDefaultTypeInternal _getMsgResp_default_instance_;
PROTOBUF_CONSTEXPR GetForwardMsg_Params::GetForwardMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetForwardMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForwardMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForwardMsg_ParamsDefaultTypeInternal() {}
  union {
    GetForwardMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForwardMsg_ParamsDefaultTypeInternal _GetForwardMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR GetForwardMsg::GetForwardMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetForwardMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForwardMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForwardMsgDefaultTypeInternal() {}
  union {
    GetForwardMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForwardMsgDefaultTypeInternal _GetForwardMsg_default_instance_;
PROTOBUF_CONSTEXPR GetForwardMsgResp_Messages::GetForwardMsgResp_Messages(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sender_)*/nullptr
  , /*decltype(_impl_.time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetForwardMsgResp_MessagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForwardMsgResp_MessagesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForwardMsgResp_MessagesDefaultTypeInternal() {}
  union {
    GetForwardMsgResp_Messages _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForwardMsgResp_MessagesDefaultTypeInternal _GetForwardMsgResp_Messages_default_instance_;
PROTOBUF_CONSTEXPR GetForwardMsgResp::GetForwardMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetForwardMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForwardMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForwardMsgRespDefaultTypeInternal() {}
  union {
    GetForwardMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForwardMsgRespDefaultTypeInternal _GetForwardMsgResp_default_instance_;
PROTOBUF_CONSTEXPR GetImage_Params::GetImage_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetImage_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetImage_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetImage_ParamsDefaultTypeInternal() {}
  union {
    GetImage_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetImage_ParamsDefaultTypeInternal _GetImage_Params_default_instance_;
PROTOBUF_CONSTEXPR GetImage::GetImage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetImageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetImageDefaultTypeInternal() {}
  union {
    GetImage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetImageDefaultTypeInternal _GetImage_default_instance_;
PROTOBUF_CONSTEXPR GetImageResp::GetImageResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetImageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetImageRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetImageRespDefaultTypeInternal() {}
  union {
    GetImageResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetImageRespDefaultTypeInternal _GetImageResp_default_instance_;
PROTOBUF_CONSTEXPR MarkMsgAsRead_Params::MarkMsgAsRead_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MarkMsgAsRead_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkMsgAsRead_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkMsgAsRead_ParamsDefaultTypeInternal() {}
  union {
    MarkMsgAsRead_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkMsgAsRead_ParamsDefaultTypeInternal _MarkMsgAsRead_Params_default_instance_;
PROTOBUF_CONSTEXPR MarkMsgAsRead::MarkMsgAsRead(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MarkMsgAsReadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkMsgAsReadDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkMsgAsReadDefaultTypeInternal() {}
  union {
    MarkMsgAsRead _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkMsgAsReadDefaultTypeInternal _MarkMsgAsRead_default_instance_;
PROTOBUF_CONSTEXPR SetGroupKick_Params::SetGroupKick_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.reject_add_request_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupKick_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupKick_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupKick_ParamsDefaultTypeInternal() {}
  union {
    SetGroupKick_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupKick_ParamsDefaultTypeInternal _SetGroupKick_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupKick::SetGroupKick(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupKickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupKickDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupKickDefaultTypeInternal() {}
  union {
    SetGroupKick _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupKickDefaultTypeInternal _SetGroupKick_default_instance_;
PROTOBUF_CONSTEXPR SetGroupBan_Params::SetGroupBan_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupBan_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupBan_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupBan_ParamsDefaultTypeInternal() {}
  union {
    SetGroupBan_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupBan_ParamsDefaultTypeInternal _SetGroupBan_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupBan::SetGroupBan(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupBanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupBanDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupBanDefaultTypeInternal() {}
  union {
    SetGroupBan _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupBanDefaultTypeInternal _SetGroupBan_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAnonymousBan_Params::SetGroupAnonymousBan_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.anonymous_flag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.anonymous_)*/nullptr
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAnonymousBan_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAnonymousBan_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAnonymousBan_ParamsDefaultTypeInternal() {}
  union {
    SetGroupAnonymousBan_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAnonymousBan_ParamsDefaultTypeInternal _SetGroupAnonymousBan_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAnonymousBan::SetGroupAnonymousBan(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAnonymousBanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAnonymousBanDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAnonymousBanDefaultTypeInternal() {}
  union {
    SetGroupAnonymousBan _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAnonymousBanDefaultTypeInternal _SetGroupAnonymousBan_default_instance_;
PROTOBUF_CONSTEXPR SetGroupWholeBan_Params::SetGroupWholeBan_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupWholeBan_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupWholeBan_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupWholeBan_ParamsDefaultTypeInternal() {}
  union {
    SetGroupWholeBan_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupWholeBan_ParamsDefaultTypeInternal _SetGroupWholeBan_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupWholeBan::SetGroupWholeBan(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupWholeBanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupWholeBanDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupWholeBanDefaultTypeInternal() {}
  union {
    SetGroupWholeBan _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupWholeBanDefaultTypeInternal _SetGroupWholeBan_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAdmin_Params::SetGroupAdmin_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAdmin_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAdmin_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAdmin_ParamsDefaultTypeInternal() {}
  union {
    SetGroupAdmin_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAdmin_ParamsDefaultTypeInternal _SetGroupAdmin_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAdmin::SetGroupAdmin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAdminDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAdminDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAdminDefaultTypeInternal() {}
  union {
    SetGroupAdmin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAdminDefaultTypeInternal _SetGroupAdmin_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAnonymous_Params::SetGroupAnonymous_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAnonymous_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAnonymous_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAnonymous_ParamsDefaultTypeInternal() {}
  union {
    SetGroupAnonymous_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAnonymous_ParamsDefaultTypeInternal _SetGroupAnonymous_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAnonymous::SetGroupAnonymous(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAnonymousDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAnonymousDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAnonymousDefaultTypeInternal() {}
  union {
    SetGroupAnonymous _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAnonymousDefaultTypeInternal _SetGroupAnonymous_default_instance_;
PROTOBUF_CONSTEXPR SetGroupCard_Params::SetGroupCard_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.card_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupCard_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupCard_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupCard_ParamsDefaultTypeInternal() {}
  union {
    SetGroupCard_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupCard_ParamsDefaultTypeInternal _SetGroupCard_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupCard::SetGroupCard(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupCardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupCardDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupCardDefaultTypeInternal() {}
  union {
    SetGroupCard _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupCardDefaultTypeInternal _SetGroupCard_default_instance_;
PROTOBUF_CONSTEXPR SetGroupName_Params::SetGroupName_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupName_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupName_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupName_ParamsDefaultTypeInternal() {}
  union {
    SetGroupName_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupName_ParamsDefaultTypeInternal _SetGroupName_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupName::SetGroupName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupNameDefaultTypeInternal() {}
  union {
    SetGroupName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupNameDefaultTypeInternal _SetGroupName_default_instance_;
PROTOBUF_CONSTEXPR SetGroupLeave_Params::SetGroupLeave_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.is_dismiss_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupLeave_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupLeave_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupLeave_ParamsDefaultTypeInternal() {}
  union {
    SetGroupLeave_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupLeave_ParamsDefaultTypeInternal _SetGroupLeave_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupLeave::SetGroupLeave(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupLeaveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupLeaveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupLeaveDefaultTypeInternal() {}
  union {
    SetGroupLeave _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupLeaveDefaultTypeInternal _SetGroupLeave_default_instance_;
PROTOBUF_CONSTEXPR SetGroupSpecialTitle_Params::SetGroupSpecialTitle_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.special_title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupSpecialTitle_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupSpecialTitle_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupSpecialTitle_ParamsDefaultTypeInternal() {}
  union {
    SetGroupSpecialTitle_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupSpecialTitle_ParamsDefaultTypeInternal _SetGroupSpecialTitle_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupSpecialTitle::SetGroupSpecialTitle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupSpecialTitleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupSpecialTitleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupSpecialTitleDefaultTypeInternal() {}
  union {
    SetGroupSpecialTitle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupSpecialTitleDefaultTypeInternal _SetGroupSpecialTitle_default_instance_;
PROTOBUF_CONSTEXPR SendGroupSign_Params::SendGroupSign_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupSign_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupSign_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupSign_ParamsDefaultTypeInternal() {}
  union {
    SendGroupSign_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupSign_ParamsDefaultTypeInternal _SendGroupSign_Params_default_instance_;
PROTOBUF_CONSTEXPR SendGroupSign::SendGroupSign(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupSignDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupSignDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupSignDefaultTypeInternal() {}
  union {
    SendGroupSign _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupSignDefaultTypeInternal _SendGroupSign_default_instance_;
PROTOBUF_CONSTEXPR SetFriendAddRequest_Params::SetFriendAddRequest_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remark_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.approve_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetFriendAddRequest_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFriendAddRequest_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFriendAddRequest_ParamsDefaultTypeInternal() {}
  union {
    SetFriendAddRequest_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFriendAddRequest_ParamsDefaultTypeInternal _SetFriendAddRequest_Params_default_instance_;
PROTOBUF_CONSTEXPR SetFriendAddRequest::SetFriendAddRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetFriendAddRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFriendAddRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFriendAddRequestDefaultTypeInternal() {}
  union {
    SetFriendAddRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFriendAddRequestDefaultTypeInternal _SetFriendAddRequest_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAddRequest_Params::SetGroupAddRequest_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sub_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.approve_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAddRequest_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAddRequest_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAddRequest_ParamsDefaultTypeInternal() {}
  union {
    SetGroupAddRequest_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAddRequest_ParamsDefaultTypeInternal _SetGroupAddRequest_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupAddRequest::SetGroupAddRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupAddRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupAddRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupAddRequestDefaultTypeInternal() {}
  union {
    SetGroupAddRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupAddRequestDefaultTypeInternal _SetGroupAddRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLoginInfo_Params::GetLoginInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLoginInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLoginInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLoginInfo_ParamsDefaultTypeInternal() {}
  union {
    GetLoginInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLoginInfo_ParamsDefaultTypeInternal _GetLoginInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetLoginInfo::GetLoginInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLoginInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLoginInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLoginInfoDefaultTypeInternal() {}
  union {
    GetLoginInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLoginInfoDefaultTypeInternal _GetLoginInfo_default_instance_;
PROTOBUF_CONSTEXPR GetLoginInfoResp::GetLoginInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLoginInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLoginInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLoginInfoRespDefaultTypeInternal() {}
  union {
    GetLoginInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLoginInfoRespDefaultTypeInternal _GetLoginInfoResp_default_instance_;
PROTOBUF_CONSTEXPR QiDianGetAccountInfo::QiDianGetAccountInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QiDianGetAccountInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QiDianGetAccountInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QiDianGetAccountInfoDefaultTypeInternal() {}
  union {
    QiDianGetAccountInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QiDianGetAccountInfoDefaultTypeInternal _QiDianGetAccountInfo_default_instance_;
PROTOBUF_CONSTEXPR QiDianGetAccountInfoResp::QiDianGetAccountInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ext_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.master_id_)*/int64_t{0}
  , /*decltype(_impl_.create_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QiDianGetAccountInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QiDianGetAccountInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QiDianGetAccountInfoRespDefaultTypeInternal() {}
  union {
    QiDianGetAccountInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QiDianGetAccountInfoRespDefaultTypeInternal _QiDianGetAccountInfoResp_default_instance_;
PROTOBUF_CONSTEXPR SetQQProfile_Params::SetQQProfile_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.company_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.college_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.personal_note_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetQQProfile_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetQQProfile_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetQQProfile_ParamsDefaultTypeInternal() {}
  union {
    SetQQProfile_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetQQProfile_ParamsDefaultTypeInternal _SetQQProfile_Params_default_instance_;
PROTOBUF_CONSTEXPR SetQQProfile::SetQQProfile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetQQProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetQQProfileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetQQProfileDefaultTypeInternal() {}
  union {
    SetQQProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetQQProfileDefaultTypeInternal _SetQQProfile_default_instance_;
PROTOBUF_CONSTEXPR GetStrangerInfo_Params::GetStrangerInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStrangerInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStrangerInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStrangerInfo_ParamsDefaultTypeInternal() {}
  union {
    GetStrangerInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStrangerInfo_ParamsDefaultTypeInternal _GetStrangerInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetStrangerInfo::GetStrangerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStrangerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStrangerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStrangerInfoDefaultTypeInternal() {}
  union {
    GetStrangerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStrangerInfoDefaultTypeInternal _GetStrangerInfo_default_instance_;
PROTOBUF_CONSTEXPR GetStrangerInfoResp::GetStrangerInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sex_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.qid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.login_days_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStrangerInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStrangerInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStrangerInfoRespDefaultTypeInternal() {}
  union {
    GetStrangerInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStrangerInfoRespDefaultTypeInternal _GetStrangerInfoResp_default_instance_;
PROTOBUF_CONSTEXPR GetFriendList::GetFriendList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFriendListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendListDefaultTypeInternal() {}
  union {
    GetFriendList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendListDefaultTypeInternal _GetFriendList_default_instance_;
PROTOBUF_CONSTEXPR GetFriendListResp_Friend::GetFriendListResp_Friend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remark_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFriendListResp_FriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendListResp_FriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendListResp_FriendDefaultTypeInternal() {}
  union {
    GetFriendListResp_Friend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendListResp_FriendDefaultTypeInternal _GetFriendListResp_Friend_default_instance_;
PROTOBUF_CONSTEXPR GetFriendListResp::GetFriendListResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.friends_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFriendListRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendListRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendListRespDefaultTypeInternal() {}
  union {
    GetFriendListResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendListRespDefaultTypeInternal _GetFriendListResp_default_instance_;
PROTOBUF_CONSTEXPR UnidirectionalFriendList::UnidirectionalFriendList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnidirectionalFriendListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnidirectionalFriendListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnidirectionalFriendListDefaultTypeInternal() {}
  union {
    UnidirectionalFriendList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnidirectionalFriendListDefaultTypeInternal _UnidirectionalFriendList_default_instance_;
PROTOBUF_CONSTEXPR UnidirectionalFriendListResp_Friend::UnidirectionalFriendListResp_Friend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.source_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnidirectionalFriendListResp_FriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnidirectionalFriendListResp_FriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnidirectionalFriendListResp_FriendDefaultTypeInternal() {}
  union {
    UnidirectionalFriendListResp_Friend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnidirectionalFriendListResp_FriendDefaultTypeInternal _UnidirectionalFriendListResp_Friend_default_instance_;
PROTOBUF_CONSTEXPR UnidirectionalFriendListResp::UnidirectionalFriendListResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.friend__)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnidirectionalFriendListRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnidirectionalFriendListRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnidirectionalFriendListRespDefaultTypeInternal() {}
  union {
    UnidirectionalFriendListResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnidirectionalFriendListRespDefaultTypeInternal _UnidirectionalFriendListResp_default_instance_;
PROTOBUF_CONSTEXPR DeleteFriend_Params::DeleteFriend_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteFriend_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFriend_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFriend_ParamsDefaultTypeInternal() {}
  union {
    DeleteFriend_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFriend_ParamsDefaultTypeInternal _DeleteFriend_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteFriend::DeleteFriend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteFriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFriendDefaultTypeInternal() {}
  union {
    DeleteFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFriendDefaultTypeInternal _DeleteFriend_default_instance_;
PROTOBUF_CONSTEXPR GetGroupInfo_Params::GetGroupInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupInfo_ParamsDefaultTypeInternal() {}
  union {
    GetGroupInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupInfo_ParamsDefaultTypeInternal _GetGroupInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupInfo::GetGroupInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupInfoDefaultTypeInternal() {}
  union {
    GetGroupInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupInfoDefaultTypeInternal _GetGroupInfo_default_instance_;
PROTOBUF_CONSTEXPR GetGroupInfoResp::GetGroupInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_memo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.group_create_time_)*/0u
  , /*decltype(_impl_.group_level_)*/0u
  , /*decltype(_impl_.member_count_)*/0
  , /*decltype(_impl_.max_member_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupInfoRespDefaultTypeInternal() {}
  union {
    GetGroupInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupInfoRespDefaultTypeInternal _GetGroupInfoResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupList_Params::GetGroupList_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupList_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupList_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupList_ParamsDefaultTypeInternal() {}
  union {
    GetGroupList_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupList_ParamsDefaultTypeInternal _GetGroupList_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupList::GetGroupList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupListDefaultTypeInternal() {}
  union {
    GetGroupList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupListDefaultTypeInternal _GetGroupList_default_instance_;
PROTOBUF_CONSTEXPR GetGroupListResp::GetGroupListResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_list_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupListRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupListRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupListRespDefaultTypeInternal() {}
  union {
    GetGroupListResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupListRespDefaultTypeInternal _GetGroupListResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberInfo_Params::GetGroupMemberInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberInfo_ParamsDefaultTypeInternal() {}
  union {
    GetGroupMemberInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberInfo_ParamsDefaultTypeInternal _GetGroupMemberInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberInfo::GetGroupMemberInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberInfoDefaultTypeInternal() {}
  union {
    GetGroupMemberInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberInfoDefaultTypeInternal _GetGroupMemberInfo_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberInfoResp::GetGroupMemberInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.card_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sex_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.area_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.level_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.role_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_.join_time_)*/0
  , /*decltype(_impl_.last_sent_time_)*/0
  , /*decltype(_impl_.unfriendly_)*/false
  , /*decltype(_impl_.card_changeable_)*/false
  , /*decltype(_impl_.title_expire_time_)*/int64_t{0}
  , /*decltype(_impl_.shut_up_timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberInfoRespDefaultTypeInternal() {}
  union {
    GetGroupMemberInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberInfoRespDefaultTypeInternal _GetGroupMemberInfoResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberList_Params::GetGroupMemberList_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberList_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberList_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberList_ParamsDefaultTypeInternal() {}
  union {
    GetGroupMemberList_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberList_ParamsDefaultTypeInternal _GetGroupMemberList_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberList::GetGroupMemberList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberListDefaultTypeInternal() {}
  union {
    GetGroupMemberList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberListDefaultTypeInternal _GetGroupMemberList_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMemberListResp::GetGroupMemberListResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_member_list_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMemberListRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMemberListRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMemberListRespDefaultTypeInternal() {}
  union {
    GetGroupMemberListResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMemberListRespDefaultTypeInternal _GetGroupMemberListResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupHonorInfo_Params::GetGroupHonorInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupHonorInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupHonorInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupHonorInfo_ParamsDefaultTypeInternal() {}
  union {
    GetGroupHonorInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupHonorInfo_ParamsDefaultTypeInternal _GetGroupHonorInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupHonorInfo::GetGroupHonorInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupHonorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupHonorInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupHonorInfoDefaultTypeInternal() {}
  union {
    GetGroupHonorInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupHonorInfoDefaultTypeInternal _GetGroupHonorInfo_default_instance_;
PROTOBUF_CONSTEXPR GetGroupHonorInfoResp_Talkative::GetGroupHonorInfoResp_Talkative(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_.day_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupHonorInfoResp_TalkativeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupHonorInfoResp_TalkativeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupHonorInfoResp_TalkativeDefaultTypeInternal() {}
  union {
    GetGroupHonorInfoResp_Talkative _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupHonorInfoResp_TalkativeDefaultTypeInternal _GetGroupHonorInfoResp_Talkative_default_instance_;
PROTOBUF_CONSTEXPR GetGroupHonorInfoResp::GetGroupHonorInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.talkative_list_)*/{}
  , /*decltype(_impl_.performer_list_)*/{}
  , /*decltype(_impl_.legend_list_)*/{}
  , /*decltype(_impl_.strong_newbie_list_)*/{}
  , /*decltype(_impl_.emotion_list_)*/{}
  , /*decltype(_impl_.current_talkative_)*/nullptr
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupHonorInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupHonorInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupHonorInfoRespDefaultTypeInternal() {}
  union {
    GetGroupHonorInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupHonorInfoRespDefaultTypeInternal _GetGroupHonorInfoResp_default_instance_;
PROTOBUF_CONSTEXPR GetCoolies_Params::GetCoolies_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.domain_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCoolies_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCoolies_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCoolies_ParamsDefaultTypeInternal() {}
  union {
    GetCoolies_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCoolies_ParamsDefaultTypeInternal _GetCoolies_Params_default_instance_;
PROTOBUF_CONSTEXPR GetCoolies::GetCoolies(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCooliesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCooliesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCooliesDefaultTypeInternal() {}
  union {
    GetCoolies _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCooliesDefaultTypeInternal _GetCoolies_default_instance_;
PROTOBUF_CONSTEXPR GetCooliesResp::GetCooliesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cookies_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCooliesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCooliesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCooliesRespDefaultTypeInternal() {}
  union {
    GetCooliesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCooliesRespDefaultTypeInternal _GetCooliesResp_default_instance_;
PROTOBUF_CONSTEXPR GetCsrfToken::GetCsrfToken(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCsrfTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCsrfTokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCsrfTokenDefaultTypeInternal() {}
  union {
    GetCsrfToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCsrfTokenDefaultTypeInternal _GetCsrfToken_default_instance_;
PROTOBUF_CONSTEXPR GetCsrfTokenResp::GetCsrfTokenResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCsrfTokenRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCsrfTokenRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCsrfTokenRespDefaultTypeInternal() {}
  union {
    GetCsrfTokenResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCsrfTokenRespDefaultTypeInternal _GetCsrfTokenResp_default_instance_;
PROTOBUF_CONSTEXPR GetCredentials_Params::GetCredentials_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.domain_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCredentials_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCredentials_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCredentials_ParamsDefaultTypeInternal() {}
  union {
    GetCredentials_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCredentials_ParamsDefaultTypeInternal _GetCredentials_Params_default_instance_;
PROTOBUF_CONSTEXPR GetCredentials::GetCredentials(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCredentialsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCredentialsDefaultTypeInternal() {}
  union {
    GetCredentials _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCredentialsDefaultTypeInternal _GetCredentials_default_instance_;
PROTOBUF_CONSTEXPR GetCredentialsResp::GetCredentialsResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cookies_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.csrf_token_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCredentialsRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCredentialsRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCredentialsRespDefaultTypeInternal() {}
  union {
    GetCredentialsResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCredentialsRespDefaultTypeInternal _GetCredentialsResp_default_instance_;
PROTOBUF_CONSTEXPR GetRecord_Params::GetRecord_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.out_format_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRecord_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecord_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecord_ParamsDefaultTypeInternal() {}
  union {
    GetRecord_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecord_ParamsDefaultTypeInternal _GetRecord_Params_default_instance_;
PROTOBUF_CONSTEXPR GetRecord::GetRecord(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordDefaultTypeInternal() {}
  union {
    GetRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordDefaultTypeInternal _GetRecord_default_instance_;
PROTOBUF_CONSTEXPR GetRecordResp::GetRecordResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRecordRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordRespDefaultTypeInternal() {}
  union {
    GetRecordResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordRespDefaultTypeInternal _GetRecordResp_default_instance_;
PROTOBUF_CONSTEXPR CanSendImage::CanSendImage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CanSendImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CanSendImageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CanSendImageDefaultTypeInternal() {}
  union {
    CanSendImage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CanSendImageDefaultTypeInternal _CanSendImage_default_instance_;
PROTOBUF_CONSTEXPR CanSendImageResp::CanSendImageResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.yes_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CanSendImageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CanSendImageRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CanSendImageRespDefaultTypeInternal() {}
  union {
    CanSendImageResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CanSendImageRespDefaultTypeInternal _CanSendImageResp_default_instance_;
PROTOBUF_CONSTEXPR CanSendRecord::CanSendRecord(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CanSendRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CanSendRecordDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CanSendRecordDefaultTypeInternal() {}
  union {
    CanSendRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CanSendRecordDefaultTypeInternal _CanSendRecord_default_instance_;
PROTOBUF_CONSTEXPR CanSendRecordResp::CanSendRecordResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.yes_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CanSendRecordRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CanSendRecordRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CanSendRecordRespDefaultTypeInternal() {}
  union {
    CanSendRecordResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CanSendRecordRespDefaultTypeInternal _CanSendRecordResp_default_instance_;
PROTOBUF_CONSTEXPR GetVersionInfo::GetVersionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVersionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionInfoDefaultTypeInternal() {}
  union {
    GetVersionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionInfoDefaultTypeInternal _GetVersionInfo_default_instance_;
PROTOBUF_CONSTEXPR GetVersionInfoResp::GetVersionInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.app_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.app_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.app_full_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.protocol_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.coolq_edition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.coolq_directory_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.plugin_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.plugin_build_configuration_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.runtime_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.runtime_os_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cqhttp_)*/false
  , /*decltype(_impl_.plugin_build_number_)*/0
  , /*decltype(_impl_.protocol_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVersionInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionInfoRespDefaultTypeInternal() {}
  union {
    GetVersionInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionInfoRespDefaultTypeInternal _GetVersionInfoResp_default_instance_;
PROTOBUF_CONSTEXPR SetRestart_Params::SetRestart_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delay_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetRestart_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRestart_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRestart_ParamsDefaultTypeInternal() {}
  union {
    SetRestart_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRestart_ParamsDefaultTypeInternal _SetRestart_Params_default_instance_;
PROTOBUF_CONSTEXPR SetRestart::SetRestart(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetRestartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRestartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRestartDefaultTypeInternal() {}
  union {
    SetRestart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRestartDefaultTypeInternal _SetRestart_default_instance_;
PROTOBUF_CONSTEXPR CleanCache::CleanCache(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CleanCacheDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CleanCacheDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CleanCacheDefaultTypeInternal() {}
  union {
    CleanCache _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CleanCacheDefaultTypeInternal _CleanCache_default_instance_;
PROTOBUF_CONSTEXPR SetGroupPortrait_Params::SetGroupPortrait_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.cache_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupPortrait_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupPortrait_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupPortrait_ParamsDefaultTypeInternal() {}
  union {
    SetGroupPortrait_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupPortrait_ParamsDefaultTypeInternal _SetGroupPortrait_Params_default_instance_;
PROTOBUF_CONSTEXPR SetGroupPortrait::SetGroupPortrait(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetGroupPortraitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGroupPortraitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGroupPortraitDefaultTypeInternal() {}
  union {
    SetGroupPortrait _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGroupPortraitDefaultTypeInternal _SetGroupPortrait_default_instance_;
PROTOBUF_CONSTEXPR GetWordSlices_Params::GetWordSlices_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetWordSlices_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWordSlices_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWordSlices_ParamsDefaultTypeInternal() {}
  union {
    GetWordSlices_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWordSlices_ParamsDefaultTypeInternal _GetWordSlices_Params_default_instance_;
PROTOBUF_CONSTEXPR GetWordSlices::GetWordSlices(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetWordSlicesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWordSlicesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWordSlicesDefaultTypeInternal() {}
  union {
    GetWordSlices _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWordSlicesDefaultTypeInternal _GetWordSlices_default_instance_;
PROTOBUF_CONSTEXPR GetWordSlicesResp::GetWordSlicesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.slices_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetWordSlicesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWordSlicesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWordSlicesRespDefaultTypeInternal() {}
  union {
    GetWordSlicesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWordSlicesRespDefaultTypeInternal _GetWordSlicesResp_default_instance_;
PROTOBUF_CONSTEXPR OcrImage_Params::OcrImage_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.image_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OcrImage_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OcrImage_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OcrImage_ParamsDefaultTypeInternal() {}
  union {
    OcrImage_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OcrImage_ParamsDefaultTypeInternal _OcrImage_Params_default_instance_;
PROTOBUF_CONSTEXPR OcrImage::OcrImage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OcrImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OcrImageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OcrImageDefaultTypeInternal() {}
  union {
    OcrImage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OcrImageDefaultTypeInternal _OcrImage_default_instance_;
PROTOBUF_CONSTEXPR OcrImageResp_TextDetection::OcrImageResp_TextDetection(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.coordinates_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.confidence_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OcrImageResp_TextDetectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OcrImageResp_TextDetectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OcrImageResp_TextDetectionDefaultTypeInternal() {}
  union {
    OcrImageResp_TextDetection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OcrImageResp_TextDetectionDefaultTypeInternal _OcrImageResp_TextDetection_default_instance_;
PROTOBUF_CONSTEXPR OcrImageResp::OcrImageResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.texts_)*/{}
  , /*decltype(_impl_.language_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OcrImageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OcrImageRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OcrImageRespDefaultTypeInternal() {}
  union {
    OcrImageResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OcrImageRespDefaultTypeInternal _OcrImageResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupSystemMsg::GetGroupSystemMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupSystemMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupSystemMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupSystemMsgDefaultTypeInternal() {}
  union {
    GetGroupSystemMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupSystemMsgDefaultTypeInternal _GetGroupSystemMsg_default_instance_;
PROTOBUF_CONSTEXPR GetGroupSystemMsgResp_InvitedRequest::GetGroupSystemMsgResp_InvitedRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invitor_nick_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.invitor_uin_)*/int64_t{0}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.actor_)*/int64_t{0}
  , /*decltype(_impl_.checked_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupSystemMsgResp_InvitedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupSystemMsgResp_InvitedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupSystemMsgResp_InvitedRequestDefaultTypeInternal() {}
  union {
    GetGroupSystemMsgResp_InvitedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupSystemMsgResp_InvitedRequestDefaultTypeInternal _GetGroupSystemMsgResp_InvitedRequest_default_instance_;
PROTOBUF_CONSTEXPR GetGroupSystemMsgResp_JoinRequest::GetGroupSystemMsgResp_JoinRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requester_nick_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.requester_uin_)*/int64_t{0}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.actor_)*/int64_t{0}
  , /*decltype(_impl_.checked_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupSystemMsgResp_JoinRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupSystemMsgResp_JoinRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupSystemMsgResp_JoinRequestDefaultTypeInternal() {}
  union {
    GetGroupSystemMsgResp_JoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupSystemMsgResp_JoinRequestDefaultTypeInternal _GetGroupSystemMsgResp_JoinRequest_default_instance_;
PROTOBUF_CONSTEXPR GetGroupSystemMsgResp::GetGroupSystemMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invited_requests_)*/{}
  , /*decltype(_impl_.join_requests_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupSystemMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupSystemMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupSystemMsgRespDefaultTypeInternal() {}
  union {
    GetGroupSystemMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupSystemMsgRespDefaultTypeInternal _GetGroupSystemMsgResp_default_instance_;
PROTOBUF_CONSTEXPR UploadPrivateFile_Params::UploadPrivateFile_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadPrivateFile_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadPrivateFile_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadPrivateFile_ParamsDefaultTypeInternal() {}
  union {
    UploadPrivateFile_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadPrivateFile_ParamsDefaultTypeInternal _UploadPrivateFile_Params_default_instance_;
PROTOBUF_CONSTEXPR UploadPrivateFile::UploadPrivateFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadPrivateFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadPrivateFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadPrivateFileDefaultTypeInternal() {}
  union {
    UploadPrivateFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadPrivateFileDefaultTypeInternal _UploadPrivateFile_default_instance_;
PROTOBUF_CONSTEXPR UploadGroupFile_Params::UploadGroupFile_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.folder_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadGroupFile_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadGroupFile_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadGroupFile_ParamsDefaultTypeInternal() {}
  union {
    UploadGroupFile_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadGroupFile_ParamsDefaultTypeInternal _UploadGroupFile_Params_default_instance_;
PROTOBUF_CONSTEXPR UploadGroupFile::UploadGroupFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadGroupFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadGroupFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadGroupFileDefaultTypeInternal() {}
  union {
    UploadGroupFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadGroupFileDefaultTypeInternal _UploadGroupFile_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileSystemInfo_Params::GetGroupFileSystemInfo_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileSystemInfo_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileSystemInfo_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileSystemInfo_ParamsDefaultTypeInternal() {}
  union {
    GetGroupFileSystemInfo_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileSystemInfo_ParamsDefaultTypeInternal _GetGroupFileSystemInfo_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileSystemInfo::GetGroupFileSystemInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileSystemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileSystemInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileSystemInfoDefaultTypeInternal() {}
  union {
    GetGroupFileSystemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileSystemInfoDefaultTypeInternal _GetGroupFileSystemInfo_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileSystemInfoResp::GetGroupFileSystemInfoResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_count_)*/0
  , /*decltype(_impl_.limit_count_)*/0
  , /*decltype(_impl_.used_space_)*/int64_t{0}
  , /*decltype(_impl_.total_space_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileSystemInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileSystemInfoRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileSystemInfoRespDefaultTypeInternal() {}
  union {
    GetGroupFileSystemInfoResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileSystemInfoRespDefaultTypeInternal _GetGroupFileSystemInfoResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupRootFiles_Params::GetGroupRootFiles_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupRootFiles_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupRootFiles_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupRootFiles_ParamsDefaultTypeInternal() {}
  union {
    GetGroupRootFiles_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupRootFiles_ParamsDefaultTypeInternal _GetGroupRootFiles_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupRootFiles::GetGroupRootFiles(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupRootFilesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupRootFilesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupRootFilesDefaultTypeInternal() {}
  union {
    GetGroupRootFiles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupRootFilesDefaultTypeInternal _GetGroupRootFiles_default_instance_;
PROTOBUF_CONSTEXPR GetGroupRootFilesResp::GetGroupRootFilesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.files_)*/{}
  , /*decltype(_impl_.folders_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupRootFilesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupRootFilesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupRootFilesRespDefaultTypeInternal() {}
  union {
    GetGroupRootFilesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupRootFilesRespDefaultTypeInternal _GetGroupRootFilesResp_default_instance_;
PROTOBUF_CONSTEXPR getGroupFileByFolder_Params::getGroupFileByFolder_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.folder_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getGroupFileByFolder_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getGroupFileByFolder_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getGroupFileByFolder_ParamsDefaultTypeInternal() {}
  union {
    getGroupFileByFolder_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getGroupFileByFolder_ParamsDefaultTypeInternal _getGroupFileByFolder_Params_default_instance_;
PROTOBUF_CONSTEXPR getGroupFileByFolder::getGroupFileByFolder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getGroupFileByFolderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getGroupFileByFolderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getGroupFileByFolderDefaultTypeInternal() {}
  union {
    getGroupFileByFolder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getGroupFileByFolderDefaultTypeInternal _getGroupFileByFolder_default_instance_;
PROTOBUF_CONSTEXPR getGroupFileByFolderResp::getGroupFileByFolderResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.files_)*/{}
  , /*decltype(_impl_.folders_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getGroupFileByFolderRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getGroupFileByFolderRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getGroupFileByFolderRespDefaultTypeInternal() {}
  union {
    getGroupFileByFolderResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getGroupFileByFolderRespDefaultTypeInternal _getGroupFileByFolderResp_default_instance_;
PROTOBUF_CONSTEXPR CreateGroupFileFolder_Params::CreateGroupFileFolder_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateGroupFileFolder_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateGroupFileFolder_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateGroupFileFolder_ParamsDefaultTypeInternal() {}
  union {
    CreateGroupFileFolder_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateGroupFileFolder_ParamsDefaultTypeInternal _CreateGroupFileFolder_Params_default_instance_;
PROTOBUF_CONSTEXPR CreateGroupFileFolder::CreateGroupFileFolder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateGroupFileFolderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateGroupFileFolderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateGroupFileFolderDefaultTypeInternal() {}
  union {
    CreateGroupFileFolder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateGroupFileFolderDefaultTypeInternal _CreateGroupFileFolder_default_instance_;
PROTOBUF_CONSTEXPR DeleteGroupFolder_Params::DeleteGroupFolder_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.folder_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteGroupFolder_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteGroupFolder_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteGroupFolder_ParamsDefaultTypeInternal() {}
  union {
    DeleteGroupFolder_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteGroupFolder_ParamsDefaultTypeInternal _DeleteGroupFolder_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteGroupFolder::DeleteGroupFolder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteGroupFolderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteGroupFolderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteGroupFolderDefaultTypeInternal() {}
  union {
    DeleteGroupFolder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteGroupFolderDefaultTypeInternal _DeleteGroupFolder_default_instance_;
PROTOBUF_CONSTEXPR DeleteGroupFile_Params::DeleteGroupFile_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.busid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteGroupFile_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteGroupFile_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteGroupFile_ParamsDefaultTypeInternal() {}
  union {
    DeleteGroupFile_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteGroupFile_ParamsDefaultTypeInternal _DeleteGroupFile_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteGroupFile::DeleteGroupFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteGroupFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteGroupFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteGroupFileDefaultTypeInternal() {}
  union {
    DeleteGroupFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteGroupFileDefaultTypeInternal _DeleteGroupFile_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileUrl_Params::GetGroupFileUrl_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_.busid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileUrl_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileUrl_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileUrl_ParamsDefaultTypeInternal() {}
  union {
    GetGroupFileUrl_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileUrl_ParamsDefaultTypeInternal _GetGroupFileUrl_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileUrl::GetGroupFileUrl(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileUrlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileUrlDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileUrlDefaultTypeInternal() {}
  union {
    GetGroupFileUrl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileUrlDefaultTypeInternal _GetGroupFileUrl_default_instance_;
PROTOBUF_CONSTEXPR GetGroupFileUrlResp::GetGroupFileUrlResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupFileUrlRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupFileUrlRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupFileUrlRespDefaultTypeInternal() {}
  union {
    GetGroupFileUrlResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupFileUrlRespDefaultTypeInternal _GetGroupFileUrlResp_default_instance_;
PROTOBUF_CONSTEXPR GetStatus::GetStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusDefaultTypeInternal() {}
  union {
    GetStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusDefaultTypeInternal _GetStatus_default_instance_;
PROTOBUF_CONSTEXPR GetStatusResp_Statistics::GetStatusResp_Statistics(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.packetreceived_)*/uint64_t{0u}
  , /*decltype(_impl_.packetsent_)*/uint64_t{0u}
  , /*decltype(_impl_.messagereceived_)*/uint64_t{0u}
  , /*decltype(_impl_.packetlost_)*/0u
  , /*decltype(_impl_.disconnecttimes_)*/0u
  , /*decltype(_impl_.messagesent_)*/uint64_t{0u}
  , /*decltype(_impl_.lastmessagetime_)*/int64_t{0}
  , /*decltype(_impl_.losttimes_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatusResp_StatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusResp_StatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusResp_StatisticsDefaultTypeInternal() {}
  union {
    GetStatusResp_Statistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusResp_StatisticsDefaultTypeInternal _GetStatusResp_Statistics_default_instance_;
PROTOBUF_CONSTEXPR GetStatusResp::GetStatusResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stat_)*/nullptr
  , /*decltype(_impl_.app_initialized_)*/false
  , /*decltype(_impl_.app_enabled_)*/false
  , /*decltype(_impl_.plugins_good_)*/false
  , /*decltype(_impl_.app_good_)*/false
  , /*decltype(_impl_.online_)*/false
  , /*decltype(_impl_.good_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatusRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusRespDefaultTypeInternal() {}
  union {
    GetStatusResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusRespDefaultTypeInternal _GetStatusResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupAtAllRemain_Params::GetGroupAtAllRemain_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupAtAllRemain_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupAtAllRemain_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupAtAllRemain_ParamsDefaultTypeInternal() {}
  union {
    GetGroupAtAllRemain_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupAtAllRemain_ParamsDefaultTypeInternal _GetGroupAtAllRemain_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupAtAllRemain::GetGroupAtAllRemain(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupAtAllRemainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupAtAllRemainDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupAtAllRemainDefaultTypeInternal() {}
  union {
    GetGroupAtAllRemain _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupAtAllRemainDefaultTypeInternal _GetGroupAtAllRemain_default_instance_;
PROTOBUF_CONSTEXPR GetGroupAtAllRemainResp::GetGroupAtAllRemainResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.can_at_all_)*/false
  , /*decltype(_impl_.remain_at_all_count_for_group_)*/0
  , /*decltype(_impl_.remain_at_all_count_for_uin_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupAtAllRemainRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupAtAllRemainRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupAtAllRemainRespDefaultTypeInternal() {}
  union {
    GetGroupAtAllRemainResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupAtAllRemainRespDefaultTypeInternal _GetGroupAtAllRemainResp_default_instance_;
PROTOBUF_CONSTEXPR HandleQuickOperation_Params::HandleQuickOperation_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HandleQuickOperation_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandleQuickOperation_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandleQuickOperation_ParamsDefaultTypeInternal() {}
  union {
    HandleQuickOperation_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandleQuickOperation_ParamsDefaultTypeInternal _HandleQuickOperation_Params_default_instance_;
PROTOBUF_CONSTEXPR HandleQuickOperation::HandleQuickOperation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HandleQuickOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandleQuickOperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandleQuickOperationDefaultTypeInternal() {}
  union {
    HandleQuickOperation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandleQuickOperationDefaultTypeInternal _HandleQuickOperation_default_instance_;
PROTOBUF_CONSTEXPR SendGroupNotice_Params::SendGroupNotice_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.image_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupNotice_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupNotice_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupNotice_ParamsDefaultTypeInternal() {}
  union {
    SendGroupNotice_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupNotice_ParamsDefaultTypeInternal _SendGroupNotice_Params_default_instance_;
PROTOBUF_CONSTEXPR SendGroupNotice::SendGroupNotice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendGroupNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendGroupNoticeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendGroupNoticeDefaultTypeInternal() {}
  union {
    SendGroupNotice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendGroupNoticeDefaultTypeInternal _SendGroupNotice_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNotice_Params::GetGroupNotice_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNotice_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNotice_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNotice_ParamsDefaultTypeInternal() {}
  union {
    GetGroupNotice_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNotice_ParamsDefaultTypeInternal _GetGroupNotice_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNotice::GetGroupNotice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNoticeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNoticeDefaultTypeInternal() {}
  union {
    GetGroupNotice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNoticeDefaultTypeInternal _GetGroupNotice_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNoticeResp_Notice_NoticeMessage_Image::GetGroupNoticeResp_Notice_NoticeMessage_Image(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.height_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.width_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNoticeResp_Notice_NoticeMessage_ImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNoticeResp_Notice_NoticeMessage_ImageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNoticeResp_Notice_NoticeMessage_ImageDefaultTypeInternal() {}
  union {
    GetGroupNoticeResp_Notice_NoticeMessage_Image _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNoticeResp_Notice_NoticeMessage_ImageDefaultTypeInternal _GetGroupNoticeResp_Notice_NoticeMessage_Image_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNoticeResp_Notice_NoticeMessage::GetGroupNoticeResp_Notice_NoticeMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNoticeResp_Notice_NoticeMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNoticeResp_Notice_NoticeMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNoticeResp_Notice_NoticeMessageDefaultTypeInternal() {}
  union {
    GetGroupNoticeResp_Notice_NoticeMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNoticeResp_Notice_NoticeMessageDefaultTypeInternal _GetGroupNoticeResp_Notice_NoticeMessage_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNoticeResp_Notice::GetGroupNoticeResp_Notice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/nullptr
  , /*decltype(_impl_.sender_id_)*/int64_t{0}
  , /*decltype(_impl_.publish_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNoticeResp_NoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNoticeResp_NoticeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNoticeResp_NoticeDefaultTypeInternal() {}
  union {
    GetGroupNoticeResp_Notice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNoticeResp_NoticeDefaultTypeInternal _GetGroupNoticeResp_Notice_default_instance_;
PROTOBUF_CONSTEXPR GetGroupNoticeResp::GetGroupNoticeResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.notices_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupNoticeRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupNoticeRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupNoticeRespDefaultTypeInternal() {}
  union {
    GetGroupNoticeResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupNoticeRespDefaultTypeInternal _GetGroupNoticeResp_default_instance_;
PROTOBUF_CONSTEXPR ReloadEventFilter_Params::ReloadEventFilter_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReloadEventFilter_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReloadEventFilter_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReloadEventFilter_ParamsDefaultTypeInternal() {}
  union {
    ReloadEventFilter_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReloadEventFilter_ParamsDefaultTypeInternal _ReloadEventFilter_Params_default_instance_;
PROTOBUF_CONSTEXPR ReloadEventFilter::ReloadEventFilter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReloadEventFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReloadEventFilterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReloadEventFilterDefaultTypeInternal() {}
  union {
    ReloadEventFilter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReloadEventFilterDefaultTypeInternal _ReloadEventFilter_default_instance_;
PROTOBUF_CONSTEXPR DownloadFile_Params::DownloadFile_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.headers_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.thread_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DownloadFile_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadFile_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadFile_ParamsDefaultTypeInternal() {}
  union {
    DownloadFile_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadFile_ParamsDefaultTypeInternal _DownloadFile_Params_default_instance_;
PROTOBUF_CONSTEXPR DownloadFile::DownloadFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DownloadFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadFileDefaultTypeInternal() {}
  union {
    DownloadFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadFileDefaultTypeInternal _DownloadFile_default_instance_;
PROTOBUF_CONSTEXPR DownloadFileResp::DownloadFileResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DownloadFileRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadFileRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadFileRespDefaultTypeInternal() {}
  union {
    DownloadFileResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadFileRespDefaultTypeInternal _DownloadFileResp_default_instance_;
PROTOBUF_CONSTEXPR GetOnlineClients_Params::GetOnlineClients_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.no_cache_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOnlineClients_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOnlineClients_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOnlineClients_ParamsDefaultTypeInternal() {}
  union {
    GetOnlineClients_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOnlineClients_ParamsDefaultTypeInternal _GetOnlineClients_Params_default_instance_;
PROTOBUF_CONSTEXPR GetOnlineClients::GetOnlineClients(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOnlineClientsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOnlineClientsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOnlineClientsDefaultTypeInternal() {}
  union {
    GetOnlineClients _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOnlineClientsDefaultTypeInternal _GetOnlineClients_default_instance_;
PROTOBUF_CONSTEXPR GetOnlineClientsResp::GetOnlineClientsResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.clients_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOnlineClientsRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOnlineClientsRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOnlineClientsRespDefaultTypeInternal() {}
  union {
    GetOnlineClientsResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOnlineClientsRespDefaultTypeInternal _GetOnlineClientsResp_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMsgHistory_Params::GetGroupMsgHistory_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_seq_)*/int64_t{0}
  , /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMsgHistory_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMsgHistory_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMsgHistory_ParamsDefaultTypeInternal() {}
  union {
    GetGroupMsgHistory_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMsgHistory_ParamsDefaultTypeInternal _GetGroupMsgHistory_Params_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMsgHistory::GetGroupMsgHistory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMsgHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMsgHistoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMsgHistoryDefaultTypeInternal() {}
  union {
    GetGroupMsgHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMsgHistoryDefaultTypeInternal _GetGroupMsgHistory_default_instance_;
PROTOBUF_CONSTEXPR GetGroupMsgHistoryResp::GetGroupMsgHistoryResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGroupMsgHistoryRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGroupMsgHistoryRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGroupMsgHistoryRespDefaultTypeInternal() {}
  union {
    GetGroupMsgHistoryResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGroupMsgHistoryRespDefaultTypeInternal _GetGroupMsgHistoryResp_default_instance_;
PROTOBUF_CONSTEXPR SetEssenceMsg_Params::SetEssenceMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetEssenceMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetEssenceMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetEssenceMsg_ParamsDefaultTypeInternal() {}
  union {
    SetEssenceMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetEssenceMsg_ParamsDefaultTypeInternal _SetEssenceMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR SetEssenceMsg::SetEssenceMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetEssenceMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetEssenceMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetEssenceMsgDefaultTypeInternal() {}
  union {
    SetEssenceMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetEssenceMsgDefaultTypeInternal _SetEssenceMsg_default_instance_;
PROTOBUF_CONSTEXPR DeleteEssenceMsg_Params::DeleteEssenceMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteEssenceMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteEssenceMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteEssenceMsg_ParamsDefaultTypeInternal() {}
  union {
    DeleteEssenceMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteEssenceMsg_ParamsDefaultTypeInternal _DeleteEssenceMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteEssenceMsg::DeleteEssenceMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteEssenceMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteEssenceMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteEssenceMsgDefaultTypeInternal() {}
  union {
    DeleteEssenceMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteEssenceMsgDefaultTypeInternal _DeleteEssenceMsg_default_instance_;
PROTOBUF_CONSTEXPR GetEssenceMsgList_Params::GetEssenceMsgList_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEssenceMsgList_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEssenceMsgList_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEssenceMsgList_ParamsDefaultTypeInternal() {}
  union {
    GetEssenceMsgList_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEssenceMsgList_ParamsDefaultTypeInternal _GetEssenceMsgList_Params_default_instance_;
PROTOBUF_CONSTEXPR GetEssenceMsgList::GetEssenceMsgList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEssenceMsgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEssenceMsgListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEssenceMsgListDefaultTypeInternal() {}
  union {
    GetEssenceMsgList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEssenceMsgListDefaultTypeInternal _GetEssenceMsgList_default_instance_;
PROTOBUF_CONSTEXPR GetEssenceMsgListResp::GetEssenceMsgListResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_nick_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operator_nick_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sender_id_)*/int64_t{0}
  , /*decltype(_impl_.sender_time_)*/int64_t{0}
  , /*decltype(_impl_.operator_id_)*/int64_t{0}
  , /*decltype(_impl_.operator_time_)*/int64_t{0}
  , /*decltype(_impl_.message_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEssenceMsgListRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEssenceMsgListRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEssenceMsgListRespDefaultTypeInternal() {}
  union {
    GetEssenceMsgListResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEssenceMsgListRespDefaultTypeInternal _GetEssenceMsgListResp_default_instance_;
PROTOBUF_CONSTEXPR CheckUlrSafely_Params::CheckUlrSafely_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckUlrSafely_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckUlrSafely_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckUlrSafely_ParamsDefaultTypeInternal() {}
  union {
    CheckUlrSafely_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckUlrSafely_ParamsDefaultTypeInternal _CheckUlrSafely_Params_default_instance_;
PROTOBUF_CONSTEXPR CheckUlrSafely::CheckUlrSafely(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckUlrSafelyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckUlrSafelyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckUlrSafelyDefaultTypeInternal() {}
  union {
    CheckUlrSafely _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckUlrSafelyDefaultTypeInternal _CheckUlrSafely_default_instance_;
PROTOBUF_CONSTEXPR CheckUlrSafelyResp::CheckUlrSafelyResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckUlrSafelyRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckUlrSafelyRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckUlrSafelyRespDefaultTypeInternal() {}
  union {
    CheckUlrSafelyResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckUlrSafelyRespDefaultTypeInternal _CheckUlrSafelyResp_default_instance_;
PROTOBUF_CONSTEXPR GetModelShow_Params::GetModelShow_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelShow_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelShow_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelShow_ParamsDefaultTypeInternal() {}
  union {
    GetModelShow_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelShow_ParamsDefaultTypeInternal _GetModelShow_Params_default_instance_;
PROTOBUF_CONSTEXPR GetModelShow::GetModelShow(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelShowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelShowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelShowDefaultTypeInternal() {}
  union {
    GetModelShow _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelShowDefaultTypeInternal _GetModelShow_default_instance_;
PROTOBUF_CONSTEXPR GetModelShowResp_Variant::GetModelShowResp_Variant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_show_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.need_pay_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelShowResp_VariantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelShowResp_VariantDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelShowResp_VariantDefaultTypeInternal() {}
  union {
    GetModelShowResp_Variant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelShowResp_VariantDefaultTypeInternal _GetModelShowResp_Variant_default_instance_;
PROTOBUF_CONSTEXPR GetModelShowResp::GetModelShowResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variants_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelShowRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelShowRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelShowRespDefaultTypeInternal() {}
  union {
    GetModelShowResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelShowRespDefaultTypeInternal _GetModelShowResp_default_instance_;
PROTOBUF_CONSTEXPR SetModelShow_Params::SetModelShow_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_show_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetModelShow_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModelShow_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModelShow_ParamsDefaultTypeInternal() {}
  union {
    SetModelShow_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModelShow_ParamsDefaultTypeInternal _SetModelShow_Params_default_instance_;
PROTOBUF_CONSTEXPR SetModelShow::SetModelShow(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetModelShowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModelShowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModelShowDefaultTypeInternal() {}
  union {
    SetModelShow _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModelShowDefaultTypeInternal _SetModelShow_default_instance_;
PROTOBUF_CONSTEXPR DeleteUnidirectionalFriend_Params::DeleteUnidirectionalFriend_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteUnidirectionalFriend_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUnidirectionalFriend_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUnidirectionalFriend_ParamsDefaultTypeInternal() {}
  union {
    DeleteUnidirectionalFriend_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUnidirectionalFriend_ParamsDefaultTypeInternal _DeleteUnidirectionalFriend_Params_default_instance_;
PROTOBUF_CONSTEXPR DeleteUnidirectionalFriend::DeleteUnidirectionalFriend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteUnidirectionalFriendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUnidirectionalFriendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUnidirectionalFriendDefaultTypeInternal() {}
  union {
    DeleteUnidirectionalFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUnidirectionalFriendDefaultTypeInternal _DeleteUnidirectionalFriend_default_instance_;
PROTOBUF_CONSTEXPR SendPrivateForwardMsg_Params::SendPrivateForwardMsg_Params(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.user_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateForwardMsg_ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateForwardMsg_ParamsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateForwardMsg_ParamsDefaultTypeInternal() {}
  union {
    SendPrivateForwardMsg_Params _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateForwardMsg_ParamsDefaultTypeInternal _SendPrivateForwardMsg_Params_default_instance_;
PROTOBUF_CONSTEXPR SendPrivateForwardMsg::SendPrivateForwardMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.echo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_.action_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateForwardMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateForwardMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateForwardMsgDefaultTypeInternal() {}
  union {
    SendPrivateForwardMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateForwardMsgDefaultTypeInternal _SendPrivateForwardMsg_default_instance_;
PROTOBUF_CONSTEXPR SendPrivateForwardMsgResp::SendPrivateForwardMsgResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.forward_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendPrivateForwardMsgRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendPrivateForwardMsgRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendPrivateForwardMsgRespDefaultTypeInternal() {}
  union {
    SendPrivateForwardMsgResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendPrivateForwardMsgRespDefaultTypeInternal _SendPrivateForwardMsgResp_default_instance_;
}  // namespace cqhttp
static ::_pb::Metadata file_level_metadata_cqhttp_5fapi_2eproto[189];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_cqhttp_5fapi_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_cqhttp_5fapi_2eproto = nullptr;

const uint32_t TableStruct_cqhttp_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg_Params, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg_Params, _impl_.auto_escape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateMsgResp, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg_Params, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg_Params, _impl_.auto_escape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupMsgResp, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg_Params, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsgResp, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupForwardMsgResp, _impl_.forward_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _impl_.message_type_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage_Params, _impl_.auto_escape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessage, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessageResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendMessageResp, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteMsg_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteMsg, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.group_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.real_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.message_type_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.sender_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getMsgResp, _impl_.raw_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp_Messages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp_Messages, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp_Messages, _impl_.sender_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp_Messages, _impl_.time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetForwardMsgResp, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage_Params, _impl_.file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImage, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImageResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImageResp, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImageResp, _impl_.filename_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetImageResp, _impl_.url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::MarkMsgAsRead_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::MarkMsgAsRead_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::MarkMsgAsRead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::MarkMsgAsRead, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::MarkMsgAsRead, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick_Params, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick_Params, _impl_.reject_add_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupKick, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan_Params, _impl_.duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupBan, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan_Params, _impl_.anonymous_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan_Params, _impl_.anonymous_flag_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan_Params, _impl_.duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymousBan, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan_Params, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupWholeBan, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin_Params, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAdmin, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous_Params, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAnonymous, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard_Params, _impl_.card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupCard, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName_Params, _impl_.group_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupName, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave_Params, _impl_.is_dismiss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupLeave, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle_Params, _impl_.special_title_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle_Params, _impl_.duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupSpecialTitle, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupSign_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupSign_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupSign, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupSign, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest_Params, _impl_.flag_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest_Params, _impl_.approve_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest_Params, _impl_.remark_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetFriendAddRequest, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest_Params, _impl_.flag_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest_Params, _impl_.sub_type_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest_Params, _impl_.approve_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest_Params, _impl_.reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupAddRequest, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo_Params, _impl_.nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfoResp, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetLoginInfoResp, _impl_.nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfoResp, _impl_.master_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfoResp, _impl_.ext_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::QiDianGetAccountInfoResp, _impl_.create_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _impl_.company_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _impl_.college_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile_Params, _impl_.personal_note_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetQQProfile, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.sex_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.age_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.qid_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStrangerInfoResp, _impl_.login_days_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendList, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendList, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp_Friend, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp_Friend, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp_Friend, _impl_.remark_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetFriendListResp, _impl_.friends_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendList, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendList, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp_Friend, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp_Friend, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp_Friend, _impl_.source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UnidirectionalFriendListResp, _impl_.friend__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteFriend_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteFriend_Params, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteFriend, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteFriend, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.group_memo_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.group_create_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.group_level_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.member_count_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupInfoResp, _impl_.max_member_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupList, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupListResp, _impl_.group_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.card_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.sex_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.age_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.area_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.join_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.last_sent_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.role_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.unfriendly_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.title_expire_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.card_changeable_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberInfoResp, _impl_.shut_up_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberList, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMemberListResp, _impl_.group_member_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo_Params, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _impl_.avatar_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _impl_.day_count_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp_Talkative, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.current_talkative_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.talkative_list_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.performer_list_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.legend_list_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.strong_newbie_list_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupHonorInfoResp, _impl_.emotion_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies_Params, _impl_.domain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCoolies, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCooliesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCooliesResp, _impl_.cookies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCsrfToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCsrfToken, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCsrfToken, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCsrfTokenResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCsrfTokenResp, _impl_.token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials_Params, _impl_.domain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentials, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentialsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentialsResp, _impl_.cookies_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetCredentialsResp, _impl_.csrf_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord_Params, _impl_.file_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord_Params, _impl_.out_format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecord, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecordResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetRecordResp, _impl_.file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendImage, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendImage, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendImageResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendImageResp, _impl_.yes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendRecord, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendRecord, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendRecordResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CanSendRecordResp, _impl_.yes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.app_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.app_version_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.app_full_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.protocol_version_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.coolq_edition_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.coolq_directory_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.cqhttp_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.plugin_version_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.plugin_build_number_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.plugin_build_configuration_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.runtime_version_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.runtime_os_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetVersionInfoResp, _impl_.protocol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetRestart_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetRestart_Params, _impl_.delay_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetRestart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetRestart, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetRestart, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CleanCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CleanCache, _impl_.action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait_Params, _impl_.file_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait_Params, _impl_.cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetGroupPortrait, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices_Params, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlices, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlicesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetWordSlicesResp, _impl_.slices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage_Params, _impl_.image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImage, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp_TextDetection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp_TextDetection, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp_TextDetection, _impl_.confidence_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp_TextDetection, _impl_.coordinates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp, _impl_.texts_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::OcrImageResp, _impl_.language_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.invitor_uin_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.invitor_nick_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.checked_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_InvitedRequest, _impl_.actor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.requester_uin_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.requester_nick_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.checked_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp_JoinRequest, _impl_.actor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp, _impl_.invited_requests_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupSystemMsgResp, _impl_.join_requests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile_Params, _impl_.file_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile_Params, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadPrivateFile, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile_Params, _impl_.file_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile_Params, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile_Params, _impl_.folder_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::UploadGroupFile, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfo, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfoResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfoResp, _impl_.file_count_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfoResp, _impl_.limit_count_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfoResp, _impl_.used_space_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileSystemInfoResp, _impl_.total_space_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFiles, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFilesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFilesResp, _impl_.files_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupRootFilesResp, _impl_.folders_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder_Params, _impl_.folder_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolder, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolderResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolderResp, _impl_.files_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::getGroupFileByFolderResp, _impl_.folders_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder_Params, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder_Params, _impl_.parent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CreateGroupFileFolder, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder_Params, _impl_.folder_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFolder, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile_Params, _impl_.file_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile_Params, _impl_.busid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteGroupFile, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl_Params, _impl_.file_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl_Params, _impl_.busid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrl, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrlResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupFileUrlResp, _impl_.url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatus, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatus, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.packetreceived_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.packetsent_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.packetlost_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.messagereceived_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.messagesent_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.disconnecttimes_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.losttimes_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp_Statistics, _impl_.lastmessagetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.app_initialized_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.app_enabled_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.plugins_good_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.app_good_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.online_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.good_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetStatusResp, _impl_.stat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemain, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemainResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemainResp, _impl_.can_at_all_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemainResp, _impl_.remain_at_all_count_for_group_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupAtAllRemainResp, _impl_.remain_at_all_count_for_uin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation_Params, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation_Params, _impl_.operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::HandleQuickOperation, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice_Params, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice_Params, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice_Params, _impl_.image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendGroupNotice, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNotice, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage, _impl_.images_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice, _impl_.sender_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice, _impl_.publish_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp_Notice, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupNoticeResp, _impl_.notices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::ReloadEventFilter_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::ReloadEventFilter_Params, _impl_.file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::ReloadEventFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::ReloadEventFilter, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::ReloadEventFilter, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile_Params, _impl_.url_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile_Params, _impl_.thread_count_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile_Params, _impl_.headers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFile, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFileResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DownloadFileResp, _impl_.file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients_Params, _impl_.no_cache_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClients, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClientsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetOnlineClientsResp, _impl_.clients_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory_Params, _impl_.message_seq_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistory, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistoryResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetGroupMsgHistoryResp, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetEssenceMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetEssenceMsg_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetEssenceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetEssenceMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetEssenceMsg, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteEssenceMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteEssenceMsg_Params, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteEssenceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteEssenceMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteEssenceMsg, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList_Params, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgList, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.sender_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.sender_nick_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.sender_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.operator_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.operator_nick_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.operator_time_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetEssenceMsgListResp, _impl_.message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely_Params, _impl_.url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafely, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafelyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::CheckUlrSafelyResp, _impl_.level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow_Params, _impl_.model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShow, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShowResp_Variant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShowResp_Variant, _impl_.model_show_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShowResp_Variant, _impl_.need_pay_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShowResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::GetModelShowResp, _impl_.variants_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow_Params, _impl_.model_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow_Params, _impl_.model_show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SetModelShow, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteUnidirectionalFriend_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteUnidirectionalFriend_Params, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteUnidirectionalFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteUnidirectionalFriend, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::DeleteUnidirectionalFriend, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg_Params, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg_Params, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsg, _impl_.echo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsgResp, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::cqhttp::SendPrivateForwardMsgResp, _impl_.forward_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::cqhttp::SendPrivateMsg_Params)},
  { 10, -1, -1, sizeof(::cqhttp::SendPrivateMsg)},
  { 19, -1, -1, sizeof(::cqhttp::SendPrivateMsgResp)},
  { 26, -1, -1, sizeof(::cqhttp::SendGroupMsg_Params)},
  { 35, -1, -1, sizeof(::cqhttp::SendGroupMsg)},
  { 44, -1, -1, sizeof(::cqhttp::SendGroupMsgResp)},
  { 51, -1, -1, sizeof(::cqhttp::SendGroupForwardMsg_Params)},
  { 59, -1, -1, sizeof(::cqhttp::SendGroupForwardMsg)},
  { 68, -1, -1, sizeof(::cqhttp::SendGroupForwardMsgResp)},
  { 76, -1, -1, sizeof(::cqhttp::SendMessage_Params)},
  { 87, -1, -1, sizeof(::cqhttp::SendMessage)},
  { 96, -1, -1, sizeof(::cqhttp::SendMessageResp)},
  { 103, -1, -1, sizeof(::cqhttp::DeleteMsg_Params)},
  { 110, -1, -1, sizeof(::cqhttp::DeleteMsg)},
  { 118, -1, -1, sizeof(::cqhttp::getMsg_Params)},
  { 125, -1, -1, sizeof(::cqhttp::getMsg)},
  { 134, -1, -1, sizeof(::cqhttp::getMsgResp)},
  { 149, -1, -1, sizeof(::cqhttp::GetForwardMsg_Params)},
  { 156, -1, -1, sizeof(::cqhttp::GetForwardMsg)},
  { 165, -1, -1, sizeof(::cqhttp::GetForwardMsgResp_Messages)},
  { 174, -1, -1, sizeof(::cqhttp::GetForwardMsgResp)},
  { 181, -1, -1, sizeof(::cqhttp::GetImage_Params)},
  { 188, -1, -1, sizeof(::cqhttp::GetImage)},
  { 197, -1, -1, sizeof(::cqhttp::GetImageResp)},
  { 206, -1, -1, sizeof(::cqhttp::MarkMsgAsRead_Params)},
  { 213, -1, -1, sizeof(::cqhttp::MarkMsgAsRead)},
  { 221, -1, -1, sizeof(::cqhttp::SetGroupKick_Params)},
  { 230, -1, -1, sizeof(::cqhttp::SetGroupKick)},
  { 238, -1, -1, sizeof(::cqhttp::SetGroupBan_Params)},
  { 247, -1, -1, sizeof(::cqhttp::SetGroupBan)},
  { 255, -1, -1, sizeof(::cqhttp::SetGroupAnonymousBan_Params)},
  { 265, -1, -1, sizeof(::cqhttp::SetGroupAnonymousBan)},
  { 273, -1, -1, sizeof(::cqhttp::SetGroupWholeBan_Params)},
  { 281, -1, -1, sizeof(::cqhttp::SetGroupWholeBan)},
  { 289, -1, -1, sizeof(::cqhttp::SetGroupAdmin_Params)},
  { 298, -1, -1, sizeof(::cqhttp::SetGroupAdmin)},
  { 306, -1, -1, sizeof(::cqhttp::SetGroupAnonymous_Params)},
  { 314, -1, -1, sizeof(::cqhttp::SetGroupAnonymous)},
  { 322, -1, -1, sizeof(::cqhttp::SetGroupCard_Params)},
  { 331, -1, -1, sizeof(::cqhttp::SetGroupCard)},
  { 339, -1, -1, sizeof(::cqhttp::SetGroupName_Params)},
  { 347, -1, -1, sizeof(::cqhttp::SetGroupName)},
  { 355, -1, -1, sizeof(::cqhttp::SetGroupLeave_Params)},
  { 363, -1, -1, sizeof(::cqhttp::SetGroupLeave)},
  { 371, -1, -1, sizeof(::cqhttp::SetGroupSpecialTitle_Params)},
  { 381, -1, -1, sizeof(::cqhttp::SetGroupSpecialTitle)},
  { 389, -1, -1, sizeof(::cqhttp::SendGroupSign_Params)},
  { 396, -1, -1, sizeof(::cqhttp::SendGroupSign)},
  { 404, -1, -1, sizeof(::cqhttp::SetFriendAddRequest_Params)},
  { 413, -1, -1, sizeof(::cqhttp::SetFriendAddRequest)},
  { 421, -1, -1, sizeof(::cqhttp::SetGroupAddRequest_Params)},
  { 431, -1, -1, sizeof(::cqhttp::SetGroupAddRequest)},
  { 439, -1, -1, sizeof(::cqhttp::GetLoginInfo_Params)},
  { 447, -1, -1, sizeof(::cqhttp::GetLoginInfo)},
  { 456, -1, -1, sizeof(::cqhttp::GetLoginInfoResp)},
  { 464, -1, -1, sizeof(::cqhttp::QiDianGetAccountInfo)},
  { 472, -1, -1, sizeof(::cqhttp::QiDianGetAccountInfoResp)},
  { 481, -1, -1, sizeof(::cqhttp::SetQQProfile_Params)},
  { 492, -1, -1, sizeof(::cqhttp::SetQQProfile)},
  { 500, -1, -1, sizeof(::cqhttp::GetStrangerInfo_Params)},
  { 508, -1, -1, sizeof(::cqhttp::GetStrangerInfo)},
  { 517, -1, -1, sizeof(::cqhttp::GetStrangerInfoResp)},
  { 530, -1, -1, sizeof(::cqhttp::GetFriendList)},
  { 538, -1, -1, sizeof(::cqhttp::GetFriendListResp_Friend)},
  { 547, -1, -1, sizeof(::cqhttp::GetFriendListResp)},
  { 554, -1, -1, sizeof(::cqhttp::UnidirectionalFriendList)},
  { 562, -1, -1, sizeof(::cqhttp::UnidirectionalFriendListResp_Friend)},
  { 571, -1, -1, sizeof(::cqhttp::UnidirectionalFriendListResp)},
  { 578, -1, -1, sizeof(::cqhttp::DeleteFriend_Params)},
  { 585, -1, -1, sizeof(::cqhttp::DeleteFriend)},
  { 593, -1, -1, sizeof(::cqhttp::GetGroupInfo_Params)},
  { 601, -1, -1, sizeof(::cqhttp::GetGroupInfo)},
  { 610, -1, -1, sizeof(::cqhttp::GetGroupInfoResp)},
  { 623, -1, -1, sizeof(::cqhttp::GetGroupList_Params)},
  { 630, -1, -1, sizeof(::cqhttp::GetGroupList)},
  { 639, -1, -1, sizeof(::cqhttp::GetGroupListResp)},
  { 646, -1, -1, sizeof(::cqhttp::GetGroupMemberInfo_Params)},
  { 655, -1, -1, sizeof(::cqhttp::GetGroupMemberInfo)},
  { 664, -1, -1, sizeof(::cqhttp::GetGroupMemberInfoResp)},
  { 686, -1, -1, sizeof(::cqhttp::GetGroupMemberList_Params)},
  { 694, -1, -1, sizeof(::cqhttp::GetGroupMemberList)},
  { 703, -1, -1, sizeof(::cqhttp::GetGroupMemberListResp)},
  { 710, -1, -1, sizeof(::cqhttp::GetGroupHonorInfo_Params)},
  { 718, -1, -1, sizeof(::cqhttp::GetGroupHonorInfo)},
  { 727, -1, -1, sizeof(::cqhttp::GetGroupHonorInfoResp_Talkative)},
  { 738, -1, -1, sizeof(::cqhttp::GetGroupHonorInfoResp)},
  { 751, -1, -1, sizeof(::cqhttp::GetCoolies_Params)},
  { 758, -1, -1, sizeof(::cqhttp::GetCoolies)},
  { 767, -1, -1, sizeof(::cqhttp::GetCooliesResp)},
  { 774, -1, -1, sizeof(::cqhttp::GetCsrfToken)},
  { 782, -1, -1, sizeof(::cqhttp::GetCsrfTokenResp)},
  { 789, -1, -1, sizeof(::cqhttp::GetCredentials_Params)},
  { 796, -1, -1, sizeof(::cqhttp::GetCredentials)},
  { 805, -1, -1, sizeof(::cqhttp::GetCredentialsResp)},
  { 813, -1, -1, sizeof(::cqhttp::GetRecord_Params)},
  { 821, -1, -1, sizeof(::cqhttp::GetRecord)},
  { 830, -1, -1, sizeof(::cqhttp::GetRecordResp)},
  { 837, -1, -1, sizeof(::cqhttp::CanSendImage)},
  { 845, -1, -1, sizeof(::cqhttp::CanSendImageResp)},
  { 852, -1, -1, sizeof(::cqhttp::CanSendRecord)},
  { 860, -1, -1, sizeof(::cqhttp::CanSendRecordResp)},
  { 867, -1, -1, sizeof(::cqhttp::GetVersionInfo)},
  { 875, -1, -1, sizeof(::cqhttp::GetVersionInfoResp)},
  { 895, -1, -1, sizeof(::cqhttp::SetRestart_Params)},
  { 902, -1, -1, sizeof(::cqhttp::SetRestart)},
  { 910, -1, -1, sizeof(::cqhttp::CleanCache)},
  { 917, -1, -1, sizeof(::cqhttp::SetGroupPortrait_Params)},
  { 926, -1, -1, sizeof(::cqhttp::SetGroupPortrait)},
  { 934, -1, -1, sizeof(::cqhttp::GetWordSlices_Params)},
  { 941, -1, -1, sizeof(::cqhttp::GetWordSlices)},
  { 950, -1, -1, sizeof(::cqhttp::GetWordSlicesResp)},
  { 957, -1, -1, sizeof(::cqhttp::OcrImage_Params)},
  { 964, -1, -1, sizeof(::cqhttp::OcrImage)},
  { 973, -1, -1, sizeof(::cqhttp::OcrImageResp_TextDetection)},
  { 982, -1, -1, sizeof(::cqhttp::OcrImageResp)},
  { 990, -1, -1, sizeof(::cqhttp::GetGroupSystemMsg)},
  { 998, -1, -1, sizeof(::cqhttp::GetGroupSystemMsgResp_InvitedRequest)},
  { 1011, -1, -1, sizeof(::cqhttp::GetGroupSystemMsgResp_JoinRequest)},
  { 1025, -1, -1, sizeof(::cqhttp::GetGroupSystemMsgResp)},
  { 1033, -1, -1, sizeof(::cqhttp::UploadPrivateFile_Params)},
  { 1042, -1, -1, sizeof(::cqhttp::UploadPrivateFile)},
  { 1050, -1, -1, sizeof(::cqhttp::UploadGroupFile_Params)},
  { 1060, -1, -1, sizeof(::cqhttp::UploadGroupFile)},
  { 1068, -1, -1, sizeof(::cqhttp::GetGroupFileSystemInfo_Params)},
  { 1075, -1, -1, sizeof(::cqhttp::GetGroupFileSystemInfo)},
  { 1084, -1, -1, sizeof(::cqhttp::GetGroupFileSystemInfoResp)},
  { 1094, -1, -1, sizeof(::cqhttp::GetGroupRootFiles_Params)},
  { 1101, -1, -1, sizeof(::cqhttp::GetGroupRootFiles)},
  { 1110, -1, -1, sizeof(::cqhttp::GetGroupRootFilesResp)},
  { 1118, -1, -1, sizeof(::cqhttp::getGroupFileByFolder_Params)},
  { 1126, -1, -1, sizeof(::cqhttp::getGroupFileByFolder)},
  { 1135, -1, -1, sizeof(::cqhttp::getGroupFileByFolderResp)},
  { 1143, -1, -1, sizeof(::cqhttp::CreateGroupFileFolder_Params)},
  { 1152, -1, -1, sizeof(::cqhttp::CreateGroupFileFolder)},
  { 1160, -1, -1, sizeof(::cqhttp::DeleteGroupFolder_Params)},
  { 1168, -1, -1, sizeof(::cqhttp::DeleteGroupFolder)},
  { 1176, -1, -1, sizeof(::cqhttp::DeleteGroupFile_Params)},
  { 1185, -1, -1, sizeof(::cqhttp::DeleteGroupFile)},
  { 1193, -1, -1, sizeof(::cqhttp::GetGroupFileUrl_Params)},
  { 1202, -1, -1, sizeof(::cqhttp::GetGroupFileUrl)},
  { 1211, -1, -1, sizeof(::cqhttp::GetGroupFileUrlResp)},
  { 1218, -1, -1, sizeof(::cqhttp::GetStatus)},
  { 1226, -1, -1, sizeof(::cqhttp::GetStatusResp_Statistics)},
  { 1240, -1, -1, sizeof(::cqhttp::GetStatusResp)},
  { 1253, -1, -1, sizeof(::cqhttp::GetGroupAtAllRemain_Params)},
  { 1260, -1, -1, sizeof(::cqhttp::GetGroupAtAllRemain)},
  { 1269, -1, -1, sizeof(::cqhttp::GetGroupAtAllRemainResp)},
  { 1278, -1, -1, sizeof(::cqhttp::HandleQuickOperation_Params)},
  { 1286, -1, -1, sizeof(::cqhttp::HandleQuickOperation)},
  { 1294, -1, -1, sizeof(::cqhttp::SendGroupNotice_Params)},
  { 1303, -1, -1, sizeof(::cqhttp::SendGroupNotice)},
  { 1311, -1, -1, sizeof(::cqhttp::GetGroupNotice_Params)},
  { 1318, -1, -1, sizeof(::cqhttp::GetGroupNotice)},
  { 1327, -1, -1, sizeof(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image)},
  { 1336, -1, -1, sizeof(::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage)},
  { 1344, -1, -1, sizeof(::cqhttp::GetGroupNoticeResp_Notice)},
  { 1353, -1, -1, sizeof(::cqhttp::GetGroupNoticeResp)},
  { 1360, -1, -1, sizeof(::cqhttp::ReloadEventFilter_Params)},
  { 1367, -1, -1, sizeof(::cqhttp::ReloadEventFilter)},
  { 1375, -1, -1, sizeof(::cqhttp::DownloadFile_Params)},
  { 1384, -1, -1, sizeof(::cqhttp::DownloadFile)},
  { 1393, -1, -1, sizeof(::cqhttp::DownloadFileResp)},
  { 1400, -1, -1, sizeof(::cqhttp::GetOnlineClients_Params)},
  { 1407, -1, -1, sizeof(::cqhttp::GetOnlineClients)},
  { 1416, -1, -1, sizeof(::cqhttp::GetOnlineClientsResp)},
  { 1423, -1, -1, sizeof(::cqhttp::GetGroupMsgHistory_Params)},
  { 1431, -1, -1, sizeof(::cqhttp::GetGroupMsgHistory)},
  { 1440, -1, -1, sizeof(::cqhttp::GetGroupMsgHistoryResp)},
  { 1447, -1, -1, sizeof(::cqhttp::SetEssenceMsg_Params)},
  { 1454, -1, -1, sizeof(::cqhttp::SetEssenceMsg)},
  { 1462, -1, -1, sizeof(::cqhttp::DeleteEssenceMsg_Params)},
  { 1469, -1, -1, sizeof(::cqhttp::DeleteEssenceMsg)},
  { 1477, -1, -1, sizeof(::cqhttp::GetEssenceMsgList_Params)},
  { 1484, -1, -1, sizeof(::cqhttp::GetEssenceMsgList)},
  { 1493, -1, -1, sizeof(::cqhttp::GetEssenceMsgListResp)},
  { 1506, -1, -1, sizeof(::cqhttp::CheckUlrSafely_Params)},
  { 1513, -1, -1, sizeof(::cqhttp::CheckUlrSafely)},
  { 1522, -1, -1, sizeof(::cqhttp::CheckUlrSafelyResp)},
  { 1529, -1, -1, sizeof(::cqhttp::GetModelShow_Params)},
  { 1536, -1, -1, sizeof(::cqhttp::GetModelShow)},
  { 1545, -1, -1, sizeof(::cqhttp::GetModelShowResp_Variant)},
  { 1553, -1, -1, sizeof(::cqhttp::GetModelShowResp)},
  { 1560, -1, -1, sizeof(::cqhttp::SetModelShow_Params)},
  { 1568, -1, -1, sizeof(::cqhttp::SetModelShow)},
  { 1576, -1, -1, sizeof(::cqhttp::DeleteUnidirectionalFriend_Params)},
  { 1583, -1, -1, sizeof(::cqhttp::DeleteUnidirectionalFriend)},
  { 1591, -1, -1, sizeof(::cqhttp::SendPrivateForwardMsg_Params)},
  { 1599, -1, -1, sizeof(::cqhttp::SendPrivateForwardMsg)},
  { 1608, -1, -1, sizeof(::cqhttp::SendPrivateForwardMsgResp)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::cqhttp::_SendPrivateMsg_Params_default_instance_._instance,
  &::cqhttp::_SendPrivateMsg_default_instance_._instance,
  &::cqhttp::_SendPrivateMsgResp_default_instance_._instance,
  &::cqhttp::_SendGroupMsg_Params_default_instance_._instance,
  &::cqhttp::_SendGroupMsg_default_instance_._instance,
  &::cqhttp::_SendGroupMsgResp_default_instance_._instance,
  &::cqhttp::_SendGroupForwardMsg_Params_default_instance_._instance,
  &::cqhttp::_SendGroupForwardMsg_default_instance_._instance,
  &::cqhttp::_SendGroupForwardMsgResp_default_instance_._instance,
  &::cqhttp::_SendMessage_Params_default_instance_._instance,
  &::cqhttp::_SendMessage_default_instance_._instance,
  &::cqhttp::_SendMessageResp_default_instance_._instance,
  &::cqhttp::_DeleteMsg_Params_default_instance_._instance,
  &::cqhttp::_DeleteMsg_default_instance_._instance,
  &::cqhttp::_getMsg_Params_default_instance_._instance,
  &::cqhttp::_getMsg_default_instance_._instance,
  &::cqhttp::_getMsgResp_default_instance_._instance,
  &::cqhttp::_GetForwardMsg_Params_default_instance_._instance,
  &::cqhttp::_GetForwardMsg_default_instance_._instance,
  &::cqhttp::_GetForwardMsgResp_Messages_default_instance_._instance,
  &::cqhttp::_GetForwardMsgResp_default_instance_._instance,
  &::cqhttp::_GetImage_Params_default_instance_._instance,
  &::cqhttp::_GetImage_default_instance_._instance,
  &::cqhttp::_GetImageResp_default_instance_._instance,
  &::cqhttp::_MarkMsgAsRead_Params_default_instance_._instance,
  &::cqhttp::_MarkMsgAsRead_default_instance_._instance,
  &::cqhttp::_SetGroupKick_Params_default_instance_._instance,
  &::cqhttp::_SetGroupKick_default_instance_._instance,
  &::cqhttp::_SetGroupBan_Params_default_instance_._instance,
  &::cqhttp::_SetGroupBan_default_instance_._instance,
  &::cqhttp::_SetGroupAnonymousBan_Params_default_instance_._instance,
  &::cqhttp::_SetGroupAnonymousBan_default_instance_._instance,
  &::cqhttp::_SetGroupWholeBan_Params_default_instance_._instance,
  &::cqhttp::_SetGroupWholeBan_default_instance_._instance,
  &::cqhttp::_SetGroupAdmin_Params_default_instance_._instance,
  &::cqhttp::_SetGroupAdmin_default_instance_._instance,
  &::cqhttp::_SetGroupAnonymous_Params_default_instance_._instance,
  &::cqhttp::_SetGroupAnonymous_default_instance_._instance,
  &::cqhttp::_SetGroupCard_Params_default_instance_._instance,
  &::cqhttp::_SetGroupCard_default_instance_._instance,
  &::cqhttp::_SetGroupName_Params_default_instance_._instance,
  &::cqhttp::_SetGroupName_default_instance_._instance,
  &::cqhttp::_SetGroupLeave_Params_default_instance_._instance,
  &::cqhttp::_SetGroupLeave_default_instance_._instance,
  &::cqhttp::_SetGroupSpecialTitle_Params_default_instance_._instance,
  &::cqhttp::_SetGroupSpecialTitle_default_instance_._instance,
  &::cqhttp::_SendGroupSign_Params_default_instance_._instance,
  &::cqhttp::_SendGroupSign_default_instance_._instance,
  &::cqhttp::_SetFriendAddRequest_Params_default_instance_._instance,
  &::cqhttp::_SetFriendAddRequest_default_instance_._instance,
  &::cqhttp::_SetGroupAddRequest_Params_default_instance_._instance,
  &::cqhttp::_SetGroupAddRequest_default_instance_._instance,
  &::cqhttp::_GetLoginInfo_Params_default_instance_._instance,
  &::cqhttp::_GetLoginInfo_default_instance_._instance,
  &::cqhttp::_GetLoginInfoResp_default_instance_._instance,
  &::cqhttp::_QiDianGetAccountInfo_default_instance_._instance,
  &::cqhttp::_QiDianGetAccountInfoResp_default_instance_._instance,
  &::cqhttp::_SetQQProfile_Params_default_instance_._instance,
  &::cqhttp::_SetQQProfile_default_instance_._instance,
  &::cqhttp::_GetStrangerInfo_Params_default_instance_._instance,
  &::cqhttp::_GetStrangerInfo_default_instance_._instance,
  &::cqhttp::_GetStrangerInfoResp_default_instance_._instance,
  &::cqhttp::_GetFriendList_default_instance_._instance,
  &::cqhttp::_GetFriendListResp_Friend_default_instance_._instance,
  &::cqhttp::_GetFriendListResp_default_instance_._instance,
  &::cqhttp::_UnidirectionalFriendList_default_instance_._instance,
  &::cqhttp::_UnidirectionalFriendListResp_Friend_default_instance_._instance,
  &::cqhttp::_UnidirectionalFriendListResp_default_instance_._instance,
  &::cqhttp::_DeleteFriend_Params_default_instance_._instance,
  &::cqhttp::_DeleteFriend_default_instance_._instance,
  &::cqhttp::_GetGroupInfo_Params_default_instance_._instance,
  &::cqhttp::_GetGroupInfo_default_instance_._instance,
  &::cqhttp::_GetGroupInfoResp_default_instance_._instance,
  &::cqhttp::_GetGroupList_Params_default_instance_._instance,
  &::cqhttp::_GetGroupList_default_instance_._instance,
  &::cqhttp::_GetGroupListResp_default_instance_._instance,
  &::cqhttp::_GetGroupMemberInfo_Params_default_instance_._instance,
  &::cqhttp::_GetGroupMemberInfo_default_instance_._instance,
  &::cqhttp::_GetGroupMemberInfoResp_default_instance_._instance,
  &::cqhttp::_GetGroupMemberList_Params_default_instance_._instance,
  &::cqhttp::_GetGroupMemberList_default_instance_._instance,
  &::cqhttp::_GetGroupMemberListResp_default_instance_._instance,
  &::cqhttp::_GetGroupHonorInfo_Params_default_instance_._instance,
  &::cqhttp::_GetGroupHonorInfo_default_instance_._instance,
  &::cqhttp::_GetGroupHonorInfoResp_Talkative_default_instance_._instance,
  &::cqhttp::_GetGroupHonorInfoResp_default_instance_._instance,
  &::cqhttp::_GetCoolies_Params_default_instance_._instance,
  &::cqhttp::_GetCoolies_default_instance_._instance,
  &::cqhttp::_GetCooliesResp_default_instance_._instance,
  &::cqhttp::_GetCsrfToken_default_instance_._instance,
  &::cqhttp::_GetCsrfTokenResp_default_instance_._instance,
  &::cqhttp::_GetCredentials_Params_default_instance_._instance,
  &::cqhttp::_GetCredentials_default_instance_._instance,
  &::cqhttp::_GetCredentialsResp_default_instance_._instance,
  &::cqhttp::_GetRecord_Params_default_instance_._instance,
  &::cqhttp::_GetRecord_default_instance_._instance,
  &::cqhttp::_GetRecordResp_default_instance_._instance,
  &::cqhttp::_CanSendImage_default_instance_._instance,
  &::cqhttp::_CanSendImageResp_default_instance_._instance,
  &::cqhttp::_CanSendRecord_default_instance_._instance,
  &::cqhttp::_CanSendRecordResp_default_instance_._instance,
  &::cqhttp::_GetVersionInfo_default_instance_._instance,
  &::cqhttp::_GetVersionInfoResp_default_instance_._instance,
  &::cqhttp::_SetRestart_Params_default_instance_._instance,
  &::cqhttp::_SetRestart_default_instance_._instance,
  &::cqhttp::_CleanCache_default_instance_._instance,
  &::cqhttp::_SetGroupPortrait_Params_default_instance_._instance,
  &::cqhttp::_SetGroupPortrait_default_instance_._instance,
  &::cqhttp::_GetWordSlices_Params_default_instance_._instance,
  &::cqhttp::_GetWordSlices_default_instance_._instance,
  &::cqhttp::_GetWordSlicesResp_default_instance_._instance,
  &::cqhttp::_OcrImage_Params_default_instance_._instance,
  &::cqhttp::_OcrImage_default_instance_._instance,
  &::cqhttp::_OcrImageResp_TextDetection_default_instance_._instance,
  &::cqhttp::_OcrImageResp_default_instance_._instance,
  &::cqhttp::_GetGroupSystemMsg_default_instance_._instance,
  &::cqhttp::_GetGroupSystemMsgResp_InvitedRequest_default_instance_._instance,
  &::cqhttp::_GetGroupSystemMsgResp_JoinRequest_default_instance_._instance,
  &::cqhttp::_GetGroupSystemMsgResp_default_instance_._instance,
  &::cqhttp::_UploadPrivateFile_Params_default_instance_._instance,
  &::cqhttp::_UploadPrivateFile_default_instance_._instance,
  &::cqhttp::_UploadGroupFile_Params_default_instance_._instance,
  &::cqhttp::_UploadGroupFile_default_instance_._instance,
  &::cqhttp::_GetGroupFileSystemInfo_Params_default_instance_._instance,
  &::cqhttp::_GetGroupFileSystemInfo_default_instance_._instance,
  &::cqhttp::_GetGroupFileSystemInfoResp_default_instance_._instance,
  &::cqhttp::_GetGroupRootFiles_Params_default_instance_._instance,
  &::cqhttp::_GetGroupRootFiles_default_instance_._instance,
  &::cqhttp::_GetGroupRootFilesResp_default_instance_._instance,
  &::cqhttp::_getGroupFileByFolder_Params_default_instance_._instance,
  &::cqhttp::_getGroupFileByFolder_default_instance_._instance,
  &::cqhttp::_getGroupFileByFolderResp_default_instance_._instance,
  &::cqhttp::_CreateGroupFileFolder_Params_default_instance_._instance,
  &::cqhttp::_CreateGroupFileFolder_default_instance_._instance,
  &::cqhttp::_DeleteGroupFolder_Params_default_instance_._instance,
  &::cqhttp::_DeleteGroupFolder_default_instance_._instance,
  &::cqhttp::_DeleteGroupFile_Params_default_instance_._instance,
  &::cqhttp::_DeleteGroupFile_default_instance_._instance,
  &::cqhttp::_GetGroupFileUrl_Params_default_instance_._instance,
  &::cqhttp::_GetGroupFileUrl_default_instance_._instance,
  &::cqhttp::_GetGroupFileUrlResp_default_instance_._instance,
  &::cqhttp::_GetStatus_default_instance_._instance,
  &::cqhttp::_GetStatusResp_Statistics_default_instance_._instance,
  &::cqhttp::_GetStatusResp_default_instance_._instance,
  &::cqhttp::_GetGroupAtAllRemain_Params_default_instance_._instance,
  &::cqhttp::_GetGroupAtAllRemain_default_instance_._instance,
  &::cqhttp::_GetGroupAtAllRemainResp_default_instance_._instance,
  &::cqhttp::_HandleQuickOperation_Params_default_instance_._instance,
  &::cqhttp::_HandleQuickOperation_default_instance_._instance,
  &::cqhttp::_SendGroupNotice_Params_default_instance_._instance,
  &::cqhttp::_SendGroupNotice_default_instance_._instance,
  &::cqhttp::_GetGroupNotice_Params_default_instance_._instance,
  &::cqhttp::_GetGroupNotice_default_instance_._instance,
  &::cqhttp::_GetGroupNoticeResp_Notice_NoticeMessage_Image_default_instance_._instance,
  &::cqhttp::_GetGroupNoticeResp_Notice_NoticeMessage_default_instance_._instance,
  &::cqhttp::_GetGroupNoticeResp_Notice_default_instance_._instance,
  &::cqhttp::_GetGroupNoticeResp_default_instance_._instance,
  &::cqhttp::_ReloadEventFilter_Params_default_instance_._instance,
  &::cqhttp::_ReloadEventFilter_default_instance_._instance,
  &::cqhttp::_DownloadFile_Params_default_instance_._instance,
  &::cqhttp::_DownloadFile_default_instance_._instance,
  &::cqhttp::_DownloadFileResp_default_instance_._instance,
  &::cqhttp::_GetOnlineClients_Params_default_instance_._instance,
  &::cqhttp::_GetOnlineClients_default_instance_._instance,
  &::cqhttp::_GetOnlineClientsResp_default_instance_._instance,
  &::cqhttp::_GetGroupMsgHistory_Params_default_instance_._instance,
  &::cqhttp::_GetGroupMsgHistory_default_instance_._instance,
  &::cqhttp::_GetGroupMsgHistoryResp_default_instance_._instance,
  &::cqhttp::_SetEssenceMsg_Params_default_instance_._instance,
  &::cqhttp::_SetEssenceMsg_default_instance_._instance,
  &::cqhttp::_DeleteEssenceMsg_Params_default_instance_._instance,
  &::cqhttp::_DeleteEssenceMsg_default_instance_._instance,
  &::cqhttp::_GetEssenceMsgList_Params_default_instance_._instance,
  &::cqhttp::_GetEssenceMsgList_default_instance_._instance,
  &::cqhttp::_GetEssenceMsgListResp_default_instance_._instance,
  &::cqhttp::_CheckUlrSafely_Params_default_instance_._instance,
  &::cqhttp::_CheckUlrSafely_default_instance_._instance,
  &::cqhttp::_CheckUlrSafelyResp_default_instance_._instance,
  &::cqhttp::_GetModelShow_Params_default_instance_._instance,
  &::cqhttp::_GetModelShow_default_instance_._instance,
  &::cqhttp::_GetModelShowResp_Variant_default_instance_._instance,
  &::cqhttp::_GetModelShowResp_default_instance_._instance,
  &::cqhttp::_SetModelShow_Params_default_instance_._instance,
  &::cqhttp::_SetModelShow_default_instance_._instance,
  &::cqhttp::_DeleteUnidirectionalFriend_Params_default_instance_._instance,
  &::cqhttp::_DeleteUnidirectionalFriend_default_instance_._instance,
  &::cqhttp::_SendPrivateForwardMsg_Params_default_instance_._instance,
  &::cqhttp::_SendPrivateForwardMsg_default_instance_._instance,
  &::cqhttp::_SendPrivateForwardMsgResp_default_instance_._instance,
};

const char descriptor_table_protodef_cqhttp_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020cqhttp_api.proto\022\006cqhttp\032\021cqhttp_base."
  "proto\"\300\001\n\016SendPrivateMsg\022\036\n\006action\030\001 \001(\016"
  "2\016.cqhttp.Action\022-\n\006params\030\002 \001(\0132\035.cqhtt"
  "p.SendPrivateMsg.Params\022\014\n\004echo\030\003 \001(\t\032Q\n"
  "\006Params\022\017\n\007user_id\030\001 \001(\003\022\020\n\010group_id\030\002 \001"
  "(\003\022\017\n\007message\030\003 \001(\t\022\023\n\013auto_escape\030\004 \001(\010"
  "\"(\n\022SendPrivateMsgResp\022\022\n\nmessage_id\030\001 \001"
  "(\005\"\253\001\n\014SendGroupMsg\022\036\n\006action\030\001 \001(\0162\016.cq"
  "http.Action\022+\n\006params\030\002 \001(\0132\033.cqhttp.Sen"
  "dGroupMsg.Params\022\014\n\004echo\030\003 \001(\t\032@\n\006Params"
  "\022\020\n\010group_id\030\001 \001(\003\022\017\n\007message\030\002 \001(\t\022\023\n\013a"
  "uto_escape\030\003 \001(\010\"&\n\020SendGroupMsgResp\022\022\n\n"
  "message_id\030\001 \001(\005\"\244\001\n\023SendGroupForwardMsg"
  "\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\0222\n\006para"
  "ms\030\002 \001(\0132\".cqhttp.SendGroupForwardMsg.Pa"
  "rams\022\014\n\004echo\030\003 \001(\t\032+\n\006Params\022\020\n\010group_id"
  "\030\001 \001(\003\022\017\n\007message\030\002 \001(\t\"A\n\027SendGroupForw"
  "ardMsgResp\022\022\n\nmessage_id\030\001 \001(\003\022\022\n\nforwar"
  "d_id\030\002 \001(\t\"\320\001\n\013SendMessage\022\036\n\006action\030\001 \001"
  "(\0162\016.cqhttp.Action\022*\n\006params\030\002 \001(\0132\032.cqh"
  "ttp.SendMessage.Params\022\014\n\004echo\030\003 \001(\t\032g\n\006"
  "Params\022\024\n\014message_type\030\001 \001(\t\022\017\n\007user_id\030"
  "\002 \001(\003\022\020\n\010group_id\030\003 \001(\003\022\017\n\007message\030\004 \001(\t"
  "\022\023\n\013auto_escape\030\005 \001(\010\"%\n\017SendMessageResp"
  "\022\022\n\nmessage_id\030\002 \001(\005\"s\n\tDeleteMsg\022\036\n\006act"
  "ion\030\001 \001(\0162\016.cqhttp.Action\022(\n\006params\030\002 \001("
  "\0132\030.cqhttp.DeleteMsg.Params\032\034\n\006Params\022\022\n"
  "\nmessage_id\030\001 \001(\005\"{\n\006getMsg\022\036\n\006action\030\001 "
  "\001(\0162\016.cqhttp.Action\022%\n\006params\030\002 \001(\0132\025.cq"
  "http.getMsg.Params\022\014\n\004echo\030\003 \001(\t\032\034\n\006Para"
  "ms\022\022\n\nmessage_id\030\001 \001(\005\"\274\001\n\ngetMsgResp\022\r\n"
  "\005group\030\001 \001(\010\022\020\n\010group_id\030\002 \001(\003\022\022\n\nmessag"
  "e_id\030\003 \001(\005\022\017\n\007real_id\030\004 \001(\005\022\024\n\014message_t"
  "ype\030\005 \001(\t\022\036\n\006sender\030\006 \001(\0132\016.cqhttp.Sende"
  "r\022\014\n\004time\030\007 \001(\005\022\017\n\007message\030\010 \001(\t\022\023\n\013raw_"
  "message\030\t \001(\t\"\211\001\n\rGetForwardMsg\022\036\n\006actio"
  "n\030\001 \001(\0162\016.cqhttp.Action\022,\n\006params\030\002 \001(\0132"
  "\034.cqhttp.GetForwardMsg.Params\022\014\n\004echo\030\003 "
  "\001(\t\032\034\n\006Params\022\022\n\nmessage_id\030\001 \001(\t\"\224\001\n\021Ge"
  "tForwardMsgResp\0224\n\010messages\030\001 \003(\0132\".cqht"
  "tp.GetForwardMsgResp.Messages\032I\n\010Message"
  "s\022\017\n\007content\030\001 \001(\t\022\036\n\006sender\030\002 \001(\0132\016.cqh"
  "ttp.Sender\022\014\n\004time\030\003 \001(\003\"y\n\010GetImage\022\036\n\006"
  "action\030\001 \001(\0162\016.cqhttp.Action\022\'\n\006params\030\002"
  " \001(\0132\027.cqhttp.GetImage.Params\022\014\n\004echo\030\003 "
  "\001(\t\032\026\n\006Params\022\014\n\004file\030\001 \001(\t\";\n\014GetImageR"
  "esp\022\014\n\004size\030\001 \001(\005\022\020\n\010filename\030\002 \001(\t\022\013\n\003u"
  "rl\030\003 \001(\t\"{\n\rMarkMsgAsRead\022\036\n\006action\030\001 \001("
  "\0162\016.cqhttp.Action\022,\n\006params\030\002 \001(\0132\034.cqht"
  "tp.MarkMsgAsRead.Params\032\034\n\006Params\022\022\n\nmes"
  "sage_id\030\001 \001(\005\"\246\001\n\014SetGroupKick\022\036\n\006action"
  "\030\001 \001(\0162\016.cqhttp.Action\022+\n\006params\030\002 \001(\0132\033"
  ".cqhttp.SetGroupKick.Params\032I\n\006Params\022\022\n"
  "\nmessage_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\032\n\022re"
  "ject_add_request\030\003 \001(\010\"\230\001\n\013SetGroupBan\022\036"
  "\n\006action\030\001 \001(\0162\016.cqhttp.Action\022*\n\006params"
  "\030\002 \001(\0132\032.cqhttp.SetGroupBan.Params\032=\n\006Pa"
  "rams\022\020\n\010group_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022"
  "\020\n\010duration\030\003 \001(\005\"\327\001\n\024SetGroupAnonymousB"
  "an\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\0223\n\006pa"
  "rams\030\002 \001(\0132#.cqhttp.SetGroupAnonymousBan"
  ".Params\032j\n\006Params\022\020\n\010group_id\030\001 \001(\003\022$\n\ta"
  "nonymous\030\002 \001(\0132\021.cqhttp.Anonymous\022\026\n\016ano"
  "nymous_flag\030\003 \001(\t\022\020\n\010duration\030\004 \001(\005\"\217\001\n\020"
  "SetGroupWholeBan\022\036\n\006action\030\001 \001(\0162\016.cqhtt"
  "p.Action\022/\n\006params\030\002 \001(\0132\037.cqhttp.SetGro"
  "upWholeBan.Params\032*\n\006Params\022\020\n\010group_id\030"
  "\001 \001(\003\022\016\n\006enable\030\002 \001(\010\"\232\001\n\rSetGroupAdmin\022"
  "\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022,\n\006param"
  "s\030\002 \001(\0132\034.cqhttp.SetGroupAdmin.Params\032;\n"
  "\006Params\022\020\n\010group_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
  "(\003\022\016\n\006enable\030\003 \001(\010\"\221\001\n\021SetGroupAnonymous"
  "\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\0220\n\006para"
  "ms\030\002 \001(\0132 .cqhttp.SetGroupAnonymous.Para"
  "ms\032*\n\006Params\022\020\n\010group_id\030\001 \001(\003\022\016\n\006enable"
  "\030\002 \001(\010\"\226\001\n\014SetGroupCard\022\036\n\006action\030\001 \001(\0162"
  "\016.cqhttp.Action\022+\n\006params\030\002 \001(\0132\033.cqhttp"
  ".SetGroupCard.Params\0329\n\006Params\022\020\n\010group_"
  "id\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003\022\014\n\004card\030\003 \001(\t\""
  "\213\001\n\014SetGroupName\022\036\n\006action\030\001 \001(\0162\016.cqhtt"
  "p.Action\022+\n\006params\030\002 \001(\0132\033.cqhttp.SetGro"
  "upName.Params\032.\n\006Params\022\020\n\010group_id\030\001 \001("
  "\003\022\022\n\ngroup_name\030\002 \001(\t\"\215\001\n\rSetGroupLeave\022"
  "\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022,\n\006param"
  "s\030\002 \001(\0132\034.cqhttp.SetGroupLeave.Params\032.\n"
  "\006Params\022\020\n\010group_id\030\001 \001(\003\022\022\n\nis_dismiss\030"
  "\002 \001(\010\"\301\001\n\024SetGroupSpecialTitle\022\036\n\006action"
  "\030\001 \001(\0162\016.cqhttp.Action\0223\n\006params\030\002 \001(\0132#"
  ".cqhttp.SetGroupSpecialTitle.Params\032T\n\006P"
  "arams\022\020\n\010group_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\003"
  "\022\025\n\rspecial_title\030\003 \001(\t\022\020\n\010duration\030\004 \001("
  "\005\"y\n\rSendGroupSign\022\036\n\006action\030\001 \001(\0162\016.cqh"
  "ttp.Action\022,\n\006params\030\002 \001(\0132\034.cqhttp.Send"
  "GroupSign.Params\032\032\n\006Params\022\020\n\010group_id\030\001"
  " \001(\003\"\242\001\n\023SetFriendAddRequest\022\036\n\006action\030\001"
  " \001(\0162\016.cqhttp.Action\0222\n\006params\030\002 \001(\0132\".c"
  "qhttp.SetFriendAddRequest.Params\0327\n\006Para"
  "ms\022\014\n\004flag\030\001 \001(\t\022\017\n\007approve\030\002 \001(\010\022\016\n\006rem"
  "ark\030\003 \001(\t\"\262\001\n\022SetGroupAddRequest\022\036\n\006acti"
  "on\030\001 \001(\0162\016.cqhttp.Action\0221\n\006params\030\002 \001(\013"
  "2!.cqhttp.SetGroupAddRequest.Params\032I\n\006P"
  "arams\022\014\n\004flag\030\001 \001(\t\022\020\n\010sub_type\030\002 \001(\t\022\017\n"
  "\007approve\030\003 \001(\010\022\016\n\006reason\030\004 \001(\t\"\226\001\n\014GetLo"
  "ginInfo\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022"
  "+\n\006params\030\002 \001(\0132\033.cqhttp.GetLoginInfo.Pa"
  "rams\022\014\n\004echo\030\003 \001(\t\032+\n\006Params\022\017\n\007user_id\030"
  "\001 \001(\003\022\020\n\010nickname\030\002 \001(\t\"5\n\020GetLoginInfoR"
  "esp\022\017\n\007user_id\030\001 \001(\003\022\020\n\010nickname\030\002 \001(\t\"D"
  "\n\024QiDianGetAccountInfo\022\036\n\006action\030\001 \001(\0162\016"
  ".cqhttp.Action\022\014\n\004echo\030\002 \001(\t\"T\n\030QiDianGe"
  "tAccountInfoResp\022\021\n\tmaster_id\030\001 \001(\003\022\020\n\010e"
  "xt_name\030\002 \001(\t\022\023\n\013create_time\030\003 \001(\003\"\277\001\n\014S"
  "etQQProfile\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Act"
  "ion\022+\n\006params\030\002 \001(\0132\033.cqhttp.SetQQProfil"
  "e.Params\032b\n\006Params\022\020\n\010nickname\030\001 \001(\t\022\017\n\007"
  "company\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\022\017\n\007college\030"
  "\004 \001(\t\022\025\n\rpersonal_note\030\005 \001(\t\"\234\001\n\017GetStra"
  "ngerInfo\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action"
  "\022.\n\006params\030\002 \001(\0132\036.cqhttp.GetStrangerInf"
  "o.Params\022\014\n\004echo\030\003 \001(\t\032+\n\006Params\022\017\n\007user"
  "_id\030\001 \001(\003\022\020\n\010no_cache\030\002 \001(\010\"\202\001\n\023GetStran"
  "gerInfoResp\022\017\n\007user_id\030\001 \001(\003\022\020\n\010nickname"
  "\030\002 \001(\t\022\013\n\003sex\030\003 \001(\t\022\013\n\003age\030\004 \001(\005\022\013\n\003qid\030"
  "\005 \001(\t\022\r\n\005level\030\006 \001(\005\022\022\n\nlogin_days\030\007 \001(\005"
  "\"=\n\rGetFriendList\022\036\n\006action\030\001 \001(\0162\016.cqht"
  "tp.Action\022\014\n\004echo\030\002 \001(\t\"\203\001\n\021GetFriendLis"
  "tResp\0221\n\007friends\030\001 \003(\0132 .cqhttp.GetFrien"
  "dListResp.Friend\032;\n\006Friend\022\017\n\007user_id\030\001 "
  "\001(\003\022\020\n\010nickname\030\002 \001(\t\022\016\n\006remark\030\003 \001(\t\"H\n"
  "\030UnidirectionalFriendList\022\036\n\006action\030\001 \001("
  "\0162\016.cqhttp.Action\022\014\n\004echo\030\002 \001(\t\"\230\001\n\034Unid"
  "irectionalFriendListResp\022;\n\006friend\030\001 \003(\013"
  "2+.cqhttp.UnidirectionalFriendListResp.F"
  "riend\032;\n\006Friend\022\017\n\007user_id\030\001 \001(\003\022\020\n\010nick"
  "name\030\002 \001(\t\022\016\n\006source\030\003 \001(\t\"v\n\014DeleteFrie"
  "nd\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022+\n\006pa"
  "rams\030\002 \001(\0132\033.cqhttp.DeleteFriend.Params\032"
  "\031\n\006Params\022\017\n\007user_id\030\001 \001(\003\"\227\001\n\014GetGroupI"
  "nfo\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022+\n\006p"
  "arams\030\002 \001(\0132\033.cqhttp.GetGroupInfo.Params"
  "\022\014\n\004echo\030\003 \001(\t\032,\n\006Params\022\020\n\010group_id\030\001 \001"
  "(\003\022\020\n\010no_cache\030\002 \001(\010\"\254\001\n\020GetGroupInfoRes"
  "p\022\020\n\010group_id\030\001 \001(\003\022\022\n\ngroup_name\030\002 \001(\t\022"
  "\022\n\ngroup_memo\030\003 \001(\t\022\031\n\021group_create_time"
  "\030\004 \001(\r\022\023\n\013group_level\030\005 \001(\r\022\024\n\014member_co"
  "unt\030\006 \001(\005\022\030\n\020max_member_count\030\007 \001(\005\"\205\001\n\014"
  "GetGroupList\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Ac"
  "tion\022+\n\006params\030\002 \001(\0132\033.cqhttp.GetGroupLi"
  "st.Params\022\014\n\004echo\030\003 \001(\t\032\032\n\006Params\022\020\n\010no_"
  "cache\030\001 \001(\010\"@\n\020GetGroupListResp\022,\n\ngroup"
  "_list\030\001 \003(\0132\030.cqhttp.GetGroupInfoResp\"\264\001"
  "\n\022GetGroupMemberInfo\022\036\n\006action\030\001 \001(\0162\016.c"
  "qhttp.Action\0221\n\006params\030\002 \001(\0132!.cqhttp.Ge"
  "tGroupMemberInfo.Params\022\014\n\004echo\030\003 \001(\t\032=\n"
  "\006Params\022\020\n\010group_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
  "(\003\022\020\n\010no_cache\030\003 \001(\010\"\275\002\n\026GetGroupMemberI"
  "nfoResp\022\020\n\010group_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
  "(\003\022\020\n\010nickname\030\003 \001(\t\022\014\n\004card\030\004 \001(\t\022\013\n\003se"
  "x\030\005 \001(\t\022\013\n\003age\030\006 \001(\005\022\014\n\004area\030\007 \001(\t\022\021\n\tjo"
  "in_time\030\010 \001(\005\022\026\n\016last_sent_time\030\t \001(\005\022\r\n"
  "\005level\030\n \001(\t\022\014\n\004role\030\013 \001(\t\022\022\n\nunfriendly"
  "\030\014 \001(\010\022\r\n\005title\030\r \001(\t\022\031\n\021title_expire_ti"
  "me\030\016 \001(\003\022\027\n\017card_changeable\030\017 \001(\010\022\031\n\021shu"
  "t_up_timestamp\030\020 \001(\003\"\243\001\n\022GetGroupMemberL"
  "ist\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\0221\n\006p"
  "arams\030\002 \001(\0132!.cqhttp.GetGroupMemberList."
  "Params\022\014\n\004echo\030\003 \001(\t\032,\n\006Params\022\020\n\010group_"
  "id\030\001 \001(\003\022\020\n\010no_cache\030\002 \001(\010\"S\n\026GetGroupMe"
  "mberListResp\0229\n\021group_member_list\030\001 \003(\0132"
  "\036.cqhttp.GetGroupMemberInfoResp\"\235\001\n\021GetG"
  "roupHonorInfo\022\036\n\006action\030\001 \001(\0162\016.cqhttp.A"
  "ction\0220\n\006params\030\002 \001(\0132 .cqhttp.GetGroupH"
  "onorInfo.Params\022\014\n\004echo\030\003 \001(\t\032(\n\006Params\022"
  "\020\n\010group_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\t\"\231\004\n\025GetG"
  "roupHonorInfoResp\022\020\n\010group_id\030\001 \001(\003\022B\n\021c"
  "urrent_talkative\030\002 \001(\0132\'.cqhttp.GetGroup"
  "HonorInfoResp.Talkative\022\?\n\016talkative_lis"
  "t\030\003 \003(\0132\'.cqhttp.GetGroupHonorInfoResp.T"
  "alkative\022\?\n\016performer_list\030\004 \003(\0132\'.cqhtt"
  "p.GetGroupHonorInfoResp.Talkative\022<\n\013leg"
  "end_list\030\005 \003(\0132\'.cqhttp.GetGroupHonorInf"
  "oResp.Talkative\022C\n\022strong_newbie_list\030\006 "
  "\003(\0132\'.cqhttp.GetGroupHonorInfoResp.Talka"
  "tive\022=\n\014emotion_list\030\007 \003(\0132\'.cqhttp.GetG"
  "roupHonorInfoResp.Talkative\032f\n\tTalkative"
  "\022\017\n\007user_id\030\001 \001(\003\022\020\n\010nickname\030\002 \001(\t\022\016\n\006a"
  "vatar\030\003 \001(\t\022\021\n\tday_count\030\004 \001(\005\022\023\n\013descri"
  "ption\030\005 \001(\t\"\177\n\nGetCoolies\022\036\n\006action\030\001 \001("
  "\0162\016.cqhttp.Action\022)\n\006params\030\002 \001(\0132\031.cqht"
  "tp.GetCoolies.Params\022\014\n\004echo\030\003 \001(\t\032\030\n\006Pa"
  "rams\022\016\n\006domain\030\001 \001(\t\"!\n\016GetCooliesResp\022\017"
  "\n\007cookies\030\001 \001(\t\"<\n\014GetCsrfToken\022\036\n\006actio"
  "n\030\001 \001(\0162\016.cqhttp.Action\022\014\n\004echo\030\002 \001(\t\"!\n"
  "\020GetCsrfTokenResp\022\r\n\005token\030\001 \001(\005\"\207\001\n\016Get"
  "Credentials\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Act"
  "ion\022-\n\006params\030\002 \001(\0132\035.cqhttp.GetCredenti"
  "als.Params\022\014\n\004echo\030\003 \001(\t\032\030\n\006Params\022\016\n\006do"
  "main\030\001 \001(\t\"9\n\022GetCredentialsResp\022\017\n\007cook"
  "ies\030\001 \001(\t\022\022\n\ncsrf_token\030\002 \001(\005\"\217\001\n\tGetRec"
  "ord\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022(\n\006p"
  "arams\030\002 \001(\0132\030.cqhttp.GetRecord.Params\022\014\n"
  "\004echo\030\003 \001(\t\032*\n\006Params\022\014\n\004file\030\001 \001(\t\022\022\n\no"
  "ut_format\030\002 \001(\t\"\035\n\rGetRecordResp\022\014\n\004file"
  "\030\001 \001(\t\"<\n\014CanSendImage\022\036\n\006action\030\001 \001(\0162\016"
  ".cqhttp.Action\022\014\n\004echo\030\002 \001(\t\"\037\n\020CanSendI"
  "mageResp\022\013\n\003yes\030\001 \001(\010\"=\n\rCanSendRecord\022\036"
  "\n\006action\030\001 \001(\0162\016.cqhttp.Action\022\014\n\004echo\030\002"
  " \001(\t\" \n\021CanSendRecordResp\022\013\n\003yes\030\001 \001(\010\">"
  "\n\016GetVersionInfo\022\036\n\006action\030\001 \001(\0162\016.cqhtt"
  "p.Action\022\014\n\004echo\030\002 \001(\t\"\325\002\n\022GetVersionInf"
  "oResp\022\020\n\010app_name\030\001 \001(\t\022\023\n\013app_version\030\002"
  " \001(\t\022\025\n\rapp_full_name\030\003 \001(\t\022\030\n\020protocol_"
  "version\030\004 \001(\t\022\025\n\rcoolq_edition\030\005 \001(\t\022\027\n\017"
  "coolq_directory\030\006 \001(\t\022\016\n\006cqhttp\030\007 \001(\010\022\026\n"
  "\016plugin_version\030\010 \001(\t\022\033\n\023plugin_build_nu"
  "mber\030\t \001(\005\022\"\n\032plugin_build_configuration"
  "\030\n \001(\t\022\027\n\017runtime_version\030\013 \001(\t\022\022\n\nrunti"
  "me_os\030\014 \001(\t\022\017\n\007version\030\r \001(\t\022\020\n\010protocol"
  "\030\016 \001(\005\"p\n\nSetRestart\022\036\n\006action\030\001 \001(\0162\016.c"
  "qhttp.Action\022)\n\006params\030\002 \001(\0132\031.cqhttp.Se"
  "tRestart.Params\032\027\n\006Params\022\r\n\005delay\030\001 \001(\005"
  "\",\n\nCleanCache\022\036\n\006action\030\001 \001(\0162\016.cqhttp."
  "Action\"\234\001\n\020SetGroupPortrait\022\036\n\006action\030\001 "
  "\001(\0162\016.cqhttp.Action\022/\n\006params\030\002 \001(\0132\037.cq"
  "http.SetGroupPortrait.Params\0327\n\006Params\022\020"
  "\n\010group_id\030\001 \001(\003\022\014\n\004file\030\002 \001(\t\022\r\n\005cache\030"
  "\003 \001(\005\"\206\001\n\rGetWordSlices\022\036\n\006action\030\001 \001(\0162"
  "\016.cqhttp.Action\022,\n\006params\030\002 \001(\0132\034.cqhttp"
  ".GetWordSlices.Params\022\014\n\004echo\030\003 \001(\t\032\031\n\006P"
  "arams\022\017\n\007content\030\001 \001(\t\"#\n\021GetWordSlicesR"
  "esp\022\016\n\006slices\030\001 \003(\t\"z\n\010OcrImage\022\036\n\006actio"
  "n\030\001 \001(\0162\016.cqhttp.Action\022\'\n\006params\030\002 \001(\0132"
  "\027.cqhttp.OcrImage.Params\022\014\n\004echo\030\003 \001(\t\032\027"
  "\n\006Params\022\r\n\005image\030\001 \001(\t\"\233\001\n\014OcrImageResp"
  "\0221\n\005texts\030\001 \003(\0132\".cqhttp.OcrImageResp.Te"
  "xtDetection\022\020\n\010language\030\002 \001(\t\032F\n\rTextDet"
  "ection\022\014\n\004text\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\005"
  "\022\023\n\013coordinates\030\003 \001(\t\"A\n\021GetGroupSystemM"
  "sg\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022\014\n\004ec"
  "ho\030\002 \001(\t\"\343\003\n\025GetGroupSystemMsgResp\022F\n\020in"
  "vited_requests\030\001 \003(\0132,.cqhttp.GetGroupSy"
  "stemMsgResp.InvitedRequest\022@\n\rjoin_reque"
  "sts\030\002 \003(\0132).cqhttp.GetGroupSystemMsgResp"
  ".JoinRequest\032\225\001\n\016InvitedRequest\022\022\n\nreque"
  "st_id\030\001 \001(\003\022\023\n\013invitor_uin\030\002 \001(\003\022\024\n\014invi"
  "tor_nick\030\003 \001(\t\022\020\n\010group_id\030\004 \001(\003\022\022\n\ngrou"
  "p_name\030\005 \001(\t\022\017\n\007checked\030\006 \001(\010\022\r\n\005actor\030\007"
  " \001(\003\032\247\001\n\013JoinRequest\022\022\n\nrequest_id\030\001 \001(\003"
  "\022\025\n\rrequester_uin\030\002 \001(\003\022\026\n\016requester_nic"
  "k\030\003 \001(\t\022\017\n\007message\030\004 \001(\t\022\020\n\010group_id\030\005 \001"
  "(\003\022\022\n\ngroup_name\030\006 \001(\t\022\017\n\007checked\030\007 \001(\010\022"
  "\r\n\005actor\030\010 \001(\003\"\234\001\n\021UploadPrivateFile\022\036\n\006"
  "action\030\001 \001(\0162\016.cqhttp.Action\0220\n\006params\030\002"
  " \001(\0132 .cqhttp.UploadPrivateFile.Params\0325"
  "\n\006Params\022\017\n\007user_id\030\001 \001(\003\022\014\n\004file\030\002 \001(\t\022"
  "\014\n\004name\030\003 \001(\t\"\251\001\n\017UploadGroupFile\022\036\n\006act"
  "ion\030\001 \001(\0162\016.cqhttp.Action\022.\n\006params\030\002 \001("
  "\0132\036.cqhttp.UploadGroupFile.Params\032F\n\006Par"
  "ams\022\020\n\010group_id\030\001 \001(\003\022\014\n\004file\030\002 \001(\t\022\014\n\004n"
  "ame\030\003 \001(\t\022\016\n\006folder\030\004 \001(\t\"\231\001\n\026GetGroupFi"
  "leSystemInfo\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Ac"
  "tion\0225\n\006params\030\002 \001(\0132%.cqhttp.GetGroupFi"
  "leSystemInfo.Params\022\014\n\004echo\030\003 \001(\t\032\032\n\006Par"
  "ams\022\020\n\010group_id\030\001 \001(\003\"n\n\032GetGroupFileSys"
  "temInfoResp\022\022\n\nfile_count\030\001 \001(\005\022\023\n\013limit"
  "_count\030\002 \001(\005\022\022\n\nused_space\030\003 \001(\003\022\023\n\013tota"
  "l_space\030\004 \001(\003\"\217\001\n\021GetGroupRootFiles\022\036\n\006a"
  "ction\030\001 \001(\0162\016.cqhttp.Action\0220\n\006params\030\002 "
  "\001(\0132 .cqhttp.GetGroupRootFiles.Params\022\014\n"
  "\004echo\030\003 \001(\t\032\032\n\006Params\022\020\n\010group_id\030\001 \001(\003\""
  "U\n\025GetGroupRootFilesResp\022\033\n\005files\030\001 \003(\0132"
  "\014.cqhttp.File\022\037\n\007folders\030\002 \003(\0132\016.cqhttp."
  "Folder\"\250\001\n\024getGroupFileByFolder\022\036\n\006actio"
  "n\030\001 \001(\0162\016.cqhttp.Action\0223\n\006params\030\002 \001(\0132"
  "#.cqhttp.getGroupFileByFolder.Params\022\014\n\004"
  "echo\030\003 \001(\t\032-\n\006Params\022\020\n\010group_id\030\001 \001(\003\022\021"
  "\n\tfolder_id\030\002 \001(\t\"X\n\030getGroupFileByFolde"
  "rResp\022\033\n\005files\030\001 \003(\0132\014.cqhttp.File\022\037\n\007fo"
  "lders\030\002 \003(\0132\016.cqhttp.Folder\"\252\001\n\025CreateGr"
  "oupFileFolder\022\036\n\006action\030\001 \001(\0162\016.cqhttp.A"
  "ction\0224\n\006params\030\002 \001(\0132$.cqhttp.CreateGro"
  "upFileFolder.Params\032;\n\006Params\022\020\n\010group_i"
  "d\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\021\n\tparent_id\030\003 \001(\t"
  "\"\224\001\n\021DeleteGroupFolder\022\036\n\006action\030\001 \001(\0162\016"
  ".cqhttp.Action\0220\n\006params\030\002 \001(\0132 .cqhttp."
  "DeleteGroupFolder.Params\032-\n\006Params\022\020\n\010gr"
  "oup_id\030\001 \001(\003\022\021\n\tfolder_id\030\002 \001(\t\"\235\001\n\017Dele"
  "teGroupFile\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Act"
  "ion\022.\n\006params\030\002 \001(\0132\036.cqhttp.DeleteGroup"
  "File.Params\032:\n\006Params\022\020\n\010group_id\030\001 \001(\003\022"
  "\017\n\007file_id\030\002 \001(\t\022\r\n\005busid\030\003 \001(\005\"\253\001\n\017GetG"
  "roupFileUrl\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Act"
  "ion\022.\n\006params\030\002 \001(\0132\036.cqhttp.GetGroupFil"
  "eUrl.Params\022\014\n\004echo\030\003 \001(\t\032:\n\006Params\022\020\n\010g"
  "roup_id\030\001 \001(\003\022\017\n\007file_id\030\002 \001(\t\022\r\n\005busid\030"
  "\003 \001(\005\"\"\n\023GetGroupFileUrlResp\022\013\n\003url\030\001 \001("
  "\t\"9\n\tGetStatus\022\036\n\006action\030\001 \001(\0162\016.cqhttp."
  "Action\022\014\n\004echo\030\002 \001(\t\"\365\002\n\rGetStatusResp\022\027"
  "\n\017app_initialized\030\001 \001(\010\022\023\n\013app_enabled\030\002"
  " \001(\010\022\024\n\014plugins_good\030\003 \001(\010\022\020\n\010app_good\030\004"
  " \001(\010\022\016\n\006online\030\005 \001(\010\022\014\n\004good\030\006 \001(\010\022.\n\004st"
  "at\030\007 \001(\0132 .cqhttp.GetStatusResp.Statisti"
  "cs\032\277\001\n\nStatistics\022\026\n\016PacketReceived\030\001 \001("
  "\004\022\022\n\nPacketSent\030\002 \001(\004\022\022\n\nPacketLost\030\003 \001("
  "\r\022\027\n\017MessageReceived\030\004 \001(\004\022\023\n\013MessageSen"
  "t\030\005 \001(\004\022\027\n\017DisconnectTimes\030\006 \001(\r\022\021\n\tLost"
  "Times\030\007 \001(\r\022\027\n\017LastMessageTime\030\010 \001(\003\"\223\001\n"
  "\023GetGroupAtAllRemain\022\036\n\006action\030\001 \001(\0162\016.c"
  "qhttp.Action\0222\n\006params\030\002 \001(\0132\".cqhttp.Ge"
  "tGroupAtAllRemain.Params\022\014\n\004echo\030\003 \001(\t\032\032"
  "\n\006Params\022\020\n\010group_id\030\001 \001(\003\"y\n\027GetGroupAt"
  "AllRemainResp\022\022\n\ncan_at_all\030\001 \001(\010\022%\n\035rem"
  "ain_at_all_count_for_group\030\002 \001(\005\022#\n\033rema"
  "in_at_all_count_for_uin\030\003 \001(\005\"\231\001\n\024Handle"
  "QuickOperation\022\036\n\006action\030\001 \001(\0162\016.cqhttp."
  "Action\0223\n\006params\030\002 \001(\0132#.cqhttp.HandleQu"
  "ickOperation.Params\032,\n\006Params\022\017\n\007content"
  "\030\001 \001(\t\022\021\n\toperation\030\002 \001(\t\"\235\001\n\017SendGroupN"
  "otice\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022.\n"
  "\006params\030\002 \001(\0132\036.cqhttp.SendGroupNotice.P"
  "arams\032:\n\006Params\022\020\n\010group_id\030\001 \001(\003\022\017\n\007con"
  "tent\030\002 \001(\t\022\r\n\005image\030\003 \001(\t\"\211\001\n\016GetGroupNo"
  "tice\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022-\n\006"
  "params\030\002 \001(\0132\035.cqhttp.GetGroupNotice.Par"
  "ams\022\014\n\004echo\030\003 \001(\t\032\032\n\006Params\022\020\n\010group_id\030"
  "\001 \001(\003\"\331\002\n\022GetGroupNoticeResp\0222\n\007notices\030"
  "\001 \003(\0132!.cqhttp.GetGroupNoticeResp.Notice"
  "\032\216\002\n\006Notice\022\021\n\tsender_id\030\001 \001(\003\022\024\n\014publis"
  "h_time\030\002 \001(\003\022@\n\007message\030\003 \001(\0132/.cqhttp.G"
  "etGroupNoticeResp.Notice.NoticeMessage\032\230"
  "\001\n\rNoticeMessage\022\014\n\004text\030\001 \001(\t\022E\n\006images"
  "\030\002 \003(\01325.cqhttp.GetGroupNoticeResp.Notic"
  "e.NoticeMessage.Image\0322\n\005Image\022\016\n\006height"
  "\030\001 \001(\t\022\r\n\005width\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\"}\n\021Rel"
  "oadEventFilter\022\036\n\006action\030\001 \001(\0162\016.cqhttp."
  "Action\0220\n\006params\030\002 \001(\0132 .cqhttp.ReloadEv"
  "entFilter.Params\032\026\n\006Params\022\014\n\004file\030\001 \001(\t"
  "\"\247\001\n\014DownloadFile\022\036\n\006action\030\001 \001(\0162\016.cqht"
  "tp.Action\022+\n\006params\030\002 \001(\0132\033.cqhttp.Downl"
  "oadFile.Params\022\014\n\004echo\030\003 \001(\t\032<\n\006Params\022\013"
  "\n\003url\030\001 \001(\t\022\024\n\014thread_count\030\002 \001(\005\022\017\n\007hea"
  "ders\030\003 \001(\t\" \n\020DownloadFileResp\022\014\n\004file\030\001"
  " \001(\t\"\215\001\n\020GetOnlineClients\022\036\n\006action\030\001 \001("
  "\0162\016.cqhttp.Action\022/\n\006params\030\002 \001(\0132\037.cqht"
  "tp.GetOnlineClients.Params\022\014\n\004echo\030\003 \001(\t"
  "\032\032\n\006Params\022\020\n\010no_cache\030\001 \001(\010\"7\n\024GetOnlin"
  "eClientsResp\022\037\n\007clients\030\001 \003(\0132\016.cqhttp.D"
  "evice\"\246\001\n\022GetGroupMsgHistory\022\036\n\006action\030\001"
  " \001(\0162\016.cqhttp.Action\0221\n\006params\030\002 \001(\0132!.c"
  "qhttp.GetGroupMsgHistory.Params\022\014\n\004echo\030"
  "\003 \001(\t\032/\n\006Params\022\023\n\013message_seq\030\001 \001(\003\022\020\n\010"
  "group_id\030\002 \001(\003\"*\n\026GetGroupMsgHistoryResp"
  "\022\020\n\010messages\030\001 \003(\t\"{\n\rSetEssenceMsg\022\036\n\006a"
  "ction\030\001 \001(\0162\016.cqhttp.Action\022,\n\006params\030\002 "
  "\001(\0132\034.cqhttp.SetEssenceMsg.Params\032\034\n\006Par"
  "ams\022\022\n\nmessage_id\030\001 \001(\005\"\201\001\n\020DeleteEssenc"
  "eMsg\022\036\n\006action\030\001 \001(\0162\016.cqhttp.Action\022/\n\006"
  "params\030\002 \001(\0132\037.cqhttp.DeleteEssenceMsg.P"
  "arams\032\034\n\006Params\022\022\n\nmessage_id\030\001 \001(\005\"\217\001\n\021"
  "GetEssenceMsgList\022\036\n\006action\030\001 \001(\0162\016.cqht"
  "tp.Action\0220\n\006params\030\002 \001(\0132 .cqhttp.GetEs"
  "senceMsgList.Params\022\014\n\004echo\030\003 \001(\t\032\032\n\006Par"
  "ams\022\020\n\010group_id\030\001 \001(\003\"\253\001\n\025GetEssenceMsgL"
  "istResp\022\021\n\tsender_id\030\001 \001(\003\022\023\n\013sender_nic"
  "k\030\002 \001(\t\022\023\n\013sender_time\030\003 \001(\003\022\023\n\013operator"
  "_id\030\004 \001(\003\022\025\n\roperator_nick\030\005 \001(\t\022\025\n\roper"
  "ator_time\030\006 \001(\003\022\022\n\nmessage_id\030\007 \001(\005\"\204\001\n\016"
  "CheckUlrSafely\022\036\n\006action\030\001 \001(\0162\016.cqhttp."
  "Action\022-\n\006params\030\002 \001(\0132\035.cqhttp.CheckUlr"
  "Safely.Params\022\014\n\004echo\030\003 \001(\t\032\025\n\006Params\022\013\n"
  "\003url\030\001 \001(\t\"#\n\022CheckUlrSafelyResp\022\r\n\005leve"
  "l\030\001 \001(\005\"\202\001\n\014GetModelShow\022\036\n\006action\030\001 \001(\016"
  "2\016.cqhttp.Action\022+\n\006params\030\002 \001(\0132\033.cqhtt"
  "p.GetModelShow.Params\022\014\n\004echo\030\003 \001(\t\032\027\n\006P"
  "arams\022\r\n\005model\030\001 \001(\t\"w\n\020GetModelShowResp"
  "\0222\n\010variants\030\001 \003(\0132 .cqhttp.GetModelShow"
  "Resp.Variant\032/\n\007Variant\022\022\n\nmodel_show\030\001 "
  "\001(\t\022\020\n\010need_pay\030\002 \001(\010\"\210\001\n\014SetModelShow\022\036"
  "\n\006action\030\001 \001(\0162\016.cqhttp.Action\022+\n\006params"
  "\030\002 \001(\0132\033.cqhttp.SetModelShow.Params\032+\n\006P"
  "arams\022\r\n\005model\030\001 \001(\t\022\022\n\nmodel_show\030\002 \001(\t"
  "\"\222\001\n\032DeleteUnidirectionalFriend\022\036\n\006actio"
  "n\030\001 \001(\0162\016.cqhttp.Action\0229\n\006params\030\002 \001(\0132"
  ").cqhttp.DeleteUnidirectionalFriend.Para"
  "ms\032\031\n\006Params\022\017\n\007user_id\030\001 \001(\003\"\300\001\n\025SendPr"
  "ivateForwardMsg\022\036\n\006action\030\001 \001(\0162\016.cqhttp"
  ".Action\0224\n\006params\030\002 \001(\0132$.cqhttp.SendPri"
  "vateForwardMsg.Params\022\014\n\004echo\030\003 \001(\t\032C\n\006P"
  "arams\022\017\n\007user_id\030\001 \001(\003\022(\n\010messages\030\002 \003(\013"
  "2\026.cqhttp.ForwardMessage\"C\n\031SendPrivateF"
  "orwardMsgResp\022\022\n\nmessage_id\030\001 \001(\003\022\022\n\nfor"
  "ward_id\030\002 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_cqhttp_5fapi_2eproto_deps[1] = {
  &::descriptor_table_cqhttp_5fbase_2eproto,
};
static ::_pbi::once_flag descriptor_table_cqhttp_5fapi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cqhttp_5fapi_2eproto = {
    false, false, 15661, descriptor_table_protodef_cqhttp_5fapi_2eproto,
    "cqhttp_api.proto",
    &descriptor_table_cqhttp_5fapi_2eproto_once, descriptor_table_cqhttp_5fapi_2eproto_deps, 1, 189,
    schemas, file_default_instances, TableStruct_cqhttp_5fapi_2eproto::offsets,
    file_level_metadata_cqhttp_5fapi_2eproto, file_level_enum_descriptors_cqhttp_5fapi_2eproto,
    file_level_service_descriptors_cqhttp_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cqhttp_5fapi_2eproto_getter() {
  return &descriptor_table_cqhttp_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cqhttp_5fapi_2eproto(&descriptor_table_cqhttp_5fapi_2eproto);
namespace cqhttp {

// ===================================================================

class SendPrivateMsg_Params::_Internal {
 public:
};

SendPrivateMsg_Params::SendPrivateMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateMsg.Params)
}
SendPrivateMsg_Params::SendPrivateMsg_Params(const SendPrivateMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.auto_escape_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.auto_escape_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.auto_escape_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateMsg.Params)
}

inline void SendPrivateMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.auto_escape_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendPrivateMsg_Params::~SendPrivateMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void SendPrivateMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.auto_escape_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.auto_escape_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendPrivateMsg.Params.message"));
        } else
          goto handle_unusual;
        continue;
      // bool auto_escape = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.auto_escape_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_group_id(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendPrivateMsg.Params.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // bool auto_escape = 4;
  if (this->_internal_auto_escape() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_auto_escape(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateMsg.Params)
  return target;
}

size_t SendPrivateMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool auto_escape = 4;
  if (this->_internal_auto_escape() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateMsg_Params::GetClassData() const { return &_class_data_; }


void SendPrivateMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateMsg_Params*>(&to_msg);
  auto& from = static_cast<const SendPrivateMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_auto_escape() != 0) {
    _this->_internal_set_auto_escape(from._internal_auto_escape());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateMsg_Params::CopyFrom(const SendPrivateMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateMsg_Params::IsInitialized() const {
  return true;
}

void SendPrivateMsg_Params::InternalSwap(SendPrivateMsg_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendPrivateMsg_Params, _impl_.auto_escape_)
      + sizeof(SendPrivateMsg_Params::_impl_.auto_escape_)
      - PROTOBUF_FIELD_OFFSET(SendPrivateMsg_Params, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[0]);
}

// ===================================================================

class SendPrivateMsg::_Internal {
 public:
  static const ::cqhttp::SendPrivateMsg_Params& params(const SendPrivateMsg* msg);
};

const ::cqhttp::SendPrivateMsg_Params&
SendPrivateMsg::_Internal::params(const SendPrivateMsg* msg) {
  return *msg->_impl_.params_;
}
SendPrivateMsg::SendPrivateMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateMsg)
}
SendPrivateMsg::SendPrivateMsg(const SendPrivateMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendPrivateMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateMsg)
}

inline void SendPrivateMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendPrivateMsg::~SendPrivateMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendPrivateMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendPrivateMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendPrivateMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendPrivateMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendPrivateMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateMsg)
  return target;
}

size_t SendPrivateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.SendPrivateMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateMsg::GetClassData() const { return &_class_data_; }


void SendPrivateMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateMsg*>(&to_msg);
  auto& from = static_cast<const SendPrivateMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendPrivateMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateMsg::CopyFrom(const SendPrivateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateMsg::IsInitialized() const {
  return true;
}

void SendPrivateMsg::InternalSwap(SendPrivateMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendPrivateMsg, _impl_.action_)
      + sizeof(SendPrivateMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendPrivateMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[1]);
}

// ===================================================================

class SendPrivateMsgResp::_Internal {
 public:
};

SendPrivateMsgResp::SendPrivateMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateMsgResp)
}
SendPrivateMsgResp::SendPrivateMsgResp(const SendPrivateMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateMsgResp)
}

inline void SendPrivateMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendPrivateMsgResp::~SendPrivateMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendPrivateMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateMsgResp)
  return target;
}

size_t SendPrivateMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateMsgResp::GetClassData() const { return &_class_data_; }


void SendPrivateMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateMsgResp*>(&to_msg);
  auto& from = static_cast<const SendPrivateMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateMsgResp::CopyFrom(const SendPrivateMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateMsgResp::IsInitialized() const {
  return true;
}

void SendPrivateMsgResp::InternalSwap(SendPrivateMsgResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[2]);
}

// ===================================================================

class SendGroupMsg_Params::_Internal {
 public:
};

SendGroupMsg_Params::SendGroupMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupMsg.Params)
}
SendGroupMsg_Params::SendGroupMsg_Params(const SendGroupMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.auto_escape_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.auto_escape_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.auto_escape_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupMsg.Params)
}

inline void SendGroupMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.auto_escape_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupMsg_Params::~SendGroupMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void SendGroupMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.auto_escape_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.auto_escape_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupMsg.Params.message"));
        } else
          goto handle_unusual;
        continue;
      // bool auto_escape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.auto_escape_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupMsg.Params.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // bool auto_escape = 3;
  if (this->_internal_auto_escape() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_auto_escape(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupMsg.Params)
  return target;
}

size_t SendGroupMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool auto_escape = 3;
  if (this->_internal_auto_escape() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupMsg_Params::GetClassData() const { return &_class_data_; }


void SendGroupMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupMsg_Params*>(&to_msg);
  auto& from = static_cast<const SendGroupMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_auto_escape() != 0) {
    _this->_internal_set_auto_escape(from._internal_auto_escape());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupMsg_Params::CopyFrom(const SendGroupMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupMsg_Params::IsInitialized() const {
  return true;
}

void SendGroupMsg_Params::InternalSwap(SendGroupMsg_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGroupMsg_Params, _impl_.auto_escape_)
      + sizeof(SendGroupMsg_Params::_impl_.auto_escape_)
      - PROTOBUF_FIELD_OFFSET(SendGroupMsg_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[3]);
}

// ===================================================================

class SendGroupMsg::_Internal {
 public:
  static const ::cqhttp::SendGroupMsg_Params& params(const SendGroupMsg* msg);
};

const ::cqhttp::SendGroupMsg_Params&
SendGroupMsg::_Internal::params(const SendGroupMsg* msg) {
  return *msg->_impl_.params_;
}
SendGroupMsg::SendGroupMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupMsg)
}
SendGroupMsg::SendGroupMsg(const SendGroupMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendGroupMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupMsg)
}

inline void SendGroupMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupMsg::~SendGroupMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendGroupMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendGroupMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendGroupMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupMsg)
  return target;
}

size_t SendGroupMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.SendGroupMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupMsg::GetClassData() const { return &_class_data_; }


void SendGroupMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupMsg*>(&to_msg);
  auto& from = static_cast<const SendGroupMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendGroupMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupMsg::CopyFrom(const SendGroupMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupMsg::IsInitialized() const {
  return true;
}

void SendGroupMsg::InternalSwap(SendGroupMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGroupMsg, _impl_.action_)
      + sizeof(SendGroupMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendGroupMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[4]);
}

// ===================================================================

class SendGroupMsgResp::_Internal {
 public:
};

SendGroupMsgResp::SendGroupMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupMsgResp)
}
SendGroupMsgResp::SendGroupMsgResp(const SendGroupMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupMsgResp)
}

inline void SendGroupMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendGroupMsgResp::~SendGroupMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendGroupMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupMsgResp)
  return target;
}

size_t SendGroupMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupMsgResp::GetClassData() const { return &_class_data_; }


void SendGroupMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupMsgResp*>(&to_msg);
  auto& from = static_cast<const SendGroupMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupMsgResp::CopyFrom(const SendGroupMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupMsgResp::IsInitialized() const {
  return true;
}

void SendGroupMsgResp::InternalSwap(SendGroupMsgResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[5]);
}

// ===================================================================

class SendGroupForwardMsg_Params::_Internal {
 public:
};

SendGroupForwardMsg_Params::SendGroupForwardMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupForwardMsg.Params)
}
SendGroupForwardMsg_Params::SendGroupForwardMsg_Params(const SendGroupForwardMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupForwardMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupForwardMsg.Params)
}

inline void SendGroupForwardMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupForwardMsg_Params::~SendGroupForwardMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupForwardMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupForwardMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void SendGroupForwardMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupForwardMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupForwardMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupForwardMsg.Params.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupForwardMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupForwardMsg.Params.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupForwardMsg.Params)
  return target;
}

size_t SendGroupForwardMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupForwardMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupForwardMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupForwardMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupForwardMsg_Params::GetClassData() const { return &_class_data_; }


void SendGroupForwardMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupForwardMsg_Params*>(&to_msg);
  auto& from = static_cast<const SendGroupForwardMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupForwardMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupForwardMsg_Params::CopyFrom(const SendGroupForwardMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupForwardMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupForwardMsg_Params::IsInitialized() const {
  return true;
}

void SendGroupForwardMsg_Params::InternalSwap(SendGroupForwardMsg_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupForwardMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[6]);
}

// ===================================================================

class SendGroupForwardMsg::_Internal {
 public:
  static const ::cqhttp::SendGroupForwardMsg_Params& params(const SendGroupForwardMsg* msg);
};

const ::cqhttp::SendGroupForwardMsg_Params&
SendGroupForwardMsg::_Internal::params(const SendGroupForwardMsg* msg) {
  return *msg->_impl_.params_;
}
SendGroupForwardMsg::SendGroupForwardMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupForwardMsg)
}
SendGroupForwardMsg::SendGroupForwardMsg(const SendGroupForwardMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupForwardMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendGroupForwardMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupForwardMsg)
}

inline void SendGroupForwardMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupForwardMsg::~SendGroupForwardMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupForwardMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupForwardMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendGroupForwardMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupForwardMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupForwardMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupForwardMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendGroupForwardMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupForwardMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupForwardMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupForwardMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendGroupForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupForwardMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupForwardMsg)
  return target;
}

size_t SendGroupForwardMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupForwardMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.SendGroupForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupForwardMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupForwardMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupForwardMsg::GetClassData() const { return &_class_data_; }


void SendGroupForwardMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupForwardMsg*>(&to_msg);
  auto& from = static_cast<const SendGroupForwardMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupForwardMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendGroupForwardMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupForwardMsg::CopyFrom(const SendGroupForwardMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupForwardMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupForwardMsg::IsInitialized() const {
  return true;
}

void SendGroupForwardMsg::InternalSwap(SendGroupForwardMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGroupForwardMsg, _impl_.action_)
      + sizeof(SendGroupForwardMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendGroupForwardMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupForwardMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[7]);
}

// ===================================================================

class SendGroupForwardMsgResp::_Internal {
 public:
};

SendGroupForwardMsgResp::SendGroupForwardMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupForwardMsgResp)
}
SendGroupForwardMsgResp::SendGroupForwardMsgResp(const SendGroupForwardMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupForwardMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.forward_id_){}
    , decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.forward_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forward_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_forward_id().empty()) {
    _this->_impl_.forward_id_.Set(from._internal_forward_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupForwardMsgResp)
}

inline void SendGroupForwardMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.forward_id_){}
    , decltype(_impl_.message_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.forward_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forward_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupForwardMsgResp::~SendGroupForwardMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupForwardMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupForwardMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.forward_id_.Destroy();
}

void SendGroupForwardMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupForwardMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupForwardMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forward_id_.ClearToEmpty();
  _impl_.message_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupForwardMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string forward_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_forward_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupForwardMsgResp.forward_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupForwardMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupForwardMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_message_id(), target);
  }

  // string forward_id = 2;
  if (!this->_internal_forward_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_forward_id().data(), static_cast<int>(this->_internal_forward_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupForwardMsgResp.forward_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_forward_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupForwardMsgResp)
  return target;
}

size_t SendGroupForwardMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupForwardMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string forward_id = 2;
  if (!this->_internal_forward_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_forward_id());
  }

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupForwardMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupForwardMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupForwardMsgResp::GetClassData() const { return &_class_data_; }


void SendGroupForwardMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupForwardMsgResp*>(&to_msg);
  auto& from = static_cast<const SendGroupForwardMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupForwardMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_forward_id().empty()) {
    _this->_internal_set_forward_id(from._internal_forward_id());
  }
  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupForwardMsgResp::CopyFrom(const SendGroupForwardMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupForwardMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupForwardMsgResp::IsInitialized() const {
  return true;
}

void SendGroupForwardMsgResp::InternalSwap(SendGroupForwardMsgResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.forward_id_, lhs_arena,
      &other->_impl_.forward_id_, rhs_arena
  );
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupForwardMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[8]);
}

// ===================================================================

class SendMessage_Params::_Internal {
 public:
};

SendMessage_Params::SendMessage_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendMessage.Params)
}
SendMessage_Params::SendMessage_Params(const SendMessage_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessage_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.auto_escape_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_type().empty()) {
    _this->_impl_.message_type_.Set(from._internal_message_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.auto_escape_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.auto_escape_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendMessage.Params)
}

inline void SendMessage_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.auto_escape_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendMessage_Params::~SendMessage_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendMessage.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessage_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_type_.Destroy();
  _impl_.message_.Destroy();
}

void SendMessage_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessage_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendMessage.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_type_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.auto_escape_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.auto_escape_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessage_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendMessage.Params.message_type"));
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendMessage.Params.message"));
        } else
          goto handle_unusual;
        continue;
      // bool auto_escape = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.auto_escape_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessage_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendMessage.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_type = 1;
  if (!this->_internal_message_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_type().data(), static_cast<int>(this->_internal_message_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendMessage.Params.message_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_type(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int64 group_id = 3;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_group_id(), target);
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendMessage.Params.message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message(), target);
  }

  // bool auto_escape = 5;
  if (this->_internal_auto_escape() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_auto_escape(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendMessage.Params)
  return target;
}

size_t SendMessage_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendMessage.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_type = 1;
  if (!this->_internal_message_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_type());
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int64 group_id = 3;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool auto_escape = 5;
  if (this->_internal_auto_escape() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessage_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessage_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessage_Params::GetClassData() const { return &_class_data_; }


void SendMessage_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessage_Params*>(&to_msg);
  auto& from = static_cast<const SendMessage_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendMessage.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_type().empty()) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_auto_escape() != 0) {
    _this->_internal_set_auto_escape(from._internal_auto_escape());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessage_Params::CopyFrom(const SendMessage_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendMessage.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessage_Params::IsInitialized() const {
  return true;
}

void SendMessage_Params::InternalSwap(SendMessage_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_type_, lhs_arena,
      &other->_impl_.message_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessage_Params, _impl_.auto_escape_)
      + sizeof(SendMessage_Params::_impl_.auto_escape_)
      - PROTOBUF_FIELD_OFFSET(SendMessage_Params, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessage_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[9]);
}

// ===================================================================

class SendMessage::_Internal {
 public:
  static const ::cqhttp::SendMessage_Params& params(const SendMessage* msg);
};

const ::cqhttp::SendMessage_Params&
SendMessage::_Internal::params(const SendMessage* msg) {
  return *msg->_impl_.params_;
}
SendMessage::SendMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendMessage)
}
SendMessage::SendMessage(const SendMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendMessage_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendMessage)
}

inline void SendMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendMessage::~SendMessage() {
  // @@protoc_insertion_point(destructor:cqhttp.SendMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendMessage.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendMessage.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendMessage.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendMessage.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendMessage)
  return target;
}

size_t SendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.SendMessage.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessage::GetClassData() const { return &_class_data_; }


void SendMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessage*>(&to_msg);
  auto& from = static_cast<const SendMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendMessage_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessage::CopyFrom(const SendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessage::IsInitialized() const {
  return true;
}

void SendMessage::InternalSwap(SendMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessage, _impl_.action_)
      + sizeof(SendMessage::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendMessage, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[10]);
}

// ===================================================================

class SendMessageResp::_Internal {
 public:
};

SendMessageResp::SendMessageResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendMessageResp)
}
SendMessageResp::SendMessageResp(const SendMessageResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessageResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendMessageResp)
}

inline void SendMessageResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendMessageResp::~SendMessageResp() {
  // @@protoc_insertion_point(destructor:cqhttp.SendMessageResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessageResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendMessageResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendMessageResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessageResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessageResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendMessageResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendMessageResp)
  return target;
}

size_t SendMessageResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendMessageResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessageResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessageResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessageResp::GetClassData() const { return &_class_data_; }


void SendMessageResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessageResp*>(&to_msg);
  auto& from = static_cast<const SendMessageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendMessageResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageResp::CopyFrom(const SendMessageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageResp::IsInitialized() const {
  return true;
}

void SendMessageResp::InternalSwap(SendMessageResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessageResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[11]);
}

// ===================================================================

class DeleteMsg_Params::_Internal {
 public:
};

DeleteMsg_Params::DeleteMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteMsg.Params)
}
DeleteMsg_Params::DeleteMsg_Params(const DeleteMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteMsg.Params)
}

inline void DeleteMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteMsg_Params::~DeleteMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteMsg.Params)
  return target;
}

size_t DeleteMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMsg_Params::GetClassData() const { return &_class_data_; }


void DeleteMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteMsg_Params*>(&to_msg);
  auto& from = static_cast<const DeleteMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMsg_Params::CopyFrom(const DeleteMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMsg_Params::IsInitialized() const {
  return true;
}

void DeleteMsg_Params::InternalSwap(DeleteMsg_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[12]);
}

// ===================================================================

class DeleteMsg::_Internal {
 public:
  static const ::cqhttp::DeleteMsg_Params& params(const DeleteMsg* msg);
};

const ::cqhttp::DeleteMsg_Params&
DeleteMsg::_Internal::params(const DeleteMsg* msg) {
  return *msg->_impl_.params_;
}
DeleteMsg::DeleteMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteMsg)
}
DeleteMsg::DeleteMsg(const DeleteMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteMsg)
}

inline void DeleteMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteMsg::~DeleteMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteMsg)
  return target;
}

size_t DeleteMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMsg::GetClassData() const { return &_class_data_; }


void DeleteMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteMsg*>(&to_msg);
  auto& from = static_cast<const DeleteMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMsg::CopyFrom(const DeleteMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMsg::IsInitialized() const {
  return true;
}

void DeleteMsg::InternalSwap(DeleteMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteMsg, _impl_.action_)
      + sizeof(DeleteMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[13]);
}

// ===================================================================

class getMsg_Params::_Internal {
 public:
};

getMsg_Params::getMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getMsg.Params)
}
getMsg_Params::getMsg_Params(const getMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.getMsg.Params)
}

inline void getMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getMsg_Params::~getMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.getMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getMsg.Params)
  return target;
}

size_t getMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMsg_Params::GetClassData() const { return &_class_data_; }


void getMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMsg_Params*>(&to_msg);
  auto& from = static_cast<const getMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMsg_Params::CopyFrom(const getMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMsg_Params::IsInitialized() const {
  return true;
}

void getMsg_Params::InternalSwap(getMsg_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[14]);
}

// ===================================================================

class getMsg::_Internal {
 public:
  static const ::cqhttp::getMsg_Params& params(const getMsg* msg);
};

const ::cqhttp::getMsg_Params&
getMsg::_Internal::params(const getMsg* msg) {
  return *msg->_impl_.params_;
}
getMsg::getMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getMsg)
}
getMsg::getMsg(const getMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::getMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.getMsg)
}

inline void getMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMsg::~getMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.getMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void getMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.getMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.getMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getMsg)
  return target;
}

size_t getMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.getMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMsg::GetClassData() const { return &_class_data_; }


void getMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMsg*>(&to_msg);
  auto& from = static_cast<const getMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::getMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMsg::CopyFrom(const getMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMsg::IsInitialized() const {
  return true;
}

void getMsg::InternalSwap(getMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getMsg, _impl_.action_)
      + sizeof(getMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(getMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[15]);
}

// ===================================================================

class getMsgResp::_Internal {
 public:
  static const ::cqhttp::Sender& sender(const getMsgResp* msg);
};

const ::cqhttp::Sender&
getMsgResp::_Internal::sender(const getMsgResp* msg) {
  return *msg->_impl_.sender_;
}
void getMsgResp::clear_sender() {
  if (GetArenaForAllocation() == nullptr && _impl_.sender_ != nullptr) {
    delete _impl_.sender_;
  }
  _impl_.sender_ = nullptr;
}
getMsgResp::getMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getMsgResp)
}
getMsgResp::getMsgResp(const getMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.raw_message_){}
    , decltype(_impl_.sender_){nullptr}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_){}
    , decltype(_impl_.message_id_){}
    , decltype(_impl_.real_id_){}
    , decltype(_impl_.time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_type().empty()) {
    _this->_impl_.message_type_.Set(from._internal_message_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.raw_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_message().empty()) {
    _this->_impl_.raw_message_.Set(from._internal_raw_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_sender()) {
    _this->_impl_.sender_ = new ::cqhttp::Sender(*from._impl_.sender_);
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.time_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.time_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.getMsgResp)
}

inline void getMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.raw_message_){}
    , decltype(_impl_.sender_){nullptr}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.group_){false}
    , decltype(_impl_.message_id_){0}
    , decltype(_impl_.real_id_){0}
    , decltype(_impl_.time_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.raw_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMsgResp::~getMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.getMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_type_.Destroy();
  _impl_.message_.Destroy();
  _impl_.raw_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.sender_;
}

void getMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_type_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.raw_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.sender_ != nullptr) {
    delete _impl_.sender_;
  }
  _impl_.sender_ = nullptr;
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.time_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 message_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 real_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.real_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_message_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getMsgResp.message_type"));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.Sender sender = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_sender(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getMsgResp.message"));
        } else
          goto handle_unusual;
        continue;
      // string raw_message = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_raw_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getMsgResp.raw_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool group = 1;
  if (this->_internal_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_group(), target);
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_group_id(), target);
  }

  // int32 message_id = 3;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_message_id(), target);
  }

  // int32 real_id = 4;
  if (this->_internal_real_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_real_id(), target);
  }

  // string message_type = 5;
  if (!this->_internal_message_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_type().data(), static_cast<int>(this->_internal_message_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getMsgResp.message_type");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_message_type(), target);
  }

  // .cqhttp.Sender sender = 6;
  if (this->_internal_has_sender()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::sender(this),
        _Internal::sender(this).GetCachedSize(), target, stream);
  }

  // int32 time = 7;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_time(), target);
  }

  // string message = 8;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getMsgResp.message");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_message(), target);
  }

  // string raw_message = 9;
  if (!this->_internal_raw_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raw_message().data(), static_cast<int>(this->_internal_raw_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getMsgResp.raw_message");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_raw_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getMsgResp)
  return target;
}

size_t getMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_type = 5;
  if (!this->_internal_message_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_type());
  }

  // string message = 8;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string raw_message = 9;
  if (!this->_internal_raw_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raw_message());
  }

  // .cqhttp.Sender sender = 6;
  if (this->_internal_has_sender()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sender_);
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool group = 1;
  if (this->_internal_group() != 0) {
    total_size += 1 + 1;
  }

  // int32 message_id = 3;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  // int32 real_id = 4;
  if (this->_internal_real_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_real_id());
  }

  // int32 time = 7;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMsgResp::GetClassData() const { return &_class_data_; }


void getMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMsgResp*>(&to_msg);
  auto& from = static_cast<const getMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_type().empty()) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_raw_message().empty()) {
    _this->_internal_set_raw_message(from._internal_raw_message());
  }
  if (from._internal_has_sender()) {
    _this->_internal_mutable_sender()->::cqhttp::Sender::MergeFrom(
        from._internal_sender());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_group() != 0) {
    _this->_internal_set_group(from._internal_group());
  }
  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (from._internal_real_id() != 0) {
    _this->_internal_set_real_id(from._internal_real_id());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMsgResp::CopyFrom(const getMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMsgResp::IsInitialized() const {
  return true;
}

void getMsgResp::InternalSwap(getMsgResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_type_, lhs_arena,
      &other->_impl_.message_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.raw_message_, lhs_arena,
      &other->_impl_.raw_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getMsgResp, _impl_.time_)
      + sizeof(getMsgResp::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(getMsgResp, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[16]);
}

// ===================================================================

class GetForwardMsg_Params::_Internal {
 public:
};

GetForwardMsg_Params::GetForwardMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetForwardMsg.Params)
}
GetForwardMsg_Params::GetForwardMsg_Params(const GetForwardMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetForwardMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_id().empty()) {
    _this->_impl_.message_id_.Set(from._internal_message_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetForwardMsg.Params)
}

inline void GetForwardMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetForwardMsg_Params::~GetForwardMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetForwardMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetForwardMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_id_.Destroy();
}

void GetForwardMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetForwardMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetForwardMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetForwardMsg.Params.message_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetForwardMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetForwardMsg.Params.message_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetForwardMsg.Params)
  return target;
}

size_t GetForwardMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetForwardMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForwardMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetForwardMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForwardMsg_Params::GetClassData() const { return &_class_data_; }


void GetForwardMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetForwardMsg_Params*>(&to_msg);
  auto& from = static_cast<const GetForwardMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetForwardMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetForwardMsg_Params::CopyFrom(const GetForwardMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetForwardMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardMsg_Params::IsInitialized() const {
  return true;
}

void GetForwardMsg_Params::InternalSwap(GetForwardMsg_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_id_, lhs_arena,
      &other->_impl_.message_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetForwardMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[17]);
}

// ===================================================================

class GetForwardMsg::_Internal {
 public:
  static const ::cqhttp::GetForwardMsg_Params& params(const GetForwardMsg* msg);
};

const ::cqhttp::GetForwardMsg_Params&
GetForwardMsg::_Internal::params(const GetForwardMsg* msg) {
  return *msg->_impl_.params_;
}
GetForwardMsg::GetForwardMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetForwardMsg)
}
GetForwardMsg::GetForwardMsg(const GetForwardMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetForwardMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetForwardMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetForwardMsg)
}

inline void GetForwardMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetForwardMsg::~GetForwardMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.GetForwardMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetForwardMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetForwardMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetForwardMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetForwardMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetForwardMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetForwardMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetForwardMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetForwardMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetForwardMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetForwardMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetForwardMsg)
  return target;
}

size_t GetForwardMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetForwardMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForwardMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetForwardMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForwardMsg::GetClassData() const { return &_class_data_; }


void GetForwardMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetForwardMsg*>(&to_msg);
  auto& from = static_cast<const GetForwardMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetForwardMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetForwardMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetForwardMsg::CopyFrom(const GetForwardMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetForwardMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardMsg::IsInitialized() const {
  return true;
}

void GetForwardMsg::InternalSwap(GetForwardMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetForwardMsg, _impl_.action_)
      + sizeof(GetForwardMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetForwardMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetForwardMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[18]);
}

// ===================================================================

class GetForwardMsgResp_Messages::_Internal {
 public:
  static const ::cqhttp::Sender& sender(const GetForwardMsgResp_Messages* msg);
};

const ::cqhttp::Sender&
GetForwardMsgResp_Messages::_Internal::sender(const GetForwardMsgResp_Messages* msg) {
  return *msg->_impl_.sender_;
}
void GetForwardMsgResp_Messages::clear_sender() {
  if (GetArenaForAllocation() == nullptr && _impl_.sender_ != nullptr) {
    delete _impl_.sender_;
  }
  _impl_.sender_ = nullptr;
}
GetForwardMsgResp_Messages::GetForwardMsgResp_Messages(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetForwardMsgResp.Messages)
}
GetForwardMsgResp_Messages::GetForwardMsgResp_Messages(const GetForwardMsgResp_Messages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetForwardMsgResp_Messages* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.sender_){nullptr}
    , decltype(_impl_.time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_sender()) {
    _this->_impl_.sender_ = new ::cqhttp::Sender(*from._impl_.sender_);
  }
  _this->_impl_.time_ = from._impl_.time_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetForwardMsgResp.Messages)
}

inline void GetForwardMsgResp_Messages::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.sender_){nullptr}
    , decltype(_impl_.time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetForwardMsgResp_Messages::~GetForwardMsgResp_Messages() {
  // @@protoc_insertion_point(destructor:cqhttp.GetForwardMsgResp.Messages)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetForwardMsgResp_Messages::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
  if (this != internal_default_instance()) delete _impl_.sender_;
}

void GetForwardMsgResp_Messages::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetForwardMsgResp_Messages::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetForwardMsgResp.Messages)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.sender_ != nullptr) {
    delete _impl_.sender_;
  }
  _impl_.sender_ = nullptr;
  _impl_.time_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetForwardMsgResp_Messages::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetForwardMsgResp.Messages.content"));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.Sender sender = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sender(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetForwardMsgResp_Messages::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetForwardMsgResp.Messages)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetForwardMsgResp.Messages.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  // .cqhttp.Sender sender = 2;
  if (this->_internal_has_sender()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sender(this),
        _Internal::sender(this).GetCachedSize(), target, stream);
  }

  // int64 time = 3;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetForwardMsgResp.Messages)
  return target;
}

size_t GetForwardMsgResp_Messages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetForwardMsgResp.Messages)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // .cqhttp.Sender sender = 2;
  if (this->_internal_has_sender()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sender_);
  }

  // int64 time = 3;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForwardMsgResp_Messages::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetForwardMsgResp_Messages::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForwardMsgResp_Messages::GetClassData() const { return &_class_data_; }


void GetForwardMsgResp_Messages::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetForwardMsgResp_Messages*>(&to_msg);
  auto& from = static_cast<const GetForwardMsgResp_Messages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetForwardMsgResp.Messages)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_has_sender()) {
    _this->_internal_mutable_sender()->::cqhttp::Sender::MergeFrom(
        from._internal_sender());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetForwardMsgResp_Messages::CopyFrom(const GetForwardMsgResp_Messages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetForwardMsgResp.Messages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardMsgResp_Messages::IsInitialized() const {
  return true;
}

void GetForwardMsgResp_Messages::InternalSwap(GetForwardMsgResp_Messages* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetForwardMsgResp_Messages, _impl_.time_)
      + sizeof(GetForwardMsgResp_Messages::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(GetForwardMsgResp_Messages, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetForwardMsgResp_Messages::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[19]);
}

// ===================================================================

class GetForwardMsgResp::_Internal {
 public:
};

GetForwardMsgResp::GetForwardMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetForwardMsgResp)
}
GetForwardMsgResp::GetForwardMsgResp(const GetForwardMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetForwardMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetForwardMsgResp)
}

inline void GetForwardMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetForwardMsgResp::~GetForwardMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetForwardMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetForwardMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void GetForwardMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetForwardMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetForwardMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetForwardMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetForwardMsgResp.Messages messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetForwardMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetForwardMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetForwardMsgResp.Messages messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetForwardMsgResp)
  return target;
}

size_t GetForwardMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetForwardMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetForwardMsgResp.Messages messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForwardMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetForwardMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForwardMsgResp::GetClassData() const { return &_class_data_; }


void GetForwardMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetForwardMsgResp*>(&to_msg);
  auto& from = static_cast<const GetForwardMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetForwardMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetForwardMsgResp::CopyFrom(const GetForwardMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetForwardMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardMsgResp::IsInitialized() const {
  return true;
}

void GetForwardMsgResp::InternalSwap(GetForwardMsgResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetForwardMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[20]);
}

// ===================================================================

class GetImage_Params::_Internal {
 public:
};

GetImage_Params::GetImage_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetImage.Params)
}
GetImage_Params::GetImage_Params(const GetImage_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetImage_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetImage.Params)
}

inline void GetImage_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetImage_Params::~GetImage_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetImage.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetImage_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
}

void GetImage_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetImage_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetImage.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImage_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetImage.Params.file"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetImage_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetImage.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetImage.Params.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetImage.Params)
  return target;
}

size_t GetImage_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetImage.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetImage_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetImage_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetImage_Params::GetClassData() const { return &_class_data_; }


void GetImage_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetImage_Params*>(&to_msg);
  auto& from = static_cast<const GetImage_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetImage.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetImage_Params::CopyFrom(const GetImage_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetImage.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImage_Params::IsInitialized() const {
  return true;
}

void GetImage_Params::InternalSwap(GetImage_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImage_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[21]);
}

// ===================================================================

class GetImage::_Internal {
 public:
  static const ::cqhttp::GetImage_Params& params(const GetImage* msg);
};

const ::cqhttp::GetImage_Params&
GetImage::_Internal::params(const GetImage* msg) {
  return *msg->_impl_.params_;
}
GetImage::GetImage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetImage)
}
GetImage::GetImage(const GetImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetImage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetImage_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetImage)
}

inline void GetImage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetImage::~GetImage() {
  // @@protoc_insertion_point(destructor:cqhttp.GetImage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetImage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetImage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetImage::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetImage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetImage.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetImage.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetImage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetImage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetImage.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetImage.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetImage)
  return target;
}

size_t GetImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetImage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetImage.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetImage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetImage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetImage::GetClassData() const { return &_class_data_; }


void GetImage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetImage*>(&to_msg);
  auto& from = static_cast<const GetImage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetImage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetImage_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetImage::CopyFrom(const GetImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImage::IsInitialized() const {
  return true;
}

void GetImage::InternalSwap(GetImage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetImage, _impl_.action_)
      + sizeof(GetImage::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetImage, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[22]);
}

// ===================================================================

class GetImageResp::_Internal {
 public:
};

GetImageResp::GetImageResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetImageResp)
}
GetImageResp::GetImageResp(const GetImageResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetImageResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.filename_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filename().empty()) {
    _this->_impl_.filename_.Set(from._internal_filename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.size_ = from._impl_.size_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetImageResp)
}

inline void GetImageResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filename_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetImageResp::~GetImageResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetImageResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetImageResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.filename_.Destroy();
  _impl_.url_.Destroy();
}

void GetImageResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetImageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetImageResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filename_.ClearToEmpty();
  _impl_.url_.ClearToEmpty();
  _impl_.size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetImageResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_filename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetImageResp.filename"));
        } else
          goto handle_unusual;
        continue;
      // string url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetImageResp.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetImageResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetImageResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 size = 1;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_size(), target);
  }

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetImageResp.filename");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filename(), target);
  }

  // string url = 3;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetImageResp.url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetImageResp)
  return target;
}

size_t GetImageResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetImageResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // string url = 3;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // int32 size = 1;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetImageResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetImageResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetImageResp::GetClassData() const { return &_class_data_; }


void GetImageResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetImageResp*>(&to_msg);
  auto& from = static_cast<const GetImageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetImageResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetImageResp::CopyFrom(const GetImageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetImageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetImageResp::IsInitialized() const {
  return true;
}

void GetImageResp::InternalSwap(GetImageResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filename_, lhs_arena,
      &other->_impl_.filename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  swap(_impl_.size_, other->_impl_.size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetImageResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[23]);
}

// ===================================================================

class MarkMsgAsRead_Params::_Internal {
 public:
};

MarkMsgAsRead_Params::MarkMsgAsRead_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.MarkMsgAsRead.Params)
}
MarkMsgAsRead_Params::MarkMsgAsRead_Params(const MarkMsgAsRead_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MarkMsgAsRead_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.MarkMsgAsRead.Params)
}

inline void MarkMsgAsRead_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MarkMsgAsRead_Params::~MarkMsgAsRead_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.MarkMsgAsRead.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkMsgAsRead_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MarkMsgAsRead_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MarkMsgAsRead_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.MarkMsgAsRead.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkMsgAsRead_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkMsgAsRead_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.MarkMsgAsRead.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.MarkMsgAsRead.Params)
  return target;
}

size_t MarkMsgAsRead_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.MarkMsgAsRead.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkMsgAsRead_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MarkMsgAsRead_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkMsgAsRead_Params::GetClassData() const { return &_class_data_; }


void MarkMsgAsRead_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MarkMsgAsRead_Params*>(&to_msg);
  auto& from = static_cast<const MarkMsgAsRead_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.MarkMsgAsRead.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkMsgAsRead_Params::CopyFrom(const MarkMsgAsRead_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.MarkMsgAsRead.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkMsgAsRead_Params::IsInitialized() const {
  return true;
}

void MarkMsgAsRead_Params::InternalSwap(MarkMsgAsRead_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkMsgAsRead_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[24]);
}

// ===================================================================

class MarkMsgAsRead::_Internal {
 public:
  static const ::cqhttp::MarkMsgAsRead_Params& params(const MarkMsgAsRead* msg);
};

const ::cqhttp::MarkMsgAsRead_Params&
MarkMsgAsRead::_Internal::params(const MarkMsgAsRead* msg) {
  return *msg->_impl_.params_;
}
MarkMsgAsRead::MarkMsgAsRead(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.MarkMsgAsRead)
}
MarkMsgAsRead::MarkMsgAsRead(const MarkMsgAsRead& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MarkMsgAsRead* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::MarkMsgAsRead_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.MarkMsgAsRead)
}

inline void MarkMsgAsRead::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MarkMsgAsRead::~MarkMsgAsRead() {
  // @@protoc_insertion_point(destructor:cqhttp.MarkMsgAsRead)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkMsgAsRead::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void MarkMsgAsRead::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MarkMsgAsRead::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.MarkMsgAsRead)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkMsgAsRead::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.MarkMsgAsRead.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkMsgAsRead::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.MarkMsgAsRead)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.MarkMsgAsRead.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.MarkMsgAsRead)
  return target;
}

size_t MarkMsgAsRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.MarkMsgAsRead)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.MarkMsgAsRead.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkMsgAsRead::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MarkMsgAsRead::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkMsgAsRead::GetClassData() const { return &_class_data_; }


void MarkMsgAsRead::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MarkMsgAsRead*>(&to_msg);
  auto& from = static_cast<const MarkMsgAsRead&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.MarkMsgAsRead)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::MarkMsgAsRead_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkMsgAsRead::CopyFrom(const MarkMsgAsRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.MarkMsgAsRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkMsgAsRead::IsInitialized() const {
  return true;
}

void MarkMsgAsRead::InternalSwap(MarkMsgAsRead* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MarkMsgAsRead, _impl_.action_)
      + sizeof(MarkMsgAsRead::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(MarkMsgAsRead, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkMsgAsRead::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[25]);
}

// ===================================================================

class SetGroupKick_Params::_Internal {
 public:
};

SetGroupKick_Params::SetGroupKick_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupKick.Params)
}
SetGroupKick_Params::SetGroupKick_Params(const SetGroupKick_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupKick_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.reject_add_request_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.message_id_, &from._impl_.message_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reject_add_request_) -
    reinterpret_cast<char*>(&_impl_.message_id_)) + sizeof(_impl_.reject_add_request_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupKick.Params)
}

inline void SetGroupKick_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.reject_add_request_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupKick_Params::~SetGroupKick_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupKick.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupKick_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupKick_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupKick_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupKick.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.message_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.reject_add_request_) -
      reinterpret_cast<char*>(&_impl_.message_id_)) + sizeof(_impl_.reject_add_request_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupKick_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool reject_add_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.reject_add_request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupKick_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupKick.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_message_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // bool reject_add_request = 3;
  if (this->_internal_reject_add_request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_reject_add_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupKick.Params)
  return target;
}

size_t SetGroupKick_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupKick.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_message_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // bool reject_add_request = 3;
  if (this->_internal_reject_add_request() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupKick_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupKick_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupKick_Params::GetClassData() const { return &_class_data_; }


void SetGroupKick_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupKick_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupKick_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupKick.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_reject_add_request() != 0) {
    _this->_internal_set_reject_add_request(from._internal_reject_add_request());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupKick_Params::CopyFrom(const SetGroupKick_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupKick.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupKick_Params::IsInitialized() const {
  return true;
}

void SetGroupKick_Params::InternalSwap(SetGroupKick_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupKick_Params, _impl_.reject_add_request_)
      + sizeof(SetGroupKick_Params::_impl_.reject_add_request_)
      - PROTOBUF_FIELD_OFFSET(SetGroupKick_Params, _impl_.message_id_)>(
          reinterpret_cast<char*>(&_impl_.message_id_),
          reinterpret_cast<char*>(&other->_impl_.message_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupKick_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[26]);
}

// ===================================================================

class SetGroupKick::_Internal {
 public:
  static const ::cqhttp::SetGroupKick_Params& params(const SetGroupKick* msg);
};

const ::cqhttp::SetGroupKick_Params&
SetGroupKick::_Internal::params(const SetGroupKick* msg) {
  return *msg->_impl_.params_;
}
SetGroupKick::SetGroupKick(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupKick)
}
SetGroupKick::SetGroupKick(const SetGroupKick& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupKick* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupKick_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupKick)
}

inline void SetGroupKick::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupKick::~SetGroupKick() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupKick)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupKick::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupKick::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupKick::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupKick)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupKick::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupKick.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupKick::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupKick)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupKick.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupKick)
  return target;
}

size_t SetGroupKick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupKick)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupKick.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupKick::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupKick::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupKick::GetClassData() const { return &_class_data_; }


void SetGroupKick::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupKick*>(&to_msg);
  auto& from = static_cast<const SetGroupKick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupKick)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupKick_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupKick::CopyFrom(const SetGroupKick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupKick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupKick::IsInitialized() const {
  return true;
}

void SetGroupKick::InternalSwap(SetGroupKick* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupKick, _impl_.action_)
      + sizeof(SetGroupKick::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupKick, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupKick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[27]);
}

// ===================================================================

class SetGroupBan_Params::_Internal {
 public:
};

SetGroupBan_Params::SetGroupBan_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupBan.Params)
}
SetGroupBan_Params::SetGroupBan_Params(const SetGroupBan_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupBan_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.duration_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.duration_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupBan.Params)
}

inline void SetGroupBan_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.duration_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupBan_Params::~SetGroupBan_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupBan.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupBan_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupBan_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupBan_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupBan.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.duration_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupBan_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupBan_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupBan.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int32 duration = 3;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_duration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupBan.Params)
  return target;
}

size_t SetGroupBan_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupBan.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 duration = 3;
  if (this->_internal_duration() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_duration());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupBan_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupBan_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupBan_Params::GetClassData() const { return &_class_data_; }


void SetGroupBan_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupBan_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupBan_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupBan.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_duration() != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupBan_Params::CopyFrom(const SetGroupBan_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupBan.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupBan_Params::IsInitialized() const {
  return true;
}

void SetGroupBan_Params::InternalSwap(SetGroupBan_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupBan_Params, _impl_.duration_)
      + sizeof(SetGroupBan_Params::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(SetGroupBan_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupBan_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[28]);
}

// ===================================================================

class SetGroupBan::_Internal {
 public:
  static const ::cqhttp::SetGroupBan_Params& params(const SetGroupBan* msg);
};

const ::cqhttp::SetGroupBan_Params&
SetGroupBan::_Internal::params(const SetGroupBan* msg) {
  return *msg->_impl_.params_;
}
SetGroupBan::SetGroupBan(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupBan)
}
SetGroupBan::SetGroupBan(const SetGroupBan& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupBan* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupBan_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupBan)
}

inline void SetGroupBan::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupBan::~SetGroupBan() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupBan)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupBan::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupBan::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupBan::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupBan)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupBan::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupBan.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupBan::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupBan)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupBan.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupBan)
  return target;
}

size_t SetGroupBan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupBan)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupBan.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupBan::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupBan::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupBan::GetClassData() const { return &_class_data_; }


void SetGroupBan::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupBan*>(&to_msg);
  auto& from = static_cast<const SetGroupBan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupBan)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupBan_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupBan::CopyFrom(const SetGroupBan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupBan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupBan::IsInitialized() const {
  return true;
}

void SetGroupBan::InternalSwap(SetGroupBan* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupBan, _impl_.action_)
      + sizeof(SetGroupBan::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupBan, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupBan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[29]);
}

// ===================================================================

class SetGroupAnonymousBan_Params::_Internal {
 public:
  static const ::cqhttp::Anonymous& anonymous(const SetGroupAnonymousBan_Params* msg);
};

const ::cqhttp::Anonymous&
SetGroupAnonymousBan_Params::_Internal::anonymous(const SetGroupAnonymousBan_Params* msg) {
  return *msg->_impl_.anonymous_;
}
void SetGroupAnonymousBan_Params::clear_anonymous() {
  if (GetArenaForAllocation() == nullptr && _impl_.anonymous_ != nullptr) {
    delete _impl_.anonymous_;
  }
  _impl_.anonymous_ = nullptr;
}
SetGroupAnonymousBan_Params::SetGroupAnonymousBan_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAnonymousBan.Params)
}
SetGroupAnonymousBan_Params::SetGroupAnonymousBan_Params(const SetGroupAnonymousBan_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAnonymousBan_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.anonymous_flag_){}
    , decltype(_impl_.anonymous_){nullptr}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.duration_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.anonymous_flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anonymous_flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_anonymous_flag().empty()) {
    _this->_impl_.anonymous_flag_.Set(from._internal_anonymous_flag(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_anonymous()) {
    _this->_impl_.anonymous_ = new ::cqhttp::Anonymous(*from._impl_.anonymous_);
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.duration_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAnonymousBan.Params)
}

inline void SetGroupAnonymousBan_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.anonymous_flag_){}
    , decltype(_impl_.anonymous_){nullptr}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.duration_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.anonymous_flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anonymous_flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupAnonymousBan_Params::~SetGroupAnonymousBan_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAnonymousBan.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAnonymousBan_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.anonymous_flag_.Destroy();
  if (this != internal_default_instance()) delete _impl_.anonymous_;
}

void SetGroupAnonymousBan_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAnonymousBan_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAnonymousBan.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.anonymous_flag_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.anonymous_ != nullptr) {
    delete _impl_.anonymous_;
  }
  _impl_.anonymous_ = nullptr;
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.duration_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAnonymousBan_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.Anonymous anonymous = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_anonymous(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string anonymous_flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_anonymous_flag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupAnonymousBan.Params.anonymous_flag"));
        } else
          goto handle_unusual;
        continue;
      // int32 duration = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAnonymousBan_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAnonymousBan.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // .cqhttp.Anonymous anonymous = 2;
  if (this->_internal_has_anonymous()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::anonymous(this),
        _Internal::anonymous(this).GetCachedSize(), target, stream);
  }

  // string anonymous_flag = 3;
  if (!this->_internal_anonymous_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anonymous_flag().data(), static_cast<int>(this->_internal_anonymous_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupAnonymousBan.Params.anonymous_flag");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_anonymous_flag(), target);
  }

  // int32 duration = 4;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_duration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAnonymousBan.Params)
  return target;
}

size_t SetGroupAnonymousBan_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAnonymousBan.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string anonymous_flag = 3;
  if (!this->_internal_anonymous_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anonymous_flag());
  }

  // .cqhttp.Anonymous anonymous = 2;
  if (this->_internal_has_anonymous()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.anonymous_);
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int32 duration = 4;
  if (this->_internal_duration() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_duration());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAnonymousBan_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAnonymousBan_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAnonymousBan_Params::GetClassData() const { return &_class_data_; }


void SetGroupAnonymousBan_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAnonymousBan_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupAnonymousBan_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAnonymousBan.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_anonymous_flag().empty()) {
    _this->_internal_set_anonymous_flag(from._internal_anonymous_flag());
  }
  if (from._internal_has_anonymous()) {
    _this->_internal_mutable_anonymous()->::cqhttp::Anonymous::MergeFrom(
        from._internal_anonymous());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_duration() != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAnonymousBan_Params::CopyFrom(const SetGroupAnonymousBan_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAnonymousBan.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAnonymousBan_Params::IsInitialized() const {
  return true;
}

void SetGroupAnonymousBan_Params::InternalSwap(SetGroupAnonymousBan_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anonymous_flag_, lhs_arena,
      &other->_impl_.anonymous_flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAnonymousBan_Params, _impl_.duration_)
      + sizeof(SetGroupAnonymousBan_Params::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAnonymousBan_Params, _impl_.anonymous_)>(
          reinterpret_cast<char*>(&_impl_.anonymous_),
          reinterpret_cast<char*>(&other->_impl_.anonymous_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAnonymousBan_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[30]);
}

// ===================================================================

class SetGroupAnonymousBan::_Internal {
 public:
  static const ::cqhttp::SetGroupAnonymousBan_Params& params(const SetGroupAnonymousBan* msg);
};

const ::cqhttp::SetGroupAnonymousBan_Params&
SetGroupAnonymousBan::_Internal::params(const SetGroupAnonymousBan* msg) {
  return *msg->_impl_.params_;
}
SetGroupAnonymousBan::SetGroupAnonymousBan(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAnonymousBan)
}
SetGroupAnonymousBan::SetGroupAnonymousBan(const SetGroupAnonymousBan& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAnonymousBan* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupAnonymousBan_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAnonymousBan)
}

inline void SetGroupAnonymousBan::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAnonymousBan::~SetGroupAnonymousBan() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAnonymousBan)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAnonymousBan::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupAnonymousBan::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAnonymousBan::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAnonymousBan)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAnonymousBan::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupAnonymousBan.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAnonymousBan::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAnonymousBan)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupAnonymousBan.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAnonymousBan)
  return target;
}

size_t SetGroupAnonymousBan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAnonymousBan)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupAnonymousBan.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAnonymousBan::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAnonymousBan::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAnonymousBan::GetClassData() const { return &_class_data_; }


void SetGroupAnonymousBan::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAnonymousBan*>(&to_msg);
  auto& from = static_cast<const SetGroupAnonymousBan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAnonymousBan)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupAnonymousBan_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAnonymousBan::CopyFrom(const SetGroupAnonymousBan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAnonymousBan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAnonymousBan::IsInitialized() const {
  return true;
}

void SetGroupAnonymousBan::InternalSwap(SetGroupAnonymousBan* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAnonymousBan, _impl_.action_)
      + sizeof(SetGroupAnonymousBan::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAnonymousBan, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAnonymousBan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[31]);
}

// ===================================================================

class SetGroupWholeBan_Params::_Internal {
 public:
};

SetGroupWholeBan_Params::SetGroupWholeBan_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupWholeBan.Params)
}
SetGroupWholeBan_Params::SetGroupWholeBan_Params(const SetGroupWholeBan_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupWholeBan_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupWholeBan.Params)
}

inline void SetGroupWholeBan_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupWholeBan_Params::~SetGroupWholeBan_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupWholeBan.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupWholeBan_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupWholeBan_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupWholeBan_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupWholeBan.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupWholeBan_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool enable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupWholeBan_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupWholeBan.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupWholeBan.Params)
  return target;
}

size_t SetGroupWholeBan_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupWholeBan.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupWholeBan_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupWholeBan_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupWholeBan_Params::GetClassData() const { return &_class_data_; }


void SetGroupWholeBan_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupWholeBan_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupWholeBan_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupWholeBan.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupWholeBan_Params::CopyFrom(const SetGroupWholeBan_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupWholeBan.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupWholeBan_Params::IsInitialized() const {
  return true;
}

void SetGroupWholeBan_Params::InternalSwap(SetGroupWholeBan_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupWholeBan_Params, _impl_.enable_)
      + sizeof(SetGroupWholeBan_Params::_impl_.enable_)
      - PROTOBUF_FIELD_OFFSET(SetGroupWholeBan_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupWholeBan_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[32]);
}

// ===================================================================

class SetGroupWholeBan::_Internal {
 public:
  static const ::cqhttp::SetGroupWholeBan_Params& params(const SetGroupWholeBan* msg);
};

const ::cqhttp::SetGroupWholeBan_Params&
SetGroupWholeBan::_Internal::params(const SetGroupWholeBan* msg) {
  return *msg->_impl_.params_;
}
SetGroupWholeBan::SetGroupWholeBan(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupWholeBan)
}
SetGroupWholeBan::SetGroupWholeBan(const SetGroupWholeBan& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupWholeBan* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupWholeBan_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupWholeBan)
}

inline void SetGroupWholeBan::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupWholeBan::~SetGroupWholeBan() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupWholeBan)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupWholeBan::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupWholeBan::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupWholeBan::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupWholeBan)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupWholeBan::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupWholeBan.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupWholeBan::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupWholeBan)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupWholeBan.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupWholeBan)
  return target;
}

size_t SetGroupWholeBan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupWholeBan)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupWholeBan.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupWholeBan::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupWholeBan::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupWholeBan::GetClassData() const { return &_class_data_; }


void SetGroupWholeBan::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupWholeBan*>(&to_msg);
  auto& from = static_cast<const SetGroupWholeBan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupWholeBan)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupWholeBan_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupWholeBan::CopyFrom(const SetGroupWholeBan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupWholeBan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupWholeBan::IsInitialized() const {
  return true;
}

void SetGroupWholeBan::InternalSwap(SetGroupWholeBan* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupWholeBan, _impl_.action_)
      + sizeof(SetGroupWholeBan::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupWholeBan, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupWholeBan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[33]);
}

// ===================================================================

class SetGroupAdmin_Params::_Internal {
 public:
};

SetGroupAdmin_Params::SetGroupAdmin_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAdmin.Params)
}
SetGroupAdmin_Params::SetGroupAdmin_Params(const SetGroupAdmin_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAdmin_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAdmin.Params)
}

inline void SetGroupAdmin_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAdmin_Params::~SetGroupAdmin_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAdmin.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAdmin_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupAdmin_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAdmin_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAdmin.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAdmin_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool enable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAdmin_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAdmin.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // bool enable = 3;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAdmin.Params)
  return target;
}

size_t SetGroupAdmin_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAdmin.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // bool enable = 3;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAdmin_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAdmin_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAdmin_Params::GetClassData() const { return &_class_data_; }


void SetGroupAdmin_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAdmin_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupAdmin_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAdmin.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAdmin_Params::CopyFrom(const SetGroupAdmin_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAdmin.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAdmin_Params::IsInitialized() const {
  return true;
}

void SetGroupAdmin_Params::InternalSwap(SetGroupAdmin_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAdmin_Params, _impl_.enable_)
      + sizeof(SetGroupAdmin_Params::_impl_.enable_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAdmin_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAdmin_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[34]);
}

// ===================================================================

class SetGroupAdmin::_Internal {
 public:
  static const ::cqhttp::SetGroupAdmin_Params& params(const SetGroupAdmin* msg);
};

const ::cqhttp::SetGroupAdmin_Params&
SetGroupAdmin::_Internal::params(const SetGroupAdmin* msg) {
  return *msg->_impl_.params_;
}
SetGroupAdmin::SetGroupAdmin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAdmin)
}
SetGroupAdmin::SetGroupAdmin(const SetGroupAdmin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAdmin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupAdmin_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAdmin)
}

inline void SetGroupAdmin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAdmin::~SetGroupAdmin() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAdmin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAdmin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupAdmin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAdmin::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAdmin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAdmin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupAdmin.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAdmin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAdmin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupAdmin.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAdmin)
  return target;
}

size_t SetGroupAdmin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAdmin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupAdmin.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAdmin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAdmin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAdmin::GetClassData() const { return &_class_data_; }


void SetGroupAdmin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAdmin*>(&to_msg);
  auto& from = static_cast<const SetGroupAdmin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAdmin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupAdmin_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAdmin::CopyFrom(const SetGroupAdmin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAdmin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAdmin::IsInitialized() const {
  return true;
}

void SetGroupAdmin::InternalSwap(SetGroupAdmin* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAdmin, _impl_.action_)
      + sizeof(SetGroupAdmin::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAdmin, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAdmin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[35]);
}

// ===================================================================

class SetGroupAnonymous_Params::_Internal {
 public:
};

SetGroupAnonymous_Params::SetGroupAnonymous_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAnonymous.Params)
}
SetGroupAnonymous_Params::SetGroupAnonymous_Params(const SetGroupAnonymous_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAnonymous_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAnonymous.Params)
}

inline void SetGroupAnonymous_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAnonymous_Params::~SetGroupAnonymous_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAnonymous.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAnonymous_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupAnonymous_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAnonymous_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAnonymous.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.enable_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAnonymous_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool enable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAnonymous_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAnonymous.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAnonymous.Params)
  return target;
}

size_t SetGroupAnonymous_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAnonymous.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAnonymous_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAnonymous_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAnonymous_Params::GetClassData() const { return &_class_data_; }


void SetGroupAnonymous_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAnonymous_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupAnonymous_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAnonymous.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAnonymous_Params::CopyFrom(const SetGroupAnonymous_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAnonymous.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAnonymous_Params::IsInitialized() const {
  return true;
}

void SetGroupAnonymous_Params::InternalSwap(SetGroupAnonymous_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAnonymous_Params, _impl_.enable_)
      + sizeof(SetGroupAnonymous_Params::_impl_.enable_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAnonymous_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAnonymous_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[36]);
}

// ===================================================================

class SetGroupAnonymous::_Internal {
 public:
  static const ::cqhttp::SetGroupAnonymous_Params& params(const SetGroupAnonymous* msg);
};

const ::cqhttp::SetGroupAnonymous_Params&
SetGroupAnonymous::_Internal::params(const SetGroupAnonymous* msg) {
  return *msg->_impl_.params_;
}
SetGroupAnonymous::SetGroupAnonymous(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAnonymous)
}
SetGroupAnonymous::SetGroupAnonymous(const SetGroupAnonymous& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAnonymous* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupAnonymous_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAnonymous)
}

inline void SetGroupAnonymous::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAnonymous::~SetGroupAnonymous() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAnonymous)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAnonymous::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupAnonymous::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAnonymous::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAnonymous)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAnonymous::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupAnonymous.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAnonymous::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAnonymous)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupAnonymous.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAnonymous)
  return target;
}

size_t SetGroupAnonymous::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAnonymous)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupAnonymous.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAnonymous::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAnonymous::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAnonymous::GetClassData() const { return &_class_data_; }


void SetGroupAnonymous::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAnonymous*>(&to_msg);
  auto& from = static_cast<const SetGroupAnonymous&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAnonymous)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupAnonymous_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAnonymous::CopyFrom(const SetGroupAnonymous& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAnonymous)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAnonymous::IsInitialized() const {
  return true;
}

void SetGroupAnonymous::InternalSwap(SetGroupAnonymous* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAnonymous, _impl_.action_)
      + sizeof(SetGroupAnonymous::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAnonymous, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAnonymous::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[37]);
}

// ===================================================================

class SetGroupCard_Params::_Internal {
 public:
};

SetGroupCard_Params::SetGroupCard_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupCard.Params)
}
SetGroupCard_Params::SetGroupCard_Params(const SetGroupCard_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupCard_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.card_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.card_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.card_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_card().empty()) {
    _this->_impl_.card_.Set(from._internal_card(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.user_id_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.user_id_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupCard.Params)
}

inline void SetGroupCard_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.card_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.card_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.card_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupCard_Params::~SetGroupCard_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupCard.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupCard_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.card_.Destroy();
}

void SetGroupCard_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupCard_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupCard.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.card_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.user_id_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupCard_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string card = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_card();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupCard.Params.card"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupCard_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupCard.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string card = 3;
  if (!this->_internal_card().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card().data(), static_cast<int>(this->_internal_card().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupCard.Params.card");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupCard.Params)
  return target;
}

size_t SetGroupCard_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupCard.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card = 3;
  if (!this->_internal_card().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupCard_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupCard_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupCard_Params::GetClassData() const { return &_class_data_; }


void SetGroupCard_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupCard_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupCard_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupCard.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_card().empty()) {
    _this->_internal_set_card(from._internal_card());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupCard_Params::CopyFrom(const SetGroupCard_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupCard.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupCard_Params::IsInitialized() const {
  return true;
}

void SetGroupCard_Params::InternalSwap(SetGroupCard_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.card_, lhs_arena,
      &other->_impl_.card_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupCard_Params, _impl_.user_id_)
      + sizeof(SetGroupCard_Params::_impl_.user_id_)
      - PROTOBUF_FIELD_OFFSET(SetGroupCard_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupCard_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[38]);
}

// ===================================================================

class SetGroupCard::_Internal {
 public:
  static const ::cqhttp::SetGroupCard_Params& params(const SetGroupCard* msg);
};

const ::cqhttp::SetGroupCard_Params&
SetGroupCard::_Internal::params(const SetGroupCard* msg) {
  return *msg->_impl_.params_;
}
SetGroupCard::SetGroupCard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupCard)
}
SetGroupCard::SetGroupCard(const SetGroupCard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupCard* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupCard_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupCard)
}

inline void SetGroupCard::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupCard::~SetGroupCard() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupCard)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupCard::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupCard::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupCard)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupCard::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupCard.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupCard::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupCard)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupCard.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupCard)
  return target;
}

size_t SetGroupCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupCard)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupCard.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupCard::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupCard::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupCard::GetClassData() const { return &_class_data_; }


void SetGroupCard::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupCard*>(&to_msg);
  auto& from = static_cast<const SetGroupCard&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupCard)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupCard_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupCard::CopyFrom(const SetGroupCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupCard::IsInitialized() const {
  return true;
}

void SetGroupCard::InternalSwap(SetGroupCard* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupCard, _impl_.action_)
      + sizeof(SetGroupCard::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupCard, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupCard::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[39]);
}

// ===================================================================

class SetGroupName_Params::_Internal {
 public:
};

SetGroupName_Params::SetGroupName_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupName.Params)
}
SetGroupName_Params::SetGroupName_Params(const SetGroupName_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupName_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupName.Params)
}

inline void SetGroupName_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupName_Params::~SetGroupName_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupName.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupName_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_name_.Destroy();
}

void SetGroupName_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupName_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupName.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_name_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupName_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupName.Params.group_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupName_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupName.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupName.Params.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupName.Params)
  return target;
}

size_t SetGroupName_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupName.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupName_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupName_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupName_Params::GetClassData() const { return &_class_data_; }


void SetGroupName_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupName_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupName_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupName.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupName_Params::CopyFrom(const SetGroupName_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupName.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupName_Params::IsInitialized() const {
  return true;
}

void SetGroupName_Params::InternalSwap(SetGroupName_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupName_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[40]);
}

// ===================================================================

class SetGroupName::_Internal {
 public:
  static const ::cqhttp::SetGroupName_Params& params(const SetGroupName* msg);
};

const ::cqhttp::SetGroupName_Params&
SetGroupName::_Internal::params(const SetGroupName* msg) {
  return *msg->_impl_.params_;
}
SetGroupName::SetGroupName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupName)
}
SetGroupName::SetGroupName(const SetGroupName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupName_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupName)
}

inline void SetGroupName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupName::~SetGroupName() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupName::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupName.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupName.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupName)
  return target;
}

size_t SetGroupName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupName.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupName::GetClassData() const { return &_class_data_; }


void SetGroupName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupName*>(&to_msg);
  auto& from = static_cast<const SetGroupName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupName_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupName::CopyFrom(const SetGroupName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupName::IsInitialized() const {
  return true;
}

void SetGroupName::InternalSwap(SetGroupName* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupName, _impl_.action_)
      + sizeof(SetGroupName::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupName, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[41]);
}

// ===================================================================

class SetGroupLeave_Params::_Internal {
 public:
};

SetGroupLeave_Params::SetGroupLeave_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupLeave.Params)
}
SetGroupLeave_Params::SetGroupLeave_Params(const SetGroupLeave_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupLeave_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.is_dismiss_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_dismiss_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.is_dismiss_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupLeave.Params)
}

inline void SetGroupLeave_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.is_dismiss_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupLeave_Params::~SetGroupLeave_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupLeave.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupLeave_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetGroupLeave_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupLeave_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupLeave.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_dismiss_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.is_dismiss_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupLeave_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_dismiss = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_dismiss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupLeave_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupLeave.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // bool is_dismiss = 2;
  if (this->_internal_is_dismiss() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_dismiss(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupLeave.Params)
  return target;
}

size_t SetGroupLeave_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupLeave.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool is_dismiss = 2;
  if (this->_internal_is_dismiss() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupLeave_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupLeave_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupLeave_Params::GetClassData() const { return &_class_data_; }


void SetGroupLeave_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupLeave_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupLeave_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupLeave.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_is_dismiss() != 0) {
    _this->_internal_set_is_dismiss(from._internal_is_dismiss());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupLeave_Params::CopyFrom(const SetGroupLeave_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupLeave.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupLeave_Params::IsInitialized() const {
  return true;
}

void SetGroupLeave_Params::InternalSwap(SetGroupLeave_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupLeave_Params, _impl_.is_dismiss_)
      + sizeof(SetGroupLeave_Params::_impl_.is_dismiss_)
      - PROTOBUF_FIELD_OFFSET(SetGroupLeave_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupLeave_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[42]);
}

// ===================================================================

class SetGroupLeave::_Internal {
 public:
  static const ::cqhttp::SetGroupLeave_Params& params(const SetGroupLeave* msg);
};

const ::cqhttp::SetGroupLeave_Params&
SetGroupLeave::_Internal::params(const SetGroupLeave* msg) {
  return *msg->_impl_.params_;
}
SetGroupLeave::SetGroupLeave(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupLeave)
}
SetGroupLeave::SetGroupLeave(const SetGroupLeave& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupLeave* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupLeave_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupLeave)
}

inline void SetGroupLeave::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupLeave::~SetGroupLeave() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupLeave)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupLeave::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupLeave::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupLeave::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupLeave)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupLeave::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupLeave.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupLeave::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupLeave)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupLeave.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupLeave)
  return target;
}

size_t SetGroupLeave::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupLeave)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupLeave.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupLeave::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupLeave::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupLeave::GetClassData() const { return &_class_data_; }


void SetGroupLeave::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupLeave*>(&to_msg);
  auto& from = static_cast<const SetGroupLeave&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupLeave)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupLeave_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupLeave::CopyFrom(const SetGroupLeave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupLeave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupLeave::IsInitialized() const {
  return true;
}

void SetGroupLeave::InternalSwap(SetGroupLeave* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupLeave, _impl_.action_)
      + sizeof(SetGroupLeave::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupLeave, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupLeave::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[43]);
}

// ===================================================================

class SetGroupSpecialTitle_Params::_Internal {
 public:
};

SetGroupSpecialTitle_Params::SetGroupSpecialTitle_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupSpecialTitle.Params)
}
SetGroupSpecialTitle_Params::SetGroupSpecialTitle_Params(const SetGroupSpecialTitle_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupSpecialTitle_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.special_title_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.duration_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.special_title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.special_title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_special_title().empty()) {
    _this->_impl_.special_title_.Set(from._internal_special_title(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.duration_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupSpecialTitle.Params)
}

inline void SetGroupSpecialTitle_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.special_title_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.duration_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.special_title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.special_title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupSpecialTitle_Params::~SetGroupSpecialTitle_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupSpecialTitle.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupSpecialTitle_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.special_title_.Destroy();
}

void SetGroupSpecialTitle_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupSpecialTitle_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupSpecialTitle.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.special_title_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.duration_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.duration_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupSpecialTitle_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string special_title = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_special_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupSpecialTitle.Params.special_title"));
        } else
          goto handle_unusual;
        continue;
      // int32 duration = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupSpecialTitle_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupSpecialTitle.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string special_title = 3;
  if (!this->_internal_special_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_special_title().data(), static_cast<int>(this->_internal_special_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupSpecialTitle.Params.special_title");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_special_title(), target);
  }

  // int32 duration = 4;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_duration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupSpecialTitle.Params)
  return target;
}

size_t SetGroupSpecialTitle_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupSpecialTitle.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string special_title = 3;
  if (!this->_internal_special_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_special_title());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 duration = 4;
  if (this->_internal_duration() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_duration());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupSpecialTitle_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupSpecialTitle_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupSpecialTitle_Params::GetClassData() const { return &_class_data_; }


void SetGroupSpecialTitle_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupSpecialTitle_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupSpecialTitle_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupSpecialTitle.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_special_title().empty()) {
    _this->_internal_set_special_title(from._internal_special_title());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_duration() != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupSpecialTitle_Params::CopyFrom(const SetGroupSpecialTitle_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupSpecialTitle.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupSpecialTitle_Params::IsInitialized() const {
  return true;
}

void SetGroupSpecialTitle_Params::InternalSwap(SetGroupSpecialTitle_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.special_title_, lhs_arena,
      &other->_impl_.special_title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupSpecialTitle_Params, _impl_.duration_)
      + sizeof(SetGroupSpecialTitle_Params::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(SetGroupSpecialTitle_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupSpecialTitle_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[44]);
}

// ===================================================================

class SetGroupSpecialTitle::_Internal {
 public:
  static const ::cqhttp::SetGroupSpecialTitle_Params& params(const SetGroupSpecialTitle* msg);
};

const ::cqhttp::SetGroupSpecialTitle_Params&
SetGroupSpecialTitle::_Internal::params(const SetGroupSpecialTitle* msg) {
  return *msg->_impl_.params_;
}
SetGroupSpecialTitle::SetGroupSpecialTitle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupSpecialTitle)
}
SetGroupSpecialTitle::SetGroupSpecialTitle(const SetGroupSpecialTitle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupSpecialTitle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupSpecialTitle_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupSpecialTitle)
}

inline void SetGroupSpecialTitle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupSpecialTitle::~SetGroupSpecialTitle() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupSpecialTitle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupSpecialTitle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupSpecialTitle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupSpecialTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupSpecialTitle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupSpecialTitle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupSpecialTitle.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupSpecialTitle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupSpecialTitle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupSpecialTitle.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupSpecialTitle)
  return target;
}

size_t SetGroupSpecialTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupSpecialTitle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupSpecialTitle.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupSpecialTitle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupSpecialTitle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupSpecialTitle::GetClassData() const { return &_class_data_; }


void SetGroupSpecialTitle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupSpecialTitle*>(&to_msg);
  auto& from = static_cast<const SetGroupSpecialTitle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupSpecialTitle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupSpecialTitle_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupSpecialTitle::CopyFrom(const SetGroupSpecialTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupSpecialTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupSpecialTitle::IsInitialized() const {
  return true;
}

void SetGroupSpecialTitle::InternalSwap(SetGroupSpecialTitle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupSpecialTitle, _impl_.action_)
      + sizeof(SetGroupSpecialTitle::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupSpecialTitle, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupSpecialTitle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[45]);
}

// ===================================================================

class SendGroupSign_Params::_Internal {
 public:
};

SendGroupSign_Params::SendGroupSign_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupSign.Params)
}
SendGroupSign_Params::SendGroupSign_Params(const SendGroupSign_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupSign_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupSign.Params)
}

inline void SendGroupSign_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendGroupSign_Params::~SendGroupSign_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupSign.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupSign_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendGroupSign_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupSign_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupSign.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupSign_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupSign_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupSign.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupSign.Params)
  return target;
}

size_t SendGroupSign_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupSign.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupSign_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupSign_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupSign_Params::GetClassData() const { return &_class_data_; }


void SendGroupSign_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupSign_Params*>(&to_msg);
  auto& from = static_cast<const SendGroupSign_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupSign.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupSign_Params::CopyFrom(const SendGroupSign_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupSign.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupSign_Params::IsInitialized() const {
  return true;
}

void SendGroupSign_Params::InternalSwap(SendGroupSign_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupSign_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[46]);
}

// ===================================================================

class SendGroupSign::_Internal {
 public:
  static const ::cqhttp::SendGroupSign_Params& params(const SendGroupSign* msg);
};

const ::cqhttp::SendGroupSign_Params&
SendGroupSign::_Internal::params(const SendGroupSign* msg) {
  return *msg->_impl_.params_;
}
SendGroupSign::SendGroupSign(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupSign)
}
SendGroupSign::SendGroupSign(const SendGroupSign& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupSign* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendGroupSign_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupSign)
}

inline void SendGroupSign::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendGroupSign::~SendGroupSign() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupSign)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupSign::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendGroupSign::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupSign::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupSign)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupSign::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendGroupSign.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupSign::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupSign)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendGroupSign.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupSign)
  return target;
}

size_t SendGroupSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupSign)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SendGroupSign.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupSign::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupSign::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupSign::GetClassData() const { return &_class_data_; }


void SendGroupSign::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupSign*>(&to_msg);
  auto& from = static_cast<const SendGroupSign&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupSign)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendGroupSign_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupSign::CopyFrom(const SendGroupSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupSign::IsInitialized() const {
  return true;
}

void SendGroupSign::InternalSwap(SendGroupSign* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGroupSign, _impl_.action_)
      + sizeof(SendGroupSign::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendGroupSign, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupSign::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[47]);
}

// ===================================================================

class SetFriendAddRequest_Params::_Internal {
 public:
};

SetFriendAddRequest_Params::SetFriendAddRequest_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetFriendAddRequest.Params)
}
SetFriendAddRequest_Params::SetFriendAddRequest_Params(const SetFriendAddRequest_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetFriendAddRequest_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , decltype(_impl_.remark_){}
    , decltype(_impl_.approve_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_flag().empty()) {
    _this->_impl_.flag_.Set(from._internal_flag(), 
      _this->GetArenaForAllocation());
  }
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remark_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remark().empty()) {
    _this->_impl_.remark_.Set(from._internal_remark(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.approve_ = from._impl_.approve_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetFriendAddRequest.Params)
}

inline void SetFriendAddRequest_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , decltype(_impl_.remark_){}
    , decltype(_impl_.approve_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remark_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetFriendAddRequest_Params::~SetFriendAddRequest_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetFriendAddRequest.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetFriendAddRequest_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.flag_.Destroy();
  _impl_.remark_.Destroy();
}

void SetFriendAddRequest_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetFriendAddRequest_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetFriendAddRequest.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _impl_.approve_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetFriendAddRequest_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_flag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetFriendAddRequest.Params.flag"));
        } else
          goto handle_unusual;
        continue;
      // bool approve = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.approve_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string remark = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_remark();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetFriendAddRequest.Params.remark"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetFriendAddRequest_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetFriendAddRequest.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string flag = 1;
  if (!this->_internal_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flag().data(), static_cast<int>(this->_internal_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetFriendAddRequest.Params.flag");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_flag(), target);
  }

  // bool approve = 2;
  if (this->_internal_approve() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_approve(), target);
  }

  // string remark = 3;
  if (!this->_internal_remark().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remark().data(), static_cast<int>(this->_internal_remark().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetFriendAddRequest.Params.remark");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_remark(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetFriendAddRequest.Params)
  return target;
}

size_t SetFriendAddRequest_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetFriendAddRequest.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string flag = 1;
  if (!this->_internal_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flag());
  }

  // string remark = 3;
  if (!this->_internal_remark().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remark());
  }

  // bool approve = 2;
  if (this->_internal_approve() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetFriendAddRequest_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetFriendAddRequest_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetFriendAddRequest_Params::GetClassData() const { return &_class_data_; }


void SetFriendAddRequest_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetFriendAddRequest_Params*>(&to_msg);
  auto& from = static_cast<const SetFriendAddRequest_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetFriendAddRequest.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_flag().empty()) {
    _this->_internal_set_flag(from._internal_flag());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if (from._internal_approve() != 0) {
    _this->_internal_set_approve(from._internal_approve());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetFriendAddRequest_Params::CopyFrom(const SetFriendAddRequest_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetFriendAddRequest.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFriendAddRequest_Params::IsInitialized() const {
  return true;
}

void SetFriendAddRequest_Params::InternalSwap(SetFriendAddRequest_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.flag_, lhs_arena,
      &other->_impl_.flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.remark_, lhs_arena,
      &other->_impl_.remark_, rhs_arena
  );
  swap(_impl_.approve_, other->_impl_.approve_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetFriendAddRequest_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[48]);
}

// ===================================================================

class SetFriendAddRequest::_Internal {
 public:
  static const ::cqhttp::SetFriendAddRequest_Params& params(const SetFriendAddRequest* msg);
};

const ::cqhttp::SetFriendAddRequest_Params&
SetFriendAddRequest::_Internal::params(const SetFriendAddRequest* msg) {
  return *msg->_impl_.params_;
}
SetFriendAddRequest::SetFriendAddRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetFriendAddRequest)
}
SetFriendAddRequest::SetFriendAddRequest(const SetFriendAddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetFriendAddRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetFriendAddRequest_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetFriendAddRequest)
}

inline void SetFriendAddRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetFriendAddRequest::~SetFriendAddRequest() {
  // @@protoc_insertion_point(destructor:cqhttp.SetFriendAddRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetFriendAddRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetFriendAddRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetFriendAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetFriendAddRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetFriendAddRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetFriendAddRequest.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetFriendAddRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetFriendAddRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetFriendAddRequest.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetFriendAddRequest)
  return target;
}

size_t SetFriendAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetFriendAddRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetFriendAddRequest.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetFriendAddRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetFriendAddRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetFriendAddRequest::GetClassData() const { return &_class_data_; }


void SetFriendAddRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetFriendAddRequest*>(&to_msg);
  auto& from = static_cast<const SetFriendAddRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetFriendAddRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetFriendAddRequest_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetFriendAddRequest::CopyFrom(const SetFriendAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetFriendAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFriendAddRequest::IsInitialized() const {
  return true;
}

void SetFriendAddRequest::InternalSwap(SetFriendAddRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetFriendAddRequest, _impl_.action_)
      + sizeof(SetFriendAddRequest::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetFriendAddRequest, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetFriendAddRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[49]);
}

// ===================================================================

class SetGroupAddRequest_Params::_Internal {
 public:
};

SetGroupAddRequest_Params::SetGroupAddRequest_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAddRequest.Params)
}
SetGroupAddRequest_Params::SetGroupAddRequest_Params(const SetGroupAddRequest_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAddRequest_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , decltype(_impl_.sub_type_){}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.approve_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_flag().empty()) {
    _this->_impl_.flag_.Set(from._internal_flag(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sub_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sub_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sub_type().empty()) {
    _this->_impl_.sub_type_.Set(from._internal_sub_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.approve_ = from._impl_.approve_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAddRequest.Params)
}

inline void SetGroupAddRequest_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , decltype(_impl_.sub_type_){}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.approve_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.flag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sub_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sub_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupAddRequest_Params::~SetGroupAddRequest_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAddRequest.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAddRequest_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.flag_.Destroy();
  _impl_.sub_type_.Destroy();
  _impl_.reason_.Destroy();
}

void SetGroupAddRequest_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAddRequest_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAddRequest.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_.ClearToEmpty();
  _impl_.sub_type_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.approve_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAddRequest_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_flag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupAddRequest.Params.flag"));
        } else
          goto handle_unusual;
        continue;
      // string sub_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sub_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupAddRequest.Params.sub_type"));
        } else
          goto handle_unusual;
        continue;
      // bool approve = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.approve_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupAddRequest.Params.reason"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAddRequest_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAddRequest.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string flag = 1;
  if (!this->_internal_flag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flag().data(), static_cast<int>(this->_internal_flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupAddRequest.Params.flag");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_flag(), target);
  }

  // string sub_type = 2;
  if (!this->_internal_sub_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sub_type().data(), static_cast<int>(this->_internal_sub_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupAddRequest.Params.sub_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sub_type(), target);
  }

  // bool approve = 3;
  if (this->_internal_approve() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_approve(), target);
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupAddRequest.Params.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAddRequest.Params)
  return target;
}

size_t SetGroupAddRequest_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAddRequest.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string flag = 1;
  if (!this->_internal_flag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flag());
  }

  // string sub_type = 2;
  if (!this->_internal_sub_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sub_type());
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // bool approve = 3;
  if (this->_internal_approve() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAddRequest_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAddRequest_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAddRequest_Params::GetClassData() const { return &_class_data_; }


void SetGroupAddRequest_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAddRequest_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupAddRequest_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAddRequest.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_flag().empty()) {
    _this->_internal_set_flag(from._internal_flag());
  }
  if (!from._internal_sub_type().empty()) {
    _this->_internal_set_sub_type(from._internal_sub_type());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_approve() != 0) {
    _this->_internal_set_approve(from._internal_approve());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAddRequest_Params::CopyFrom(const SetGroupAddRequest_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAddRequest.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAddRequest_Params::IsInitialized() const {
  return true;
}

void SetGroupAddRequest_Params::InternalSwap(SetGroupAddRequest_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.flag_, lhs_arena,
      &other->_impl_.flag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sub_type_, lhs_arena,
      &other->_impl_.sub_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reason_, lhs_arena,
      &other->_impl_.reason_, rhs_arena
  );
  swap(_impl_.approve_, other->_impl_.approve_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAddRequest_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[50]);
}

// ===================================================================

class SetGroupAddRequest::_Internal {
 public:
  static const ::cqhttp::SetGroupAddRequest_Params& params(const SetGroupAddRequest* msg);
};

const ::cqhttp::SetGroupAddRequest_Params&
SetGroupAddRequest::_Internal::params(const SetGroupAddRequest* msg) {
  return *msg->_impl_.params_;
}
SetGroupAddRequest::SetGroupAddRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupAddRequest)
}
SetGroupAddRequest::SetGroupAddRequest(const SetGroupAddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupAddRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupAddRequest_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupAddRequest)
}

inline void SetGroupAddRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupAddRequest::~SetGroupAddRequest() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupAddRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupAddRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupAddRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupAddRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupAddRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupAddRequest.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupAddRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupAddRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupAddRequest.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupAddRequest)
  return target;
}

size_t SetGroupAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupAddRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupAddRequest.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupAddRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupAddRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupAddRequest::GetClassData() const { return &_class_data_; }


void SetGroupAddRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupAddRequest*>(&to_msg);
  auto& from = static_cast<const SetGroupAddRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupAddRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupAddRequest_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupAddRequest::CopyFrom(const SetGroupAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupAddRequest::IsInitialized() const {
  return true;
}

void SetGroupAddRequest::InternalSwap(SetGroupAddRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupAddRequest, _impl_.action_)
      + sizeof(SetGroupAddRequest::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupAddRequest, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupAddRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[51]);
}

// ===================================================================

class GetLoginInfo_Params::_Internal {
 public:
};

GetLoginInfo_Params::GetLoginInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetLoginInfo.Params)
}
GetLoginInfo_Params::GetLoginInfo_Params(const GetLoginInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLoginInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetLoginInfo.Params)
}

inline void GetLoginInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLoginInfo_Params::~GetLoginInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetLoginInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLoginInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
}

void GetLoginInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLoginInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetLoginInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLoginInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetLoginInfo.Params.nickname"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLoginInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetLoginInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetLoginInfo.Params.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetLoginInfo.Params)
  return target;
}

size_t GetLoginInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetLoginInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLoginInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLoginInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLoginInfo_Params::GetClassData() const { return &_class_data_; }


void GetLoginInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLoginInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetLoginInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetLoginInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLoginInfo_Params::CopyFrom(const GetLoginInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetLoginInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoginInfo_Params::IsInitialized() const {
  return true;
}

void GetLoginInfo_Params::InternalSwap(GetLoginInfo_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLoginInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[52]);
}

// ===================================================================

class GetLoginInfo::_Internal {
 public:
  static const ::cqhttp::GetLoginInfo_Params& params(const GetLoginInfo* msg);
};

const ::cqhttp::GetLoginInfo_Params&
GetLoginInfo::_Internal::params(const GetLoginInfo* msg) {
  return *msg->_impl_.params_;
}
GetLoginInfo::GetLoginInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetLoginInfo)
}
GetLoginInfo::GetLoginInfo(const GetLoginInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLoginInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetLoginInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetLoginInfo)
}

inline void GetLoginInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLoginInfo::~GetLoginInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetLoginInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLoginInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetLoginInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetLoginInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLoginInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetLoginInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetLoginInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLoginInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetLoginInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetLoginInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetLoginInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetLoginInfo)
  return target;
}

size_t GetLoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetLoginInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetLoginInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLoginInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLoginInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLoginInfo::GetClassData() const { return &_class_data_; }


void GetLoginInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLoginInfo*>(&to_msg);
  auto& from = static_cast<const GetLoginInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetLoginInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetLoginInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLoginInfo::CopyFrom(const GetLoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetLoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoginInfo::IsInitialized() const {
  return true;
}

void GetLoginInfo::InternalSwap(GetLoginInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLoginInfo, _impl_.action_)
      + sizeof(GetLoginInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetLoginInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLoginInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[53]);
}

// ===================================================================

class GetLoginInfoResp::_Internal {
 public:
};

GetLoginInfoResp::GetLoginInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetLoginInfoResp)
}
GetLoginInfoResp::GetLoginInfoResp(const GetLoginInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLoginInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetLoginInfoResp)
}

inline void GetLoginInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLoginInfoResp::~GetLoginInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetLoginInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLoginInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
}

void GetLoginInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLoginInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetLoginInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLoginInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetLoginInfoResp.nickname"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLoginInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetLoginInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetLoginInfoResp.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetLoginInfoResp)
  return target;
}

size_t GetLoginInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetLoginInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLoginInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLoginInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLoginInfoResp::GetClassData() const { return &_class_data_; }


void GetLoginInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLoginInfoResp*>(&to_msg);
  auto& from = static_cast<const GetLoginInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetLoginInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLoginInfoResp::CopyFrom(const GetLoginInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetLoginInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoginInfoResp::IsInitialized() const {
  return true;
}

void GetLoginInfoResp::InternalSwap(GetLoginInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLoginInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[54]);
}

// ===================================================================

class QiDianGetAccountInfo::_Internal {
 public:
};

QiDianGetAccountInfo::QiDianGetAccountInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.QiDianGetAccountInfo)
}
QiDianGetAccountInfo::QiDianGetAccountInfo(const QiDianGetAccountInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QiDianGetAccountInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.QiDianGetAccountInfo)
}

inline void QiDianGetAccountInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QiDianGetAccountInfo::~QiDianGetAccountInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.QiDianGetAccountInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QiDianGetAccountInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void QiDianGetAccountInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QiDianGetAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.QiDianGetAccountInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QiDianGetAccountInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.QiDianGetAccountInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QiDianGetAccountInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.QiDianGetAccountInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.QiDianGetAccountInfo.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.QiDianGetAccountInfo)
  return target;
}

size_t QiDianGetAccountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.QiDianGetAccountInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QiDianGetAccountInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QiDianGetAccountInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QiDianGetAccountInfo::GetClassData() const { return &_class_data_; }


void QiDianGetAccountInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QiDianGetAccountInfo*>(&to_msg);
  auto& from = static_cast<const QiDianGetAccountInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.QiDianGetAccountInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QiDianGetAccountInfo::CopyFrom(const QiDianGetAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.QiDianGetAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QiDianGetAccountInfo::IsInitialized() const {
  return true;
}

void QiDianGetAccountInfo::InternalSwap(QiDianGetAccountInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QiDianGetAccountInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[55]);
}

// ===================================================================

class QiDianGetAccountInfoResp::_Internal {
 public:
};

QiDianGetAccountInfoResp::QiDianGetAccountInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.QiDianGetAccountInfoResp)
}
QiDianGetAccountInfoResp::QiDianGetAccountInfoResp(const QiDianGetAccountInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QiDianGetAccountInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ext_name_){}
    , decltype(_impl_.master_id_){}
    , decltype(_impl_.create_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ext_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ext_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ext_name().empty()) {
    _this->_impl_.ext_name_.Set(from._internal_ext_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.master_id_, &from._impl_.master_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.create_time_) -
    reinterpret_cast<char*>(&_impl_.master_id_)) + sizeof(_impl_.create_time_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.QiDianGetAccountInfoResp)
}

inline void QiDianGetAccountInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ext_name_){}
    , decltype(_impl_.master_id_){int64_t{0}}
    , decltype(_impl_.create_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ext_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ext_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QiDianGetAccountInfoResp::~QiDianGetAccountInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.QiDianGetAccountInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QiDianGetAccountInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ext_name_.Destroy();
}

void QiDianGetAccountInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QiDianGetAccountInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.QiDianGetAccountInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ext_name_.ClearToEmpty();
  ::memset(&_impl_.master_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.create_time_) -
      reinterpret_cast<char*>(&_impl_.master_id_)) + sizeof(_impl_.create_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QiDianGetAccountInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 master_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.master_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ext_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ext_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.QiDianGetAccountInfoResp.ext_name"));
        } else
          goto handle_unusual;
        continue;
      // int64 create_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.create_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QiDianGetAccountInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.QiDianGetAccountInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 master_id = 1;
  if (this->_internal_master_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_master_id(), target);
  }

  // string ext_name = 2;
  if (!this->_internal_ext_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ext_name().data(), static_cast<int>(this->_internal_ext_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.QiDianGetAccountInfoResp.ext_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ext_name(), target);
  }

  // int64 create_time = 3;
  if (this->_internal_create_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_create_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.QiDianGetAccountInfoResp)
  return target;
}

size_t QiDianGetAccountInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.QiDianGetAccountInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ext_name = 2;
  if (!this->_internal_ext_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ext_name());
  }

  // int64 master_id = 1;
  if (this->_internal_master_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_master_id());
  }

  // int64 create_time = 3;
  if (this->_internal_create_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_create_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QiDianGetAccountInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QiDianGetAccountInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QiDianGetAccountInfoResp::GetClassData() const { return &_class_data_; }


void QiDianGetAccountInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QiDianGetAccountInfoResp*>(&to_msg);
  auto& from = static_cast<const QiDianGetAccountInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.QiDianGetAccountInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ext_name().empty()) {
    _this->_internal_set_ext_name(from._internal_ext_name());
  }
  if (from._internal_master_id() != 0) {
    _this->_internal_set_master_id(from._internal_master_id());
  }
  if (from._internal_create_time() != 0) {
    _this->_internal_set_create_time(from._internal_create_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QiDianGetAccountInfoResp::CopyFrom(const QiDianGetAccountInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.QiDianGetAccountInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QiDianGetAccountInfoResp::IsInitialized() const {
  return true;
}

void QiDianGetAccountInfoResp::InternalSwap(QiDianGetAccountInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ext_name_, lhs_arena,
      &other->_impl_.ext_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QiDianGetAccountInfoResp, _impl_.create_time_)
      + sizeof(QiDianGetAccountInfoResp::_impl_.create_time_)
      - PROTOBUF_FIELD_OFFSET(QiDianGetAccountInfoResp, _impl_.master_id_)>(
          reinterpret_cast<char*>(&_impl_.master_id_),
          reinterpret_cast<char*>(&other->_impl_.master_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QiDianGetAccountInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[56]);
}

// ===================================================================

class SetQQProfile_Params::_Internal {
 public:
};

SetQQProfile_Params::SetQQProfile_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetQQProfile.Params)
}
SetQQProfile_Params::SetQQProfile_Params(const SetQQProfile_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetQQProfile_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.company_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.college_){}
    , decltype(_impl_.personal_note_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.company_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.company_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_company().empty()) {
    _this->_impl_.company_.Set(from._internal_company(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.college_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.college_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_college().empty()) {
    _this->_impl_.college_.Set(from._internal_college(), 
      _this->GetArenaForAllocation());
  }
  _impl_.personal_note_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.personal_note_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_personal_note().empty()) {
    _this->_impl_.personal_note_.Set(from._internal_personal_note(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetQQProfile.Params)
}

inline void SetQQProfile_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.company_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.college_){}
    , decltype(_impl_.personal_note_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.company_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.company_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.college_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.college_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.personal_note_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.personal_note_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetQQProfile_Params::~SetQQProfile_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetQQProfile.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetQQProfile_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.company_.Destroy();
  _impl_.email_.Destroy();
  _impl_.college_.Destroy();
  _impl_.personal_note_.Destroy();
}

void SetQQProfile_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetQQProfile_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetQQProfile.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.company_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.college_.ClearToEmpty();
  _impl_.personal_note_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetQQProfile_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string nickname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetQQProfile.Params.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string company = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_company();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetQQProfile.Params.company"));
        } else
          goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetQQProfile.Params.email"));
        } else
          goto handle_unusual;
        continue;
      // string college = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_college();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetQQProfile.Params.college"));
        } else
          goto handle_unusual;
        continue;
      // string personal_note = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_personal_note();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetQQProfile.Params.personal_note"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetQQProfile_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetQQProfile.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetQQProfile.Params.nickname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nickname(), target);
  }

  // string company = 2;
  if (!this->_internal_company().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_company().data(), static_cast<int>(this->_internal_company().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetQQProfile.Params.company");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_company(), target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetQQProfile.Params.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // string college = 4;
  if (!this->_internal_college().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_college().data(), static_cast<int>(this->_internal_college().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetQQProfile.Params.college");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_college(), target);
  }

  // string personal_note = 5;
  if (!this->_internal_personal_note().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_personal_note().data(), static_cast<int>(this->_internal_personal_note().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetQQProfile.Params.personal_note");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_personal_note(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetQQProfile.Params)
  return target;
}

size_t SetQQProfile_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetQQProfile.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string company = 2;
  if (!this->_internal_company().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_company());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string college = 4;
  if (!this->_internal_college().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_college());
  }

  // string personal_note = 5;
  if (!this->_internal_personal_note().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_personal_note());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetQQProfile_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetQQProfile_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetQQProfile_Params::GetClassData() const { return &_class_data_; }


void SetQQProfile_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetQQProfile_Params*>(&to_msg);
  auto& from = static_cast<const SetQQProfile_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetQQProfile.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_company().empty()) {
    _this->_internal_set_company(from._internal_company());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_college().empty()) {
    _this->_internal_set_college(from._internal_college());
  }
  if (!from._internal_personal_note().empty()) {
    _this->_internal_set_personal_note(from._internal_personal_note());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetQQProfile_Params::CopyFrom(const SetQQProfile_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetQQProfile.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQQProfile_Params::IsInitialized() const {
  return true;
}

void SetQQProfile_Params::InternalSwap(SetQQProfile_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.company_, lhs_arena,
      &other->_impl_.company_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.college_, lhs_arena,
      &other->_impl_.college_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.personal_note_, lhs_arena,
      &other->_impl_.personal_note_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SetQQProfile_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[57]);
}

// ===================================================================

class SetQQProfile::_Internal {
 public:
  static const ::cqhttp::SetQQProfile_Params& params(const SetQQProfile* msg);
};

const ::cqhttp::SetQQProfile_Params&
SetQQProfile::_Internal::params(const SetQQProfile* msg) {
  return *msg->_impl_.params_;
}
SetQQProfile::SetQQProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetQQProfile)
}
SetQQProfile::SetQQProfile(const SetQQProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetQQProfile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetQQProfile_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetQQProfile)
}

inline void SetQQProfile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetQQProfile::~SetQQProfile() {
  // @@protoc_insertion_point(destructor:cqhttp.SetQQProfile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetQQProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetQQProfile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetQQProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetQQProfile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetQQProfile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetQQProfile.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetQQProfile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetQQProfile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetQQProfile.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetQQProfile)
  return target;
}

size_t SetQQProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetQQProfile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetQQProfile.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetQQProfile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetQQProfile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetQQProfile::GetClassData() const { return &_class_data_; }


void SetQQProfile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetQQProfile*>(&to_msg);
  auto& from = static_cast<const SetQQProfile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetQQProfile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetQQProfile_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetQQProfile::CopyFrom(const SetQQProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetQQProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQQProfile::IsInitialized() const {
  return true;
}

void SetQQProfile::InternalSwap(SetQQProfile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetQQProfile, _impl_.action_)
      + sizeof(SetQQProfile::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetQQProfile, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetQQProfile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[58]);
}

// ===================================================================

class GetStrangerInfo_Params::_Internal {
 public:
};

GetStrangerInfo_Params::GetStrangerInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStrangerInfo.Params)
}
GetStrangerInfo_Params::GetStrangerInfo_Params(const GetStrangerInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStrangerInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.no_cache_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.no_cache_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStrangerInfo.Params)
}

inline void GetStrangerInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStrangerInfo_Params::~GetStrangerInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStrangerInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStrangerInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStrangerInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStrangerInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStrangerInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.no_cache_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.no_cache_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStrangerInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_cache = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStrangerInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStrangerInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStrangerInfo.Params)
  return target;
}

size_t GetStrangerInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStrangerInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStrangerInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStrangerInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStrangerInfo_Params::GetClassData() const { return &_class_data_; }


void GetStrangerInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStrangerInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetStrangerInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStrangerInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStrangerInfo_Params::CopyFrom(const GetStrangerInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStrangerInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStrangerInfo_Params::IsInitialized() const {
  return true;
}

void GetStrangerInfo_Params::InternalSwap(GetStrangerInfo_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStrangerInfo_Params, _impl_.no_cache_)
      + sizeof(GetStrangerInfo_Params::_impl_.no_cache_)
      - PROTOBUF_FIELD_OFFSET(GetStrangerInfo_Params, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStrangerInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[59]);
}

// ===================================================================

class GetStrangerInfo::_Internal {
 public:
  static const ::cqhttp::GetStrangerInfo_Params& params(const GetStrangerInfo* msg);
};

const ::cqhttp::GetStrangerInfo_Params&
GetStrangerInfo::_Internal::params(const GetStrangerInfo* msg) {
  return *msg->_impl_.params_;
}
GetStrangerInfo::GetStrangerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStrangerInfo)
}
GetStrangerInfo::GetStrangerInfo(const GetStrangerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStrangerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetStrangerInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStrangerInfo)
}

inline void GetStrangerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStrangerInfo::~GetStrangerInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStrangerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStrangerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetStrangerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStrangerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStrangerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStrangerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetStrangerInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetStrangerInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStrangerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStrangerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetStrangerInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetStrangerInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStrangerInfo)
  return target;
}

size_t GetStrangerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStrangerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetStrangerInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStrangerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStrangerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStrangerInfo::GetClassData() const { return &_class_data_; }


void GetStrangerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStrangerInfo*>(&to_msg);
  auto& from = static_cast<const GetStrangerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStrangerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetStrangerInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStrangerInfo::CopyFrom(const GetStrangerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStrangerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStrangerInfo::IsInitialized() const {
  return true;
}

void GetStrangerInfo::InternalSwap(GetStrangerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStrangerInfo, _impl_.action_)
      + sizeof(GetStrangerInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetStrangerInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStrangerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[60]);
}

// ===================================================================

class GetStrangerInfoResp::_Internal {
 public:
};

GetStrangerInfoResp::GetStrangerInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStrangerInfoResp)
}
GetStrangerInfoResp::GetStrangerInfoResp(const GetStrangerInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStrangerInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.sex_){}
    , decltype(_impl_.qid_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.age_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.login_days_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sex_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sex_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sex().empty()) {
    _this->_impl_.sex_.Set(from._internal_sex(), 
      _this->GetArenaForAllocation());
  }
  _impl_.qid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.qid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_qid().empty()) {
    _this->_impl_.qid_.Set(from._internal_qid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.login_days_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.login_days_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStrangerInfoResp)
}

inline void GetStrangerInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.sex_){}
    , decltype(_impl_.qid_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.age_){0}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.login_days_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sex_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sex_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.qid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.qid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStrangerInfoResp::~GetStrangerInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStrangerInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStrangerInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.sex_.Destroy();
  _impl_.qid_.Destroy();
}

void GetStrangerInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStrangerInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStrangerInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.sex_.ClearToEmpty();
  _impl_.qid_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.login_days_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.login_days_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStrangerInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetStrangerInfoResp.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string sex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sex();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetStrangerInfoResp.sex"));
        } else
          goto handle_unusual;
        continue;
      // int32 age = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string qid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_qid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetStrangerInfoResp.qid"));
        } else
          goto handle_unusual;
        continue;
      // int32 level = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 login_days = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.login_days_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStrangerInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStrangerInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetStrangerInfoResp.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string sex = 3;
  if (!this->_internal_sex().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sex().data(), static_cast<int>(this->_internal_sex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetStrangerInfoResp.sex");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sex(), target);
  }

  // int32 age = 4;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_age(), target);
  }

  // string qid = 5;
  if (!this->_internal_qid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_qid().data(), static_cast<int>(this->_internal_qid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetStrangerInfoResp.qid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_qid(), target);
  }

  // int32 level = 6;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_level(), target);
  }

  // int32 login_days = 7;
  if (this->_internal_login_days() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_login_days(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStrangerInfoResp)
  return target;
}

size_t GetStrangerInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStrangerInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string sex = 3;
  if (!this->_internal_sex().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sex());
  }

  // string qid = 5;
  if (!this->_internal_qid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_qid());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 age = 4;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  // int32 level = 6;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 login_days = 7;
  if (this->_internal_login_days() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_login_days());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStrangerInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStrangerInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStrangerInfoResp::GetClassData() const { return &_class_data_; }


void GetStrangerInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStrangerInfoResp*>(&to_msg);
  auto& from = static_cast<const GetStrangerInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStrangerInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_sex().empty()) {
    _this->_internal_set_sex(from._internal_sex());
  }
  if (!from._internal_qid().empty()) {
    _this->_internal_set_qid(from._internal_qid());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_login_days() != 0) {
    _this->_internal_set_login_days(from._internal_login_days());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStrangerInfoResp::CopyFrom(const GetStrangerInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStrangerInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStrangerInfoResp::IsInitialized() const {
  return true;
}

void GetStrangerInfoResp::InternalSwap(GetStrangerInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sex_, lhs_arena,
      &other->_impl_.sex_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.qid_, lhs_arena,
      &other->_impl_.qid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStrangerInfoResp, _impl_.login_days_)
      + sizeof(GetStrangerInfoResp::_impl_.login_days_)
      - PROTOBUF_FIELD_OFFSET(GetStrangerInfoResp, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStrangerInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[61]);
}

// ===================================================================

class GetFriendList::_Internal {
 public:
};

GetFriendList::GetFriendList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetFriendList)
}
GetFriendList::GetFriendList(const GetFriendList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFriendList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetFriendList)
}

inline void GetFriendList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFriendList::~GetFriendList() {
  // @@protoc_insertion_point(destructor:cqhttp.GetFriendList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void GetFriendList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetFriendList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFriendList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetFriendList.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFriendList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetFriendList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetFriendList.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetFriendList)
  return target;
}

size_t GetFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetFriendList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFriendList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFriendList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFriendList::GetClassData() const { return &_class_data_; }


void GetFriendList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFriendList*>(&to_msg);
  auto& from = static_cast<const GetFriendList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetFriendList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendList::CopyFrom(const GetFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendList::IsInitialized() const {
  return true;
}

void GetFriendList::InternalSwap(GetFriendList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFriendList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[62]);
}

// ===================================================================

class GetFriendListResp_Friend::_Internal {
 public:
};

GetFriendListResp_Friend::GetFriendListResp_Friend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetFriendListResp.Friend)
}
GetFriendListResp_Friend::GetFriendListResp_Friend(const GetFriendListResp_Friend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFriendListResp_Friend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.remark_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remark_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remark().empty()) {
    _this->_impl_.remark_.Set(from._internal_remark(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetFriendListResp.Friend)
}

inline void GetFriendListResp_Friend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.remark_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remark_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFriendListResp_Friend::~GetFriendListResp_Friend() {
  // @@protoc_insertion_point(destructor:cqhttp.GetFriendListResp.Friend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFriendListResp_Friend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.remark_.Destroy();
}

void GetFriendListResp_Friend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFriendListResp_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetFriendListResp.Friend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFriendListResp_Friend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetFriendListResp.Friend.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string remark = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_remark();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetFriendListResp.Friend.remark"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFriendListResp_Friend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetFriendListResp.Friend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetFriendListResp.Friend.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string remark = 3;
  if (!this->_internal_remark().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remark().data(), static_cast<int>(this->_internal_remark().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetFriendListResp.Friend.remark");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_remark(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetFriendListResp.Friend)
  return target;
}

size_t GetFriendListResp_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetFriendListResp.Friend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string remark = 3;
  if (!this->_internal_remark().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remark());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFriendListResp_Friend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFriendListResp_Friend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFriendListResp_Friend::GetClassData() const { return &_class_data_; }


void GetFriendListResp_Friend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFriendListResp_Friend*>(&to_msg);
  auto& from = static_cast<const GetFriendListResp_Friend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetFriendListResp.Friend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendListResp_Friend::CopyFrom(const GetFriendListResp_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetFriendListResp.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendListResp_Friend::IsInitialized() const {
  return true;
}

void GetFriendListResp_Friend::InternalSwap(GetFriendListResp_Friend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.remark_, lhs_arena,
      &other->_impl_.remark_, rhs_arena
  );
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFriendListResp_Friend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[63]);
}

// ===================================================================

class GetFriendListResp::_Internal {
 public:
};

GetFriendListResp::GetFriendListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetFriendListResp)
}
GetFriendListResp::GetFriendListResp(const GetFriendListResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFriendListResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.friends_){from._impl_.friends_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetFriendListResp)
}

inline void GetFriendListResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.friends_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFriendListResp::~GetFriendListResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetFriendListResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFriendListResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.friends_.~RepeatedPtrField();
}

void GetFriendListResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFriendListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetFriendListResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friends_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFriendListResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetFriendListResp.Friend friends = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFriendListResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetFriendListResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetFriendListResp.Friend friends = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_friends_size()); i < n; i++) {
    const auto& repfield = this->_internal_friends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetFriendListResp)
  return target;
}

size_t GetFriendListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetFriendListResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetFriendListResp.Friend friends = 1;
  total_size += 1UL * this->_internal_friends_size();
  for (const auto& msg : this->_impl_.friends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFriendListResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFriendListResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFriendListResp::GetClassData() const { return &_class_data_; }


void GetFriendListResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFriendListResp*>(&to_msg);
  auto& from = static_cast<const GetFriendListResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetFriendListResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.friends_.MergeFrom(from._impl_.friends_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendListResp::CopyFrom(const GetFriendListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetFriendListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendListResp::IsInitialized() const {
  return true;
}

void GetFriendListResp::InternalSwap(GetFriendListResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.friends_.InternalSwap(&other->_impl_.friends_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFriendListResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[64]);
}

// ===================================================================

class UnidirectionalFriendList::_Internal {
 public:
};

UnidirectionalFriendList::UnidirectionalFriendList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UnidirectionalFriendList)
}
UnidirectionalFriendList::UnidirectionalFriendList(const UnidirectionalFriendList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnidirectionalFriendList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UnidirectionalFriendList)
}

inline void UnidirectionalFriendList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnidirectionalFriendList::~UnidirectionalFriendList() {
  // @@protoc_insertion_point(destructor:cqhttp.UnidirectionalFriendList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnidirectionalFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void UnidirectionalFriendList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnidirectionalFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UnidirectionalFriendList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnidirectionalFriendList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UnidirectionalFriendList.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnidirectionalFriendList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UnidirectionalFriendList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UnidirectionalFriendList.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UnidirectionalFriendList)
  return target;
}

size_t UnidirectionalFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UnidirectionalFriendList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnidirectionalFriendList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnidirectionalFriendList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnidirectionalFriendList::GetClassData() const { return &_class_data_; }


void UnidirectionalFriendList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnidirectionalFriendList*>(&to_msg);
  auto& from = static_cast<const UnidirectionalFriendList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UnidirectionalFriendList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnidirectionalFriendList::CopyFrom(const UnidirectionalFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UnidirectionalFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnidirectionalFriendList::IsInitialized() const {
  return true;
}

void UnidirectionalFriendList::InternalSwap(UnidirectionalFriendList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnidirectionalFriendList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[65]);
}

// ===================================================================

class UnidirectionalFriendListResp_Friend::_Internal {
 public:
};

UnidirectionalFriendListResp_Friend::UnidirectionalFriendListResp_Friend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UnidirectionalFriendListResp.Friend)
}
UnidirectionalFriendListResp_Friend::UnidirectionalFriendListResp_Friend(const UnidirectionalFriendListResp_Friend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnidirectionalFriendListResp_Friend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.source_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source().empty()) {
    _this->_impl_.source_.Set(from._internal_source(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UnidirectionalFriendListResp.Friend)
}

inline void UnidirectionalFriendListResp_Friend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.source_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnidirectionalFriendListResp_Friend::~UnidirectionalFriendListResp_Friend() {
  // @@protoc_insertion_point(destructor:cqhttp.UnidirectionalFriendListResp.Friend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnidirectionalFriendListResp_Friend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.source_.Destroy();
}

void UnidirectionalFriendListResp_Friend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnidirectionalFriendListResp_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UnidirectionalFriendListResp.Friend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.source_.ClearToEmpty();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnidirectionalFriendListResp_Friend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UnidirectionalFriendListResp.Friend.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string source = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UnidirectionalFriendListResp.Friend.source"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnidirectionalFriendListResp_Friend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UnidirectionalFriendListResp.Friend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UnidirectionalFriendListResp.Friend.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string source = 3;
  if (!this->_internal_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UnidirectionalFriendListResp.Friend.source");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UnidirectionalFriendListResp.Friend)
  return target;
}

size_t UnidirectionalFriendListResp_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UnidirectionalFriendListResp.Friend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string source = 3;
  if (!this->_internal_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnidirectionalFriendListResp_Friend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnidirectionalFriendListResp_Friend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnidirectionalFriendListResp_Friend::GetClassData() const { return &_class_data_; }


void UnidirectionalFriendListResp_Friend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnidirectionalFriendListResp_Friend*>(&to_msg);
  auto& from = static_cast<const UnidirectionalFriendListResp_Friend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UnidirectionalFriendListResp.Friend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_source().empty()) {
    _this->_internal_set_source(from._internal_source());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnidirectionalFriendListResp_Friend::CopyFrom(const UnidirectionalFriendListResp_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UnidirectionalFriendListResp.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnidirectionalFriendListResp_Friend::IsInitialized() const {
  return true;
}

void UnidirectionalFriendListResp_Friend::InternalSwap(UnidirectionalFriendListResp_Friend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.source_, lhs_arena,
      &other->_impl_.source_, rhs_arena
  );
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnidirectionalFriendListResp_Friend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[66]);
}

// ===================================================================

class UnidirectionalFriendListResp::_Internal {
 public:
};

UnidirectionalFriendListResp::UnidirectionalFriendListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UnidirectionalFriendListResp)
}
UnidirectionalFriendListResp::UnidirectionalFriendListResp(const UnidirectionalFriendListResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnidirectionalFriendListResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.friend__){from._impl_.friend__}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.UnidirectionalFriendListResp)
}

inline void UnidirectionalFriendListResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.friend__){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnidirectionalFriendListResp::~UnidirectionalFriendListResp() {
  // @@protoc_insertion_point(destructor:cqhttp.UnidirectionalFriendListResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnidirectionalFriendListResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.friend__.~RepeatedPtrField();
}

void UnidirectionalFriendListResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnidirectionalFriendListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UnidirectionalFriendListResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friend__.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnidirectionalFriendListResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.UnidirectionalFriendListResp.Friend friend = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friend_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnidirectionalFriendListResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UnidirectionalFriendListResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.UnidirectionalFriendListResp.Friend friend = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_friend__size()); i < n; i++) {
    const auto& repfield = this->_internal_friend_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UnidirectionalFriendListResp)
  return target;
}

size_t UnidirectionalFriendListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UnidirectionalFriendListResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.UnidirectionalFriendListResp.Friend friend = 1;
  total_size += 1UL * this->_internal_friend__size();
  for (const auto& msg : this->_impl_.friend__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnidirectionalFriendListResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnidirectionalFriendListResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnidirectionalFriendListResp::GetClassData() const { return &_class_data_; }


void UnidirectionalFriendListResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnidirectionalFriendListResp*>(&to_msg);
  auto& from = static_cast<const UnidirectionalFriendListResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UnidirectionalFriendListResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.friend__.MergeFrom(from._impl_.friend__);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnidirectionalFriendListResp::CopyFrom(const UnidirectionalFriendListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UnidirectionalFriendListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnidirectionalFriendListResp::IsInitialized() const {
  return true;
}

void UnidirectionalFriendListResp::InternalSwap(UnidirectionalFriendListResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.friend__.InternalSwap(&other->_impl_.friend__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnidirectionalFriendListResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[67]);
}

// ===================================================================

class DeleteFriend_Params::_Internal {
 public:
};

DeleteFriend_Params::DeleteFriend_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteFriend.Params)
}
DeleteFriend_Params::DeleteFriend_Params(const DeleteFriend_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteFriend_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteFriend.Params)
}

inline void DeleteFriend_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteFriend_Params::~DeleteFriend_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteFriend.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteFriend_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteFriend_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteFriend_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteFriend.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFriend_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteFriend_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteFriend.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteFriend.Params)
  return target;
}

size_t DeleteFriend_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteFriend.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFriend_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteFriend_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFriend_Params::GetClassData() const { return &_class_data_; }


void DeleteFriend_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteFriend_Params*>(&to_msg);
  auto& from = static_cast<const DeleteFriend_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteFriend.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFriend_Params::CopyFrom(const DeleteFriend_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteFriend.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriend_Params::IsInitialized() const {
  return true;
}

void DeleteFriend_Params::InternalSwap(DeleteFriend_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFriend_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[68]);
}

// ===================================================================

class DeleteFriend::_Internal {
 public:
  static const ::cqhttp::DeleteFriend_Params& params(const DeleteFriend* msg);
};

const ::cqhttp::DeleteFriend_Params&
DeleteFriend::_Internal::params(const DeleteFriend* msg) {
  return *msg->_impl_.params_;
}
DeleteFriend::DeleteFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteFriend)
}
DeleteFriend::DeleteFriend(const DeleteFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteFriend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteFriend_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteFriend)
}

inline void DeleteFriend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteFriend::~DeleteFriend() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteFriend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteFriend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteFriend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFriend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteFriend.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteFriend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteFriend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteFriend.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteFriend)
  return target;
}

size_t DeleteFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteFriend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteFriend.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFriend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteFriend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFriend::GetClassData() const { return &_class_data_; }


void DeleteFriend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteFriend*>(&to_msg);
  auto& from = static_cast<const DeleteFriend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteFriend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteFriend_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFriend::CopyFrom(const DeleteFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriend::IsInitialized() const {
  return true;
}

void DeleteFriend::InternalSwap(DeleteFriend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteFriend, _impl_.action_)
      + sizeof(DeleteFriend::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteFriend, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFriend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[69]);
}

// ===================================================================

class GetGroupInfo_Params::_Internal {
 public:
};

GetGroupInfo_Params::GetGroupInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupInfo.Params)
}
GetGroupInfo_Params::GetGroupInfo_Params(const GetGroupInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.no_cache_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupInfo.Params)
}

inline void GetGroupInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupInfo_Params::~GetGroupInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.no_cache_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_cache = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupInfo.Params)
  return target;
}

size_t GetGroupInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupInfo_Params::GetClassData() const { return &_class_data_; }


void GetGroupInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupInfo_Params::CopyFrom(const GetGroupInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupInfo_Params::IsInitialized() const {
  return true;
}

void GetGroupInfo_Params::InternalSwap(GetGroupInfo_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupInfo_Params, _impl_.no_cache_)
      + sizeof(GetGroupInfo_Params::_impl_.no_cache_)
      - PROTOBUF_FIELD_OFFSET(GetGroupInfo_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[70]);
}

// ===================================================================

class GetGroupInfo::_Internal {
 public:
  static const ::cqhttp::GetGroupInfo_Params& params(const GetGroupInfo* msg);
};

const ::cqhttp::GetGroupInfo_Params&
GetGroupInfo::_Internal::params(const GetGroupInfo* msg) {
  return *msg->_impl_.params_;
}
GetGroupInfo::GetGroupInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupInfo)
}
GetGroupInfo::GetGroupInfo(const GetGroupInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupInfo)
}

inline void GetGroupInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupInfo::~GetGroupInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupInfo)
  return target;
}

size_t GetGroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupInfo::GetClassData() const { return &_class_data_; }


void GetGroupInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupInfo*>(&to_msg);
  auto& from = static_cast<const GetGroupInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupInfo::CopyFrom(const GetGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupInfo::IsInitialized() const {
  return true;
}

void GetGroupInfo::InternalSwap(GetGroupInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupInfo, _impl_.action_)
      + sizeof(GetGroupInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[71]);
}

// ===================================================================

class GetGroupInfoResp::_Internal {
 public:
};

GetGroupInfoResp::GetGroupInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupInfoResp)
}
GetGroupInfoResp::GetGroupInfoResp(const GetGroupInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , decltype(_impl_.group_memo_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_create_time_){}
    , decltype(_impl_.group_level_){}
    , decltype(_impl_.member_count_){}
    , decltype(_impl_.max_member_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_memo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_memo().empty()) {
    _this->_impl_.group_memo_.Set(from._internal_group_memo(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.max_member_count_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.max_member_count_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupInfoResp)
}

inline void GetGroupInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , decltype(_impl_.group_memo_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.group_create_time_){0u}
    , decltype(_impl_.group_level_){0u}
    , decltype(_impl_.member_count_){0}
    , decltype(_impl_.max_member_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_memo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_memo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupInfoResp::~GetGroupInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_name_.Destroy();
  _impl_.group_memo_.Destroy();
}

void GetGroupInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_name_.ClearToEmpty();
  _impl_.group_memo_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.max_member_count_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.max_member_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupInfoResp.group_name"));
        } else
          goto handle_unusual;
        continue;
      // string group_memo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group_memo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupInfoResp.group_memo"));
        } else
          goto handle_unusual;
        continue;
      // uint32 group_create_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.group_create_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 group_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.group_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 member_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.member_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 max_member_count = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.max_member_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupInfoResp.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  // string group_memo = 3;
  if (!this->_internal_group_memo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_memo().data(), static_cast<int>(this->_internal_group_memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupInfoResp.group_memo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_group_memo(), target);
  }

  // uint32 group_create_time = 4;
  if (this->_internal_group_create_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_group_create_time(), target);
  }

  // uint32 group_level = 5;
  if (this->_internal_group_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_group_level(), target);
  }

  // int32 member_count = 6;
  if (this->_internal_member_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_member_count(), target);
  }

  // int32 max_member_count = 7;
  if (this->_internal_max_member_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_max_member_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupInfoResp)
  return target;
}

size_t GetGroupInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // string group_memo = 3;
  if (!this->_internal_group_memo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_memo());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // uint32 group_create_time = 4;
  if (this->_internal_group_create_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_group_create_time());
  }

  // uint32 group_level = 5;
  if (this->_internal_group_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_group_level());
  }

  // int32 member_count = 6;
  if (this->_internal_member_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_member_count());
  }

  // int32 max_member_count = 7;
  if (this->_internal_max_member_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_member_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupInfoResp::GetClassData() const { return &_class_data_; }


void GetGroupInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupInfoResp*>(&to_msg);
  auto& from = static_cast<const GetGroupInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (!from._internal_group_memo().empty()) {
    _this->_internal_set_group_memo(from._internal_group_memo());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_group_create_time() != 0) {
    _this->_internal_set_group_create_time(from._internal_group_create_time());
  }
  if (from._internal_group_level() != 0) {
    _this->_internal_set_group_level(from._internal_group_level());
  }
  if (from._internal_member_count() != 0) {
    _this->_internal_set_member_count(from._internal_member_count());
  }
  if (from._internal_max_member_count() != 0) {
    _this->_internal_set_max_member_count(from._internal_max_member_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupInfoResp::CopyFrom(const GetGroupInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupInfoResp::IsInitialized() const {
  return true;
}

void GetGroupInfoResp::InternalSwap(GetGroupInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_memo_, lhs_arena,
      &other->_impl_.group_memo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupInfoResp, _impl_.max_member_count_)
      + sizeof(GetGroupInfoResp::_impl_.max_member_count_)
      - PROTOBUF_FIELD_OFFSET(GetGroupInfoResp, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[72]);
}

// ===================================================================

class GetGroupList_Params::_Internal {
 public:
};

GetGroupList_Params::GetGroupList_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupList.Params)
}
GetGroupList_Params::GetGroupList_Params(const GetGroupList_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupList_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.no_cache_ = from._impl_.no_cache_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupList.Params)
}

inline void GetGroupList_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupList_Params::~GetGroupList_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupList.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupList_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupList_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupList_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupList.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.no_cache_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupList_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool no_cache = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupList_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupList.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool no_cache = 1;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupList.Params)
  return target;
}

size_t GetGroupList_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupList.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool no_cache = 1;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupList_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupList_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupList_Params::GetClassData() const { return &_class_data_; }


void GetGroupList_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupList_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupList_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupList.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupList_Params::CopyFrom(const GetGroupList_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupList.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupList_Params::IsInitialized() const {
  return true;
}

void GetGroupList_Params::InternalSwap(GetGroupList_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.no_cache_, other->_impl_.no_cache_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupList_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[73]);
}

// ===================================================================

class GetGroupList::_Internal {
 public:
  static const ::cqhttp::GetGroupList_Params& params(const GetGroupList* msg);
};

const ::cqhttp::GetGroupList_Params&
GetGroupList::_Internal::params(const GetGroupList* msg) {
  return *msg->_impl_.params_;
}
GetGroupList::GetGroupList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupList)
}
GetGroupList::GetGroupList(const GetGroupList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupList_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupList)
}

inline void GetGroupList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupList::~GetGroupList() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupList::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupList.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupList.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupList.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupList.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupList)
  return target;
}

size_t GetGroupList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupList.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupList::GetClassData() const { return &_class_data_; }


void GetGroupList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupList*>(&to_msg);
  auto& from = static_cast<const GetGroupList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupList_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupList::CopyFrom(const GetGroupList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupList::IsInitialized() const {
  return true;
}

void GetGroupList::InternalSwap(GetGroupList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupList, _impl_.action_)
      + sizeof(GetGroupList::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupList, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[74]);
}

// ===================================================================

class GetGroupListResp::_Internal {
 public:
};

GetGroupListResp::GetGroupListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupListResp)
}
GetGroupListResp::GetGroupListResp(const GetGroupListResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupListResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_list_){from._impl_.group_list_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupListResp)
}

inline void GetGroupListResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_list_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupListResp::~GetGroupListResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupListResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupListResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_list_.~RepeatedPtrField();
}

void GetGroupListResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupListResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupListResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetGroupInfoResp group_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_group_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupListResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupListResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupInfoResp group_list = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_group_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupListResp)
  return target;
}

size_t GetGroupListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupListResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupInfoResp group_list = 1;
  total_size += 1UL * this->_internal_group_list_size();
  for (const auto& msg : this->_impl_.group_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupListResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupListResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupListResp::GetClassData() const { return &_class_data_; }


void GetGroupListResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupListResp*>(&to_msg);
  auto& from = static_cast<const GetGroupListResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupListResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.group_list_.MergeFrom(from._impl_.group_list_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupListResp::CopyFrom(const GetGroupListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupListResp::IsInitialized() const {
  return true;
}

void GetGroupListResp::InternalSwap(GetGroupListResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.group_list_.InternalSwap(&other->_impl_.group_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupListResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[75]);
}

// ===================================================================

class GetGroupMemberInfo_Params::_Internal {
 public:
};

GetGroupMemberInfo_Params::GetGroupMemberInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberInfo.Params)
}
GetGroupMemberInfo_Params::GetGroupMemberInfo_Params(const GetGroupMemberInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.no_cache_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberInfo.Params)
}

inline void GetGroupMemberInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupMemberInfo_Params::~GetGroupMemberInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupMemberInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.no_cache_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_cache = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // bool no_cache = 3;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberInfo.Params)
  return target;
}

size_t GetGroupMemberInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // bool no_cache = 3;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberInfo_Params::GetClassData() const { return &_class_data_; }


void GetGroupMemberInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberInfo_Params::CopyFrom(const GetGroupMemberInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberInfo_Params::IsInitialized() const {
  return true;
}

void GetGroupMemberInfo_Params::InternalSwap(GetGroupMemberInfo_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMemberInfo_Params, _impl_.no_cache_)
      + sizeof(GetGroupMemberInfo_Params::_impl_.no_cache_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMemberInfo_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[76]);
}

// ===================================================================

class GetGroupMemberInfo::_Internal {
 public:
  static const ::cqhttp::GetGroupMemberInfo_Params& params(const GetGroupMemberInfo* msg);
};

const ::cqhttp::GetGroupMemberInfo_Params&
GetGroupMemberInfo::_Internal::params(const GetGroupMemberInfo* msg) {
  return *msg->_impl_.params_;
}
GetGroupMemberInfo::GetGroupMemberInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberInfo)
}
GetGroupMemberInfo::GetGroupMemberInfo(const GetGroupMemberInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupMemberInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberInfo)
}

inline void GetGroupMemberInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupMemberInfo::~GetGroupMemberInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupMemberInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupMemberInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupMemberInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberInfo)
  return target;
}

size_t GetGroupMemberInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupMemberInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberInfo::GetClassData() const { return &_class_data_; }


void GetGroupMemberInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberInfo*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupMemberInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberInfo::CopyFrom(const GetGroupMemberInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberInfo::IsInitialized() const {
  return true;
}

void GetGroupMemberInfo::InternalSwap(GetGroupMemberInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMemberInfo, _impl_.action_)
      + sizeof(GetGroupMemberInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMemberInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[77]);
}

// ===================================================================

class GetGroupMemberInfoResp::_Internal {
 public:
};

GetGroupMemberInfoResp::GetGroupMemberInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberInfoResp)
}
GetGroupMemberInfoResp::GetGroupMemberInfoResp(const GetGroupMemberInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.card_){}
    , decltype(_impl_.sex_){}
    , decltype(_impl_.area_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.age_){}
    , decltype(_impl_.join_time_){}
    , decltype(_impl_.last_sent_time_){}
    , decltype(_impl_.unfriendly_){}
    , decltype(_impl_.card_changeable_){}
    , decltype(_impl_.title_expire_time_){}
    , decltype(_impl_.shut_up_timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.card_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.card_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_card().empty()) {
    _this->_impl_.card_.Set(from._internal_card(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sex_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sex_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sex().empty()) {
    _this->_impl_.sex_.Set(from._internal_sex(), 
      _this->GetArenaForAllocation());
  }
  _impl_.area_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.area_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_area().empty()) {
    _this->_impl_.area_.Set(from._internal_area(), 
      _this->GetArenaForAllocation());
  }
  _impl_.level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_level().empty()) {
    _this->_impl_.level_.Set(from._internal_level(), 
      _this->GetArenaForAllocation());
  }
  _impl_.role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_role().empty()) {
    _this->_impl_.role_.Set(from._internal_role(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.shut_up_timestamp_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.shut_up_timestamp_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberInfoResp)
}

inline void GetGroupMemberInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.card_){}
    , decltype(_impl_.sex_){}
    , decltype(_impl_.area_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.age_){0}
    , decltype(_impl_.join_time_){0}
    , decltype(_impl_.last_sent_time_){0}
    , decltype(_impl_.unfriendly_){false}
    , decltype(_impl_.card_changeable_){false}
    , decltype(_impl_.title_expire_time_){int64_t{0}}
    , decltype(_impl_.shut_up_timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.card_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.card_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sex_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sex_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.area_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.area_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupMemberInfoResp::~GetGroupMemberInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.card_.Destroy();
  _impl_.sex_.Destroy();
  _impl_.area_.Destroy();
  _impl_.level_.Destroy();
  _impl_.role_.Destroy();
  _impl_.title_.Destroy();
}

void GetGroupMemberInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.card_.ClearToEmpty();
  _impl_.sex_.ClearToEmpty();
  _impl_.area_.ClearToEmpty();
  _impl_.level_.ClearToEmpty();
  _impl_.role_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.shut_up_timestamp_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.shut_up_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string card = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_card();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.card"));
        } else
          goto handle_unusual;
        continue;
      // string sex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_sex();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.sex"));
        } else
          goto handle_unusual;
        continue;
      // int32 age = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string area = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_area();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.area"));
        } else
          goto handle_unusual;
        continue;
      // int32 join_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.join_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 last_sent_time = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.last_sent_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string level = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_level();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.level"));
        } else
          goto handle_unusual;
        continue;
      // string role = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_role();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.role"));
        } else
          goto handle_unusual;
        continue;
      // bool unfriendly = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.unfriendly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string title = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberInfoResp.title"));
        } else
          goto handle_unusual;
        continue;
      // int64 title_expire_time = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.title_expire_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool card_changeable = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.card_changeable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 shut_up_timestamp = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.shut_up_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.nickname");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nickname(), target);
  }

  // string card = 4;
  if (!this->_internal_card().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card().data(), static_cast<int>(this->_internal_card().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.card");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_card(), target);
  }

  // string sex = 5;
  if (!this->_internal_sex().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sex().data(), static_cast<int>(this->_internal_sex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.sex");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sex(), target);
  }

  // int32 age = 6;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_age(), target);
  }

  // string area = 7;
  if (!this->_internal_area().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_area().data(), static_cast<int>(this->_internal_area().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.area");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_area(), target);
  }

  // int32 join_time = 8;
  if (this->_internal_join_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_join_time(), target);
  }

  // int32 last_sent_time = 9;
  if (this->_internal_last_sent_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_last_sent_time(), target);
  }

  // string level = 10;
  if (!this->_internal_level().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.level");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_level(), target);
  }

  // string role = 11;
  if (!this->_internal_role().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role().data(), static_cast<int>(this->_internal_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.role");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_role(), target);
  }

  // bool unfriendly = 12;
  if (this->_internal_unfriendly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_unfriendly(), target);
  }

  // string title = 13;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberInfoResp.title");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_title(), target);
  }

  // int64 title_expire_time = 14;
  if (this->_internal_title_expire_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(14, this->_internal_title_expire_time(), target);
  }

  // bool card_changeable = 15;
  if (this->_internal_card_changeable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_card_changeable(), target);
  }

  // int64 shut_up_timestamp = 16;
  if (this->_internal_shut_up_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(16, this->_internal_shut_up_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberInfoResp)
  return target;
}

size_t GetGroupMemberInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string card = 4;
  if (!this->_internal_card().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card());
  }

  // string sex = 5;
  if (!this->_internal_sex().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sex());
  }

  // string area = 7;
  if (!this->_internal_area().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_area());
  }

  // string level = 10;
  if (!this->_internal_level().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  // string role = 11;
  if (!this->_internal_role().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role());
  }

  // string title = 13;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 age = 6;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  // int32 join_time = 8;
  if (this->_internal_join_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_join_time());
  }

  // int32 last_sent_time = 9;
  if (this->_internal_last_sent_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_last_sent_time());
  }

  // bool unfriendly = 12;
  if (this->_internal_unfriendly() != 0) {
    total_size += 1 + 1;
  }

  // bool card_changeable = 15;
  if (this->_internal_card_changeable() != 0) {
    total_size += 1 + 1;
  }

  // int64 title_expire_time = 14;
  if (this->_internal_title_expire_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_title_expire_time());
  }

  // int64 shut_up_timestamp = 16;
  if (this->_internal_shut_up_timestamp() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_shut_up_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberInfoResp::GetClassData() const { return &_class_data_; }


void GetGroupMemberInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberInfoResp*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_card().empty()) {
    _this->_internal_set_card(from._internal_card());
  }
  if (!from._internal_sex().empty()) {
    _this->_internal_set_sex(from._internal_sex());
  }
  if (!from._internal_area().empty()) {
    _this->_internal_set_area(from._internal_area());
  }
  if (!from._internal_level().empty()) {
    _this->_internal_set_level(from._internal_level());
  }
  if (!from._internal_role().empty()) {
    _this->_internal_set_role(from._internal_role());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  if (from._internal_join_time() != 0) {
    _this->_internal_set_join_time(from._internal_join_time());
  }
  if (from._internal_last_sent_time() != 0) {
    _this->_internal_set_last_sent_time(from._internal_last_sent_time());
  }
  if (from._internal_unfriendly() != 0) {
    _this->_internal_set_unfriendly(from._internal_unfriendly());
  }
  if (from._internal_card_changeable() != 0) {
    _this->_internal_set_card_changeable(from._internal_card_changeable());
  }
  if (from._internal_title_expire_time() != 0) {
    _this->_internal_set_title_expire_time(from._internal_title_expire_time());
  }
  if (from._internal_shut_up_timestamp() != 0) {
    _this->_internal_set_shut_up_timestamp(from._internal_shut_up_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberInfoResp::CopyFrom(const GetGroupMemberInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberInfoResp::IsInitialized() const {
  return true;
}

void GetGroupMemberInfoResp::InternalSwap(GetGroupMemberInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.card_, lhs_arena,
      &other->_impl_.card_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sex_, lhs_arena,
      &other->_impl_.sex_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.area_, lhs_arena,
      &other->_impl_.area_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.level_, lhs_arena,
      &other->_impl_.level_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_, lhs_arena,
      &other->_impl_.role_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMemberInfoResp, _impl_.shut_up_timestamp_)
      + sizeof(GetGroupMemberInfoResp::_impl_.shut_up_timestamp_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMemberInfoResp, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[78]);
}

// ===================================================================

class GetGroupMemberList_Params::_Internal {
 public:
};

GetGroupMemberList_Params::GetGroupMemberList_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberList.Params)
}
GetGroupMemberList_Params::GetGroupMemberList_Params(const GetGroupMemberList_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberList_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.no_cache_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberList.Params)
}

inline void GetGroupMemberList_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupMemberList_Params::~GetGroupMemberList_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberList.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberList_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupMemberList_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberList_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberList.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.no_cache_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.no_cache_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberList_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_cache = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberList_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberList.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberList.Params)
  return target;
}

size_t GetGroupMemberList_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberList.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // bool no_cache = 2;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberList_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberList_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberList_Params::GetClassData() const { return &_class_data_; }


void GetGroupMemberList_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberList_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberList_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberList.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberList_Params::CopyFrom(const GetGroupMemberList_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberList.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberList_Params::IsInitialized() const {
  return true;
}

void GetGroupMemberList_Params::InternalSwap(GetGroupMemberList_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMemberList_Params, _impl_.no_cache_)
      + sizeof(GetGroupMemberList_Params::_impl_.no_cache_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMemberList_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberList_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[79]);
}

// ===================================================================

class GetGroupMemberList::_Internal {
 public:
  static const ::cqhttp::GetGroupMemberList_Params& params(const GetGroupMemberList* msg);
};

const ::cqhttp::GetGroupMemberList_Params&
GetGroupMemberList::_Internal::params(const GetGroupMemberList* msg) {
  return *msg->_impl_.params_;
}
GetGroupMemberList::GetGroupMemberList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberList)
}
GetGroupMemberList::GetGroupMemberList(const GetGroupMemberList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupMemberList_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberList)
}

inline void GetGroupMemberList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupMemberList::~GetGroupMemberList() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupMemberList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberList::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupMemberList.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMemberList.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupMemberList.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMemberList.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberList)
  return target;
}

size_t GetGroupMemberList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupMemberList.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberList::GetClassData() const { return &_class_data_; }


void GetGroupMemberList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberList*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupMemberList_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberList::CopyFrom(const GetGroupMemberList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberList::IsInitialized() const {
  return true;
}

void GetGroupMemberList::InternalSwap(GetGroupMemberList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMemberList, _impl_.action_)
      + sizeof(GetGroupMemberList::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMemberList, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[80]);
}

// ===================================================================

class GetGroupMemberListResp::_Internal {
 public:
};

GetGroupMemberListResp::GetGroupMemberListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMemberListResp)
}
GetGroupMemberListResp::GetGroupMemberListResp(const GetGroupMemberListResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMemberListResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_member_list_){from._impl_.group_member_list_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMemberListResp)
}

inline void GetGroupMemberListResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_member_list_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupMemberListResp::~GetGroupMemberListResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMemberListResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMemberListResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_member_list_.~RepeatedPtrField();
}

void GetGroupMemberListResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMemberListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMemberListResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_member_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMemberListResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetGroupMemberInfoResp group_member_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_group_member_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMemberListResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMemberListResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupMemberInfoResp group_member_list = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_member_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_group_member_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMemberListResp)
  return target;
}

size_t GetGroupMemberListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMemberListResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupMemberInfoResp group_member_list = 1;
  total_size += 1UL * this->_internal_group_member_list_size();
  for (const auto& msg : this->_impl_.group_member_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMemberListResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMemberListResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMemberListResp::GetClassData() const { return &_class_data_; }


void GetGroupMemberListResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMemberListResp*>(&to_msg);
  auto& from = static_cast<const GetGroupMemberListResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMemberListResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.group_member_list_.MergeFrom(from._impl_.group_member_list_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMemberListResp::CopyFrom(const GetGroupMemberListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMemberListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMemberListResp::IsInitialized() const {
  return true;
}

void GetGroupMemberListResp::InternalSwap(GetGroupMemberListResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.group_member_list_.InternalSwap(&other->_impl_.group_member_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMemberListResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[81]);
}

// ===================================================================

class GetGroupHonorInfo_Params::_Internal {
 public:
};

GetGroupHonorInfo_Params::GetGroupHonorInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupHonorInfo.Params)
}
GetGroupHonorInfo_Params::GetGroupHonorInfo_Params(const GetGroupHonorInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupHonorInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupHonorInfo.Params)
}

inline void GetGroupHonorInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupHonorInfo_Params::~GetGroupHonorInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupHonorInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupHonorInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
}

void GetGroupHonorInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupHonorInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupHonorInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupHonorInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupHonorInfo.Params.type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupHonorInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupHonorInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupHonorInfo.Params.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupHonorInfo.Params)
  return target;
}

size_t GetGroupHonorInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupHonorInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupHonorInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupHonorInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupHonorInfo_Params::GetClassData() const { return &_class_data_; }


void GetGroupHonorInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupHonorInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupHonorInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupHonorInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupHonorInfo_Params::CopyFrom(const GetGroupHonorInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupHonorInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupHonorInfo_Params::IsInitialized() const {
  return true;
}

void GetGroupHonorInfo_Params::InternalSwap(GetGroupHonorInfo_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupHonorInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[82]);
}

// ===================================================================

class GetGroupHonorInfo::_Internal {
 public:
  static const ::cqhttp::GetGroupHonorInfo_Params& params(const GetGroupHonorInfo* msg);
};

const ::cqhttp::GetGroupHonorInfo_Params&
GetGroupHonorInfo::_Internal::params(const GetGroupHonorInfo* msg) {
  return *msg->_impl_.params_;
}
GetGroupHonorInfo::GetGroupHonorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupHonorInfo)
}
GetGroupHonorInfo::GetGroupHonorInfo(const GetGroupHonorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupHonorInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupHonorInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupHonorInfo)
}

inline void GetGroupHonorInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupHonorInfo::~GetGroupHonorInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupHonorInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupHonorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupHonorInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupHonorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupHonorInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupHonorInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupHonorInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupHonorInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupHonorInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupHonorInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupHonorInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupHonorInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupHonorInfo)
  return target;
}

size_t GetGroupHonorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupHonorInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupHonorInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupHonorInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupHonorInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupHonorInfo::GetClassData() const { return &_class_data_; }


void GetGroupHonorInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupHonorInfo*>(&to_msg);
  auto& from = static_cast<const GetGroupHonorInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupHonorInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupHonorInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupHonorInfo::CopyFrom(const GetGroupHonorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupHonorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupHonorInfo::IsInitialized() const {
  return true;
}

void GetGroupHonorInfo::InternalSwap(GetGroupHonorInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupHonorInfo, _impl_.action_)
      + sizeof(GetGroupHonorInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupHonorInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupHonorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[83]);
}

// ===================================================================

class GetGroupHonorInfoResp_Talkative::_Internal {
 public:
};

GetGroupHonorInfoResp_Talkative::GetGroupHonorInfoResp_Talkative(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupHonorInfoResp.Talkative)
}
GetGroupHonorInfoResp_Talkative::GetGroupHonorInfoResp_Talkative(const GetGroupHonorInfoResp_Talkative& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupHonorInfoResp_Talkative* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.avatar_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.day_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar().empty()) {
    _this->_impl_.avatar_.Set(from._internal_avatar(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.day_count_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.day_count_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupHonorInfoResp.Talkative)
}

inline void GetGroupHonorInfoResp_Talkative::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){}
    , decltype(_impl_.avatar_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , decltype(_impl_.day_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupHonorInfoResp_Talkative::~GetGroupHonorInfoResp_Talkative() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupHonorInfoResp.Talkative)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupHonorInfoResp_Talkative::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.avatar_.Destroy();
  _impl_.description_.Destroy();
}

void GetGroupHonorInfoResp_Talkative::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupHonorInfoResp_Talkative::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupHonorInfoResp.Talkative)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.avatar_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.day_count_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.day_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupHonorInfoResp_Talkative::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupHonorInfoResp.Talkative.nickname"));
        } else
          goto handle_unusual;
        continue;
      // string avatar = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_avatar();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupHonorInfoResp.Talkative.avatar"));
        } else
          goto handle_unusual;
        continue;
      // int32 day_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.day_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupHonorInfoResp.Talkative.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupHonorInfoResp_Talkative::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupHonorInfoResp.Talkative)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupHonorInfoResp.Talkative.nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string avatar = 3;
  if (!this->_internal_avatar().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar().data(), static_cast<int>(this->_internal_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupHonorInfoResp.Talkative.avatar");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_avatar(), target);
  }

  // int32 day_count = 4;
  if (this->_internal_day_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_day_count(), target);
  }

  // string description = 5;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupHonorInfoResp.Talkative.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupHonorInfoResp.Talkative)
  return target;
}

size_t GetGroupHonorInfoResp_Talkative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupHonorInfoResp.Talkative)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string avatar = 3;
  if (!this->_internal_avatar().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar());
  }

  // string description = 5;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  // int32 day_count = 4;
  if (this->_internal_day_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_day_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupHonorInfoResp_Talkative::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupHonorInfoResp_Talkative::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupHonorInfoResp_Talkative::GetClassData() const { return &_class_data_; }


void GetGroupHonorInfoResp_Talkative::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupHonorInfoResp_Talkative*>(&to_msg);
  auto& from = static_cast<const GetGroupHonorInfoResp_Talkative&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupHonorInfoResp.Talkative)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_avatar().empty()) {
    _this->_internal_set_avatar(from._internal_avatar());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_day_count() != 0) {
    _this->_internal_set_day_count(from._internal_day_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupHonorInfoResp_Talkative::CopyFrom(const GetGroupHonorInfoResp_Talkative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupHonorInfoResp.Talkative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupHonorInfoResp_Talkative::IsInitialized() const {
  return true;
}

void GetGroupHonorInfoResp_Talkative::InternalSwap(GetGroupHonorInfoResp_Talkative* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_, lhs_arena,
      &other->_impl_.avatar_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupHonorInfoResp_Talkative, _impl_.day_count_)
      + sizeof(GetGroupHonorInfoResp_Talkative::_impl_.day_count_)
      - PROTOBUF_FIELD_OFFSET(GetGroupHonorInfoResp_Talkative, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupHonorInfoResp_Talkative::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[84]);
}

// ===================================================================

class GetGroupHonorInfoResp::_Internal {
 public:
  static const ::cqhttp::GetGroupHonorInfoResp_Talkative& current_talkative(const GetGroupHonorInfoResp* msg);
};

const ::cqhttp::GetGroupHonorInfoResp_Talkative&
GetGroupHonorInfoResp::_Internal::current_talkative(const GetGroupHonorInfoResp* msg) {
  return *msg->_impl_.current_talkative_;
}
GetGroupHonorInfoResp::GetGroupHonorInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupHonorInfoResp)
}
GetGroupHonorInfoResp::GetGroupHonorInfoResp(const GetGroupHonorInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupHonorInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.talkative_list_){from._impl_.talkative_list_}
    , decltype(_impl_.performer_list_){from._impl_.performer_list_}
    , decltype(_impl_.legend_list_){from._impl_.legend_list_}
    , decltype(_impl_.strong_newbie_list_){from._impl_.strong_newbie_list_}
    , decltype(_impl_.emotion_list_){from._impl_.emotion_list_}
    , decltype(_impl_.current_talkative_){nullptr}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_talkative()) {
    _this->_impl_.current_talkative_ = new ::cqhttp::GetGroupHonorInfoResp_Talkative(*from._impl_.current_talkative_);
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupHonorInfoResp)
}

inline void GetGroupHonorInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.talkative_list_){arena}
    , decltype(_impl_.performer_list_){arena}
    , decltype(_impl_.legend_list_){arena}
    , decltype(_impl_.strong_newbie_list_){arena}
    , decltype(_impl_.emotion_list_){arena}
    , decltype(_impl_.current_talkative_){nullptr}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupHonorInfoResp::~GetGroupHonorInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupHonorInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupHonorInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.talkative_list_.~RepeatedPtrField();
  _impl_.performer_list_.~RepeatedPtrField();
  _impl_.legend_list_.~RepeatedPtrField();
  _impl_.strong_newbie_list_.~RepeatedPtrField();
  _impl_.emotion_list_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.current_talkative_;
}

void GetGroupHonorInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupHonorInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupHonorInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.talkative_list_.Clear();
  _impl_.performer_list_.Clear();
  _impl_.legend_list_.Clear();
  _impl_.strong_newbie_list_.Clear();
  _impl_.emotion_list_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.current_talkative_ != nullptr) {
    delete _impl_.current_talkative_;
  }
  _impl_.current_talkative_ = nullptr;
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupHonorInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupHonorInfoResp.Talkative current_talkative = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_talkative(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupHonorInfoResp.Talkative talkative_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_talkative_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupHonorInfoResp.Talkative performer_list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_performer_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupHonorInfoResp.Talkative legend_list = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_legend_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupHonorInfoResp.Talkative strong_newbie_list = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_strong_newbie_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupHonorInfoResp.Talkative emotion_list = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_emotion_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupHonorInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupHonorInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // .cqhttp.GetGroupHonorInfoResp.Talkative current_talkative = 2;
  if (this->_internal_has_current_talkative()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::current_talkative(this),
        _Internal::current_talkative(this).GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative talkative_list = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_talkative_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_talkative_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative performer_list = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_performer_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_performer_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative legend_list = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_legend_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_legend_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative strong_newbie_list = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_strong_newbie_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_strong_newbie_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative emotion_list = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_emotion_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_emotion_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupHonorInfoResp)
  return target;
}

size_t GetGroupHonorInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupHonorInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative talkative_list = 3;
  total_size += 1UL * this->_internal_talkative_list_size();
  for (const auto& msg : this->_impl_.talkative_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative performer_list = 4;
  total_size += 1UL * this->_internal_performer_list_size();
  for (const auto& msg : this->_impl_.performer_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative legend_list = 5;
  total_size += 1UL * this->_internal_legend_list_size();
  for (const auto& msg : this->_impl_.legend_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative strong_newbie_list = 6;
  total_size += 1UL * this->_internal_strong_newbie_list_size();
  for (const auto& msg : this->_impl_.strong_newbie_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.GetGroupHonorInfoResp.Talkative emotion_list = 7;
  total_size += 1UL * this->_internal_emotion_list_size();
  for (const auto& msg : this->_impl_.emotion_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cqhttp.GetGroupHonorInfoResp.Talkative current_talkative = 2;
  if (this->_internal_has_current_talkative()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.current_talkative_);
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupHonorInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupHonorInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupHonorInfoResp::GetClassData() const { return &_class_data_; }


void GetGroupHonorInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupHonorInfoResp*>(&to_msg);
  auto& from = static_cast<const GetGroupHonorInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupHonorInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.talkative_list_.MergeFrom(from._impl_.talkative_list_);
  _this->_impl_.performer_list_.MergeFrom(from._impl_.performer_list_);
  _this->_impl_.legend_list_.MergeFrom(from._impl_.legend_list_);
  _this->_impl_.strong_newbie_list_.MergeFrom(from._impl_.strong_newbie_list_);
  _this->_impl_.emotion_list_.MergeFrom(from._impl_.emotion_list_);
  if (from._internal_has_current_talkative()) {
    _this->_internal_mutable_current_talkative()->::cqhttp::GetGroupHonorInfoResp_Talkative::MergeFrom(
        from._internal_current_talkative());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupHonorInfoResp::CopyFrom(const GetGroupHonorInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupHonorInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupHonorInfoResp::IsInitialized() const {
  return true;
}

void GetGroupHonorInfoResp::InternalSwap(GetGroupHonorInfoResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.talkative_list_.InternalSwap(&other->_impl_.talkative_list_);
  _impl_.performer_list_.InternalSwap(&other->_impl_.performer_list_);
  _impl_.legend_list_.InternalSwap(&other->_impl_.legend_list_);
  _impl_.strong_newbie_list_.InternalSwap(&other->_impl_.strong_newbie_list_);
  _impl_.emotion_list_.InternalSwap(&other->_impl_.emotion_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupHonorInfoResp, _impl_.group_id_)
      + sizeof(GetGroupHonorInfoResp::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(GetGroupHonorInfoResp, _impl_.current_talkative_)>(
          reinterpret_cast<char*>(&_impl_.current_talkative_),
          reinterpret_cast<char*>(&other->_impl_.current_talkative_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupHonorInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[85]);
}

// ===================================================================

class GetCoolies_Params::_Internal {
 public:
};

GetCoolies_Params::GetCoolies_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCoolies.Params)
}
GetCoolies_Params::GetCoolies_Params(const GetCoolies_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCoolies_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    _this->_impl_.domain_.Set(from._internal_domain(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCoolies.Params)
}

inline void GetCoolies_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCoolies_Params::~GetCoolies_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCoolies.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCoolies_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.domain_.Destroy();
}

void GetCoolies_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCoolies_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCoolies.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.domain_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCoolies_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCoolies.Params.domain"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCoolies_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCoolies.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (!this->_internal_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCoolies.Params.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCoolies.Params)
  return target;
}

size_t GetCoolies_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCoolies.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (!this->_internal_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCoolies_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCoolies_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCoolies_Params::GetClassData() const { return &_class_data_; }


void GetCoolies_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCoolies_Params*>(&to_msg);
  auto& from = static_cast<const GetCoolies_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCoolies.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCoolies_Params::CopyFrom(const GetCoolies_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCoolies.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCoolies_Params::IsInitialized() const {
  return true;
}

void GetCoolies_Params::InternalSwap(GetCoolies_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.domain_, lhs_arena,
      &other->_impl_.domain_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCoolies_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[86]);
}

// ===================================================================

class GetCoolies::_Internal {
 public:
  static const ::cqhttp::GetCoolies_Params& params(const GetCoolies* msg);
};

const ::cqhttp::GetCoolies_Params&
GetCoolies::_Internal::params(const GetCoolies* msg) {
  return *msg->_impl_.params_;
}
GetCoolies::GetCoolies(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCoolies)
}
GetCoolies::GetCoolies(const GetCoolies& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCoolies* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetCoolies_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCoolies)
}

inline void GetCoolies::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCoolies::~GetCoolies() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCoolies)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCoolies::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetCoolies::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCoolies::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCoolies)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCoolies::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetCoolies.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCoolies.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCoolies::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCoolies)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetCoolies.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCoolies.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCoolies)
  return target;
}

size_t GetCoolies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCoolies)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetCoolies.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCoolies::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCoolies::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCoolies::GetClassData() const { return &_class_data_; }


void GetCoolies::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCoolies*>(&to_msg);
  auto& from = static_cast<const GetCoolies&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCoolies)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetCoolies_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCoolies::CopyFrom(const GetCoolies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCoolies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCoolies::IsInitialized() const {
  return true;
}

void GetCoolies::InternalSwap(GetCoolies* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCoolies, _impl_.action_)
      + sizeof(GetCoolies::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetCoolies, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCoolies::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[87]);
}

// ===================================================================

class GetCooliesResp::_Internal {
 public:
};

GetCooliesResp::GetCooliesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCooliesResp)
}
GetCooliesResp::GetCooliesResp(const GetCooliesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCooliesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cookies_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cookies_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cookies_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cookies().empty()) {
    _this->_impl_.cookies_.Set(from._internal_cookies(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCooliesResp)
}

inline void GetCooliesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cookies_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cookies_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cookies_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCooliesResp::~GetCooliesResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCooliesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCooliesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cookies_.Destroy();
}

void GetCooliesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCooliesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCooliesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cookies_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCooliesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cookies = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cookies();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCooliesResp.cookies"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCooliesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCooliesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cookies = 1;
  if (!this->_internal_cookies().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cookies().data(), static_cast<int>(this->_internal_cookies().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCooliesResp.cookies");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cookies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCooliesResp)
  return target;
}

size_t GetCooliesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCooliesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cookies = 1;
  if (!this->_internal_cookies().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cookies());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCooliesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCooliesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCooliesResp::GetClassData() const { return &_class_data_; }


void GetCooliesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCooliesResp*>(&to_msg);
  auto& from = static_cast<const GetCooliesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCooliesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cookies().empty()) {
    _this->_internal_set_cookies(from._internal_cookies());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCooliesResp::CopyFrom(const GetCooliesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCooliesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCooliesResp::IsInitialized() const {
  return true;
}

void GetCooliesResp::InternalSwap(GetCooliesResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cookies_, lhs_arena,
      &other->_impl_.cookies_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCooliesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[88]);
}

// ===================================================================

class GetCsrfToken::_Internal {
 public:
};

GetCsrfToken::GetCsrfToken(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCsrfToken)
}
GetCsrfToken::GetCsrfToken(const GetCsrfToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCsrfToken* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCsrfToken)
}

inline void GetCsrfToken::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCsrfToken::~GetCsrfToken() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCsrfToken)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCsrfToken::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void GetCsrfToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCsrfToken::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCsrfToken)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCsrfToken::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCsrfToken.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCsrfToken::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCsrfToken)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCsrfToken.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCsrfToken)
  return target;
}

size_t GetCsrfToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCsrfToken)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCsrfToken::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCsrfToken::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCsrfToken::GetClassData() const { return &_class_data_; }


void GetCsrfToken::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCsrfToken*>(&to_msg);
  auto& from = static_cast<const GetCsrfToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCsrfToken)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCsrfToken::CopyFrom(const GetCsrfToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCsrfToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCsrfToken::IsInitialized() const {
  return true;
}

void GetCsrfToken::InternalSwap(GetCsrfToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCsrfToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[89]);
}

// ===================================================================

class GetCsrfTokenResp::_Internal {
 public:
};

GetCsrfTokenResp::GetCsrfTokenResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCsrfTokenResp)
}
GetCsrfTokenResp::GetCsrfTokenResp(const GetCsrfTokenResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCsrfTokenResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.token_ = from._impl_.token_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCsrfTokenResp)
}

inline void GetCsrfTokenResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetCsrfTokenResp::~GetCsrfTokenResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCsrfTokenResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCsrfTokenResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCsrfTokenResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCsrfTokenResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCsrfTokenResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCsrfTokenResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCsrfTokenResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCsrfTokenResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 token = 1;
  if (this->_internal_token() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCsrfTokenResp)
  return target;
}

size_t GetCsrfTokenResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCsrfTokenResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 token = 1;
  if (this->_internal_token() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCsrfTokenResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCsrfTokenResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCsrfTokenResp::GetClassData() const { return &_class_data_; }


void GetCsrfTokenResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCsrfTokenResp*>(&to_msg);
  auto& from = static_cast<const GetCsrfTokenResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCsrfTokenResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_token() != 0) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCsrfTokenResp::CopyFrom(const GetCsrfTokenResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCsrfTokenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCsrfTokenResp::IsInitialized() const {
  return true;
}

void GetCsrfTokenResp::InternalSwap(GetCsrfTokenResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.token_, other->_impl_.token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCsrfTokenResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[90]);
}

// ===================================================================

class GetCredentials_Params::_Internal {
 public:
};

GetCredentials_Params::GetCredentials_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCredentials.Params)
}
GetCredentials_Params::GetCredentials_Params(const GetCredentials_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCredentials_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    _this->_impl_.domain_.Set(from._internal_domain(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCredentials.Params)
}

inline void GetCredentials_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCredentials_Params::~GetCredentials_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCredentials.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCredentials_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.domain_.Destroy();
}

void GetCredentials_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCredentials_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCredentials.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.domain_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentials_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string domain = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_domain();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCredentials.Params.domain"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCredentials_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCredentials.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (!this->_internal_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCredentials.Params.domain");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_domain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCredentials.Params)
  return target;
}

size_t GetCredentials_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCredentials.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string domain = 1;
  if (!this->_internal_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCredentials_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCredentials_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCredentials_Params::GetClassData() const { return &_class_data_; }


void GetCredentials_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCredentials_Params*>(&to_msg);
  auto& from = static_cast<const GetCredentials_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCredentials.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCredentials_Params::CopyFrom(const GetCredentials_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCredentials.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentials_Params::IsInitialized() const {
  return true;
}

void GetCredentials_Params::InternalSwap(GetCredentials_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.domain_, lhs_arena,
      &other->_impl_.domain_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentials_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[91]);
}

// ===================================================================

class GetCredentials::_Internal {
 public:
  static const ::cqhttp::GetCredentials_Params& params(const GetCredentials* msg);
};

const ::cqhttp::GetCredentials_Params&
GetCredentials::_Internal::params(const GetCredentials* msg) {
  return *msg->_impl_.params_;
}
GetCredentials::GetCredentials(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCredentials)
}
GetCredentials::GetCredentials(const GetCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCredentials* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetCredentials_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCredentials)
}

inline void GetCredentials::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCredentials::~GetCredentials() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCredentials)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCredentials::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetCredentials::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCredentials)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentials::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetCredentials.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCredentials.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCredentials::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCredentials)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetCredentials.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCredentials.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCredentials)
  return target;
}

size_t GetCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCredentials)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetCredentials.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCredentials::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCredentials::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCredentials::GetClassData() const { return &_class_data_; }


void GetCredentials::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCredentials*>(&to_msg);
  auto& from = static_cast<const GetCredentials&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCredentials)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetCredentials_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCredentials::CopyFrom(const GetCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentials::IsInitialized() const {
  return true;
}

void GetCredentials::InternalSwap(GetCredentials* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCredentials, _impl_.action_)
      + sizeof(GetCredentials::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetCredentials, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentials::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[92]);
}

// ===================================================================

class GetCredentialsResp::_Internal {
 public:
};

GetCredentialsResp::GetCredentialsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetCredentialsResp)
}
GetCredentialsResp::GetCredentialsResp(const GetCredentialsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCredentialsResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cookies_){}
    , decltype(_impl_.csrf_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cookies_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cookies_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cookies().empty()) {
    _this->_impl_.cookies_.Set(from._internal_cookies(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.csrf_token_ = from._impl_.csrf_token_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetCredentialsResp)
}

inline void GetCredentialsResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cookies_){}
    , decltype(_impl_.csrf_token_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cookies_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cookies_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCredentialsResp::~GetCredentialsResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetCredentialsResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCredentialsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cookies_.Destroy();
}

void GetCredentialsResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCredentialsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetCredentialsResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cookies_.ClearToEmpty();
  _impl_.csrf_token_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCredentialsResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cookies = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cookies();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetCredentialsResp.cookies"));
        } else
          goto handle_unusual;
        continue;
      // int32 csrf_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.csrf_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCredentialsResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetCredentialsResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cookies = 1;
  if (!this->_internal_cookies().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cookies().data(), static_cast<int>(this->_internal_cookies().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetCredentialsResp.cookies");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cookies(), target);
  }

  // int32 csrf_token = 2;
  if (this->_internal_csrf_token() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_csrf_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetCredentialsResp)
  return target;
}

size_t GetCredentialsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetCredentialsResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cookies = 1;
  if (!this->_internal_cookies().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cookies());
  }

  // int32 csrf_token = 2;
  if (this->_internal_csrf_token() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_csrf_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCredentialsResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCredentialsResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCredentialsResp::GetClassData() const { return &_class_data_; }


void GetCredentialsResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCredentialsResp*>(&to_msg);
  auto& from = static_cast<const GetCredentialsResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetCredentialsResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cookies().empty()) {
    _this->_internal_set_cookies(from._internal_cookies());
  }
  if (from._internal_csrf_token() != 0) {
    _this->_internal_set_csrf_token(from._internal_csrf_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCredentialsResp::CopyFrom(const GetCredentialsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetCredentialsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCredentialsResp::IsInitialized() const {
  return true;
}

void GetCredentialsResp::InternalSwap(GetCredentialsResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cookies_, lhs_arena,
      &other->_impl_.cookies_, rhs_arena
  );
  swap(_impl_.csrf_token_, other->_impl_.csrf_token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCredentialsResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[93]);
}

// ===================================================================

class GetRecord_Params::_Internal {
 public:
};

GetRecord_Params::GetRecord_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetRecord.Params)
}
GetRecord_Params::GetRecord_Params(const GetRecord_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRecord_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.out_format_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  _impl_.out_format_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.out_format_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_format().empty()) {
    _this->_impl_.out_format_.Set(from._internal_out_format(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetRecord.Params)
}

inline void GetRecord_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.out_format_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_format_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.out_format_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRecord_Params::~GetRecord_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetRecord.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRecord_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
  _impl_.out_format_.Destroy();
}

void GetRecord_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRecord_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetRecord.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _impl_.out_format_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecord_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetRecord.Params.file"));
        } else
          goto handle_unusual;
        continue;
      // string out_format = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_out_format();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetRecord.Params.out_format"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRecord_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetRecord.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetRecord.Params.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // string out_format = 2;
  if (!this->_internal_out_format().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_out_format().data(), static_cast<int>(this->_internal_out_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetRecord.Params.out_format");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_out_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetRecord.Params)
  return target;
}

size_t GetRecord_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetRecord.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // string out_format = 2;
  if (!this->_internal_out_format().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_out_format());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRecord_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRecord_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRecord_Params::GetClassData() const { return &_class_data_; }


void GetRecord_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRecord_Params*>(&to_msg);
  auto& from = static_cast<const GetRecord_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetRecord.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (!from._internal_out_format().empty()) {
    _this->_internal_set_out_format(from._internal_out_format());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecord_Params::CopyFrom(const GetRecord_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetRecord.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecord_Params::IsInitialized() const {
  return true;
}

void GetRecord_Params::InternalSwap(GetRecord_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.out_format_, lhs_arena,
      &other->_impl_.out_format_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecord_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[94]);
}

// ===================================================================

class GetRecord::_Internal {
 public:
  static const ::cqhttp::GetRecord_Params& params(const GetRecord* msg);
};

const ::cqhttp::GetRecord_Params&
GetRecord::_Internal::params(const GetRecord* msg) {
  return *msg->_impl_.params_;
}
GetRecord::GetRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetRecord)
}
GetRecord::GetRecord(const GetRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRecord* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetRecord_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetRecord)
}

inline void GetRecord::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRecord::~GetRecord() {
  // @@protoc_insertion_point(destructor:cqhttp.GetRecord)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetRecord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecord::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetRecord.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetRecord.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetRecord.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetRecord.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetRecord)
  return target;
}

size_t GetRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetRecord.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRecord::GetClassData() const { return &_class_data_; }


void GetRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRecord*>(&to_msg);
  auto& from = static_cast<const GetRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetRecord)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetRecord_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecord::CopyFrom(const GetRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecord::IsInitialized() const {
  return true;
}

void GetRecord::InternalSwap(GetRecord* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRecord, _impl_.action_)
      + sizeof(GetRecord::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetRecord, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[95]);
}

// ===================================================================

class GetRecordResp::_Internal {
 public:
};

GetRecordResp::GetRecordResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetRecordResp)
}
GetRecordResp::GetRecordResp(const GetRecordResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRecordResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetRecordResp)
}

inline void GetRecordResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRecordResp::~GetRecordResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetRecordResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRecordResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
}

void GetRecordResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRecordResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetRecordResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetRecordResp.file"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRecordResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetRecordResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetRecordResp.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetRecordResp)
  return target;
}

size_t GetRecordResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetRecordResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRecordResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRecordResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRecordResp::GetClassData() const { return &_class_data_; }


void GetRecordResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRecordResp*>(&to_msg);
  auto& from = static_cast<const GetRecordResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetRecordResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecordResp::CopyFrom(const GetRecordResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetRecordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordResp::IsInitialized() const {
  return true;
}

void GetRecordResp::InternalSwap(GetRecordResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[96]);
}

// ===================================================================

class CanSendImage::_Internal {
 public:
};

CanSendImage::CanSendImage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CanSendImage)
}
CanSendImage::CanSendImage(const CanSendImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CanSendImage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CanSendImage)
}

inline void CanSendImage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CanSendImage::~CanSendImage() {
  // @@protoc_insertion_point(destructor:cqhttp.CanSendImage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CanSendImage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void CanSendImage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CanSendImage::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CanSendImage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CanSendImage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CanSendImage.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CanSendImage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CanSendImage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CanSendImage.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CanSendImage)
  return target;
}

size_t CanSendImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CanSendImage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CanSendImage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CanSendImage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CanSendImage::GetClassData() const { return &_class_data_; }


void CanSendImage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CanSendImage*>(&to_msg);
  auto& from = static_cast<const CanSendImage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CanSendImage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CanSendImage::CopyFrom(const CanSendImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CanSendImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanSendImage::IsInitialized() const {
  return true;
}

void CanSendImage::InternalSwap(CanSendImage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CanSendImage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[97]);
}

// ===================================================================

class CanSendImageResp::_Internal {
 public:
};

CanSendImageResp::CanSendImageResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CanSendImageResp)
}
CanSendImageResp::CanSendImageResp(const CanSendImageResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CanSendImageResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.yes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.yes_ = from._impl_.yes_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CanSendImageResp)
}

inline void CanSendImageResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.yes_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CanSendImageResp::~CanSendImageResp() {
  // @@protoc_insertion_point(destructor:cqhttp.CanSendImageResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CanSendImageResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CanSendImageResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CanSendImageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CanSendImageResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.yes_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CanSendImageResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool yes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.yes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CanSendImageResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CanSendImageResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool yes = 1;
  if (this->_internal_yes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_yes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CanSendImageResp)
  return target;
}

size_t CanSendImageResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CanSendImageResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool yes = 1;
  if (this->_internal_yes() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CanSendImageResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CanSendImageResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CanSendImageResp::GetClassData() const { return &_class_data_; }


void CanSendImageResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CanSendImageResp*>(&to_msg);
  auto& from = static_cast<const CanSendImageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CanSendImageResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_yes() != 0) {
    _this->_internal_set_yes(from._internal_yes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CanSendImageResp::CopyFrom(const CanSendImageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CanSendImageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanSendImageResp::IsInitialized() const {
  return true;
}

void CanSendImageResp::InternalSwap(CanSendImageResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.yes_, other->_impl_.yes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CanSendImageResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[98]);
}

// ===================================================================

class CanSendRecord::_Internal {
 public:
};

CanSendRecord::CanSendRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CanSendRecord)
}
CanSendRecord::CanSendRecord(const CanSendRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CanSendRecord* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CanSendRecord)
}

inline void CanSendRecord::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CanSendRecord::~CanSendRecord() {
  // @@protoc_insertion_point(destructor:cqhttp.CanSendRecord)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CanSendRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void CanSendRecord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CanSendRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CanSendRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CanSendRecord::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CanSendRecord.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CanSendRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CanSendRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CanSendRecord.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CanSendRecord)
  return target;
}

size_t CanSendRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CanSendRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CanSendRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CanSendRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CanSendRecord::GetClassData() const { return &_class_data_; }


void CanSendRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CanSendRecord*>(&to_msg);
  auto& from = static_cast<const CanSendRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CanSendRecord)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CanSendRecord::CopyFrom(const CanSendRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CanSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanSendRecord::IsInitialized() const {
  return true;
}

void CanSendRecord::InternalSwap(CanSendRecord* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CanSendRecord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[99]);
}

// ===================================================================

class CanSendRecordResp::_Internal {
 public:
};

CanSendRecordResp::CanSendRecordResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CanSendRecordResp)
}
CanSendRecordResp::CanSendRecordResp(const CanSendRecordResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CanSendRecordResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.yes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.yes_ = from._impl_.yes_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CanSendRecordResp)
}

inline void CanSendRecordResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.yes_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CanSendRecordResp::~CanSendRecordResp() {
  // @@protoc_insertion_point(destructor:cqhttp.CanSendRecordResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CanSendRecordResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CanSendRecordResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CanSendRecordResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CanSendRecordResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.yes_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CanSendRecordResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool yes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.yes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CanSendRecordResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CanSendRecordResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool yes = 1;
  if (this->_internal_yes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_yes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CanSendRecordResp)
  return target;
}

size_t CanSendRecordResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CanSendRecordResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool yes = 1;
  if (this->_internal_yes() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CanSendRecordResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CanSendRecordResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CanSendRecordResp::GetClassData() const { return &_class_data_; }


void CanSendRecordResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CanSendRecordResp*>(&to_msg);
  auto& from = static_cast<const CanSendRecordResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CanSendRecordResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_yes() != 0) {
    _this->_internal_set_yes(from._internal_yes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CanSendRecordResp::CopyFrom(const CanSendRecordResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CanSendRecordResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanSendRecordResp::IsInitialized() const {
  return true;
}

void CanSendRecordResp::InternalSwap(CanSendRecordResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.yes_, other->_impl_.yes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CanSendRecordResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[100]);
}

// ===================================================================

class GetVersionInfo::_Internal {
 public:
};

GetVersionInfo::GetVersionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetVersionInfo)
}
GetVersionInfo::GetVersionInfo(const GetVersionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVersionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetVersionInfo)
}

inline void GetVersionInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVersionInfo::~GetVersionInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetVersionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVersionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void GetVersionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetVersionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVersionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVersionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetVersionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfo.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetVersionInfo)
  return target;
}

size_t GetVersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetVersionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVersionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVersionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVersionInfo::GetClassData() const { return &_class_data_; }


void GetVersionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVersionInfo*>(&to_msg);
  auto& from = static_cast<const GetVersionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetVersionInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVersionInfo::CopyFrom(const GetVersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetVersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionInfo::IsInitialized() const {
  return true;
}

void GetVersionInfo::InternalSwap(GetVersionInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVersionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[101]);
}

// ===================================================================

class GetVersionInfoResp::_Internal {
 public:
};

GetVersionInfoResp::GetVersionInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetVersionInfoResp)
}
GetVersionInfoResp::GetVersionInfoResp(const GetVersionInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVersionInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.app_name_){}
    , decltype(_impl_.app_version_){}
    , decltype(_impl_.app_full_name_){}
    , decltype(_impl_.protocol_version_){}
    , decltype(_impl_.coolq_edition_){}
    , decltype(_impl_.coolq_directory_){}
    , decltype(_impl_.plugin_version_){}
    , decltype(_impl_.plugin_build_configuration_){}
    , decltype(_impl_.runtime_version_){}
    , decltype(_impl_.runtime_os_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.cqhttp_){}
    , decltype(_impl_.plugin_build_number_){}
    , decltype(_impl_.protocol_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_name().empty()) {
    _this->_impl_.app_name_.Set(from._internal_app_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.app_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_version().empty()) {
    _this->_impl_.app_version_.Set(from._internal_app_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.app_full_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_full_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_full_name().empty()) {
    _this->_impl_.app_full_name_.Set(from._internal_app_full_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.protocol_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_protocol_version().empty()) {
    _this->_impl_.protocol_version_.Set(from._internal_protocol_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.coolq_edition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coolq_edition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_coolq_edition().empty()) {
    _this->_impl_.coolq_edition_.Set(from._internal_coolq_edition(), 
      _this->GetArenaForAllocation());
  }
  _impl_.coolq_directory_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coolq_directory_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_coolq_directory().empty()) {
    _this->_impl_.coolq_directory_.Set(from._internal_coolq_directory(), 
      _this->GetArenaForAllocation());
  }
  _impl_.plugin_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.plugin_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plugin_version().empty()) {
    _this->_impl_.plugin_version_.Set(from._internal_plugin_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.plugin_build_configuration_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.plugin_build_configuration_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plugin_build_configuration().empty()) {
    _this->_impl_.plugin_build_configuration_.Set(from._internal_plugin_build_configuration(), 
      _this->GetArenaForAllocation());
  }
  _impl_.runtime_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.runtime_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_runtime_version().empty()) {
    _this->_impl_.runtime_version_.Set(from._internal_runtime_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.runtime_os_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.runtime_os_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_runtime_os().empty()) {
    _this->_impl_.runtime_os_.Set(from._internal_runtime_os(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.cqhttp_, &from._impl_.cqhttp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.protocol_) -
    reinterpret_cast<char*>(&_impl_.cqhttp_)) + sizeof(_impl_.protocol_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetVersionInfoResp)
}

inline void GetVersionInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.app_name_){}
    , decltype(_impl_.app_version_){}
    , decltype(_impl_.app_full_name_){}
    , decltype(_impl_.protocol_version_){}
    , decltype(_impl_.coolq_edition_){}
    , decltype(_impl_.coolq_directory_){}
    , decltype(_impl_.plugin_version_){}
    , decltype(_impl_.plugin_build_configuration_){}
    , decltype(_impl_.runtime_version_){}
    , decltype(_impl_.runtime_os_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.cqhttp_){false}
    , decltype(_impl_.plugin_build_number_){0}
    , decltype(_impl_.protocol_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.app_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_full_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_full_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.protocol_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.coolq_edition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coolq_edition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.coolq_directory_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coolq_directory_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.plugin_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.plugin_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.plugin_build_configuration_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.plugin_build_configuration_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.runtime_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.runtime_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.runtime_os_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.runtime_os_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVersionInfoResp::~GetVersionInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetVersionInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVersionInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_name_.Destroy();
  _impl_.app_version_.Destroy();
  _impl_.app_full_name_.Destroy();
  _impl_.protocol_version_.Destroy();
  _impl_.coolq_edition_.Destroy();
  _impl_.coolq_directory_.Destroy();
  _impl_.plugin_version_.Destroy();
  _impl_.plugin_build_configuration_.Destroy();
  _impl_.runtime_version_.Destroy();
  _impl_.runtime_os_.Destroy();
  _impl_.version_.Destroy();
}

void GetVersionInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVersionInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetVersionInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_name_.ClearToEmpty();
  _impl_.app_version_.ClearToEmpty();
  _impl_.app_full_name_.ClearToEmpty();
  _impl_.protocol_version_.ClearToEmpty();
  _impl_.coolq_edition_.ClearToEmpty();
  _impl_.coolq_directory_.ClearToEmpty();
  _impl_.plugin_version_.ClearToEmpty();
  _impl_.plugin_build_configuration_.ClearToEmpty();
  _impl_.runtime_version_.ClearToEmpty();
  _impl_.runtime_os_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.cqhttp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_) -
      reinterpret_cast<char*>(&_impl_.cqhttp_)) + sizeof(_impl_.protocol_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVersionInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.app_name"));
        } else
          goto handle_unusual;
        continue;
      // string app_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.app_version"));
        } else
          goto handle_unusual;
        continue;
      // string app_full_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_app_full_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.app_full_name"));
        } else
          goto handle_unusual;
        continue;
      // string protocol_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_protocol_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.protocol_version"));
        } else
          goto handle_unusual;
        continue;
      // string coolq_edition = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_coolq_edition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.coolq_edition"));
        } else
          goto handle_unusual;
        continue;
      // string coolq_directory = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_coolq_directory();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.coolq_directory"));
        } else
          goto handle_unusual;
        continue;
      // bool cqhttp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.cqhttp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plugin_version = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_plugin_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.plugin_version"));
        } else
          goto handle_unusual;
        continue;
      // int32 plugin_build_number = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.plugin_build_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plugin_build_configuration = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_plugin_build_configuration();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.plugin_build_configuration"));
        } else
          goto handle_unusual;
        continue;
      // string runtime_version = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_runtime_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.runtime_version"));
        } else
          goto handle_unusual;
        continue;
      // string runtime_os = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_runtime_os();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.runtime_os"));
        } else
          goto handle_unusual;
        continue;
      // string version = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetVersionInfoResp.version"));
        } else
          goto handle_unusual;
        continue;
      // int32 protocol = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.protocol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVersionInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetVersionInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (!this->_internal_app_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_name().data(), static_cast<int>(this->_internal_app_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.app_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_name(), target);
  }

  // string app_version = 2;
  if (!this->_internal_app_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_version().data(), static_cast<int>(this->_internal_app_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.app_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_version(), target);
  }

  // string app_full_name = 3;
  if (!this->_internal_app_full_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_full_name().data(), static_cast<int>(this->_internal_app_full_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.app_full_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_app_full_name(), target);
  }

  // string protocol_version = 4;
  if (!this->_internal_protocol_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol_version().data(), static_cast<int>(this->_internal_protocol_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.protocol_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_protocol_version(), target);
  }

  // string coolq_edition = 5;
  if (!this->_internal_coolq_edition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coolq_edition().data(), static_cast<int>(this->_internal_coolq_edition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.coolq_edition");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_coolq_edition(), target);
  }

  // string coolq_directory = 6;
  if (!this->_internal_coolq_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coolq_directory().data(), static_cast<int>(this->_internal_coolq_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.coolq_directory");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_coolq_directory(), target);
  }

  // bool cqhttp = 7;
  if (this->_internal_cqhttp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_cqhttp(), target);
  }

  // string plugin_version = 8;
  if (!this->_internal_plugin_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plugin_version().data(), static_cast<int>(this->_internal_plugin_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.plugin_version");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_plugin_version(), target);
  }

  // int32 plugin_build_number = 9;
  if (this->_internal_plugin_build_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_plugin_build_number(), target);
  }

  // string plugin_build_configuration = 10;
  if (!this->_internal_plugin_build_configuration().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plugin_build_configuration().data(), static_cast<int>(this->_internal_plugin_build_configuration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.plugin_build_configuration");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_plugin_build_configuration(), target);
  }

  // string runtime_version = 11;
  if (!this->_internal_runtime_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_version().data(), static_cast<int>(this->_internal_runtime_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.runtime_version");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_runtime_version(), target);
  }

  // string runtime_os = 12;
  if (!this->_internal_runtime_os().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_os().data(), static_cast<int>(this->_internal_runtime_os().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.runtime_os");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_runtime_os(), target);
  }

  // string version = 13;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetVersionInfoResp.version");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_version(), target);
  }

  // int32 protocol = 14;
  if (this->_internal_protocol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_protocol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetVersionInfoResp)
  return target;
}

size_t GetVersionInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetVersionInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_name = 1;
  if (!this->_internal_app_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_name());
  }

  // string app_version = 2;
  if (!this->_internal_app_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_version());
  }

  // string app_full_name = 3;
  if (!this->_internal_app_full_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_full_name());
  }

  // string protocol_version = 4;
  if (!this->_internal_protocol_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_protocol_version());
  }

  // string coolq_edition = 5;
  if (!this->_internal_coolq_edition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coolq_edition());
  }

  // string coolq_directory = 6;
  if (!this->_internal_coolq_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coolq_directory());
  }

  // string plugin_version = 8;
  if (!this->_internal_plugin_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plugin_version());
  }

  // string plugin_build_configuration = 10;
  if (!this->_internal_plugin_build_configuration().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plugin_build_configuration());
  }

  // string runtime_version = 11;
  if (!this->_internal_runtime_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_version());
  }

  // string runtime_os = 12;
  if (!this->_internal_runtime_os().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_os());
  }

  // string version = 13;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // bool cqhttp = 7;
  if (this->_internal_cqhttp() != 0) {
    total_size += 1 + 1;
  }

  // int32 plugin_build_number = 9;
  if (this->_internal_plugin_build_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_plugin_build_number());
  }

  // int32 protocol = 14;
  if (this->_internal_protocol() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_protocol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVersionInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVersionInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVersionInfoResp::GetClassData() const { return &_class_data_; }


void GetVersionInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVersionInfoResp*>(&to_msg);
  auto& from = static_cast<const GetVersionInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetVersionInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_name().empty()) {
    _this->_internal_set_app_name(from._internal_app_name());
  }
  if (!from._internal_app_version().empty()) {
    _this->_internal_set_app_version(from._internal_app_version());
  }
  if (!from._internal_app_full_name().empty()) {
    _this->_internal_set_app_full_name(from._internal_app_full_name());
  }
  if (!from._internal_protocol_version().empty()) {
    _this->_internal_set_protocol_version(from._internal_protocol_version());
  }
  if (!from._internal_coolq_edition().empty()) {
    _this->_internal_set_coolq_edition(from._internal_coolq_edition());
  }
  if (!from._internal_coolq_directory().empty()) {
    _this->_internal_set_coolq_directory(from._internal_coolq_directory());
  }
  if (!from._internal_plugin_version().empty()) {
    _this->_internal_set_plugin_version(from._internal_plugin_version());
  }
  if (!from._internal_plugin_build_configuration().empty()) {
    _this->_internal_set_plugin_build_configuration(from._internal_plugin_build_configuration());
  }
  if (!from._internal_runtime_version().empty()) {
    _this->_internal_set_runtime_version(from._internal_runtime_version());
  }
  if (!from._internal_runtime_os().empty()) {
    _this->_internal_set_runtime_os(from._internal_runtime_os());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_cqhttp() != 0) {
    _this->_internal_set_cqhttp(from._internal_cqhttp());
  }
  if (from._internal_plugin_build_number() != 0) {
    _this->_internal_set_plugin_build_number(from._internal_plugin_build_number());
  }
  if (from._internal_protocol() != 0) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVersionInfoResp::CopyFrom(const GetVersionInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetVersionInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionInfoResp::IsInitialized() const {
  return true;
}

void GetVersionInfoResp::InternalSwap(GetVersionInfoResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.app_name_, lhs_arena,
      &other->_impl_.app_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.app_version_, lhs_arena,
      &other->_impl_.app_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.app_full_name_, lhs_arena,
      &other->_impl_.app_full_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.protocol_version_, lhs_arena,
      &other->_impl_.protocol_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.coolq_edition_, lhs_arena,
      &other->_impl_.coolq_edition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.coolq_directory_, lhs_arena,
      &other->_impl_.coolq_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.plugin_version_, lhs_arena,
      &other->_impl_.plugin_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.plugin_build_configuration_, lhs_arena,
      &other->_impl_.plugin_build_configuration_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.runtime_version_, lhs_arena,
      &other->_impl_.runtime_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.runtime_os_, lhs_arena,
      &other->_impl_.runtime_os_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetVersionInfoResp, _impl_.protocol_)
      + sizeof(GetVersionInfoResp::_impl_.protocol_)
      - PROTOBUF_FIELD_OFFSET(GetVersionInfoResp, _impl_.cqhttp_)>(
          reinterpret_cast<char*>(&_impl_.cqhttp_),
          reinterpret_cast<char*>(&other->_impl_.cqhttp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVersionInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[102]);
}

// ===================================================================

class SetRestart_Params::_Internal {
 public:
};

SetRestart_Params::SetRestart_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetRestart.Params)
}
SetRestart_Params::SetRestart_Params(const SetRestart_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetRestart_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delay_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.delay_ = from._impl_.delay_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetRestart.Params)
}

inline void SetRestart_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.delay_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetRestart_Params::~SetRestart_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetRestart.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetRestart_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetRestart_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetRestart_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetRestart.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delay_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRestart_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 delay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.delay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetRestart_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetRestart.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 delay = 1;
  if (this->_internal_delay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_delay(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetRestart.Params)
  return target;
}

size_t SetRestart_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetRestart.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 delay = 1;
  if (this->_internal_delay() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delay());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRestart_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetRestart_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRestart_Params::GetClassData() const { return &_class_data_; }


void SetRestart_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetRestart_Params*>(&to_msg);
  auto& from = static_cast<const SetRestart_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetRestart.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_delay() != 0) {
    _this->_internal_set_delay(from._internal_delay());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetRestart_Params::CopyFrom(const SetRestart_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetRestart.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRestart_Params::IsInitialized() const {
  return true;
}

void SetRestart_Params::InternalSwap(SetRestart_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.delay_, other->_impl_.delay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRestart_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[103]);
}

// ===================================================================

class SetRestart::_Internal {
 public:
  static const ::cqhttp::SetRestart_Params& params(const SetRestart* msg);
};

const ::cqhttp::SetRestart_Params&
SetRestart::_Internal::params(const SetRestart* msg) {
  return *msg->_impl_.params_;
}
SetRestart::SetRestart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetRestart)
}
SetRestart::SetRestart(const SetRestart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetRestart* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetRestart_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetRestart)
}

inline void SetRestart::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetRestart::~SetRestart() {
  // @@protoc_insertion_point(destructor:cqhttp.SetRestart)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetRestart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetRestart::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetRestart::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetRestart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRestart::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetRestart.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetRestart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetRestart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetRestart.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetRestart)
  return target;
}

size_t SetRestart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetRestart)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetRestart.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRestart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetRestart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRestart::GetClassData() const { return &_class_data_; }


void SetRestart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetRestart*>(&to_msg);
  auto& from = static_cast<const SetRestart&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetRestart)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetRestart_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetRestart::CopyFrom(const SetRestart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetRestart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRestart::IsInitialized() const {
  return true;
}

void SetRestart::InternalSwap(SetRestart* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetRestart, _impl_.action_)
      + sizeof(SetRestart::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetRestart, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRestart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[104]);
}

// ===================================================================

class CleanCache::_Internal {
 public:
};

CleanCache::CleanCache(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CleanCache)
}
CleanCache::CleanCache(const CleanCache& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CleanCache* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CleanCache)
}

inline void CleanCache::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CleanCache::~CleanCache() {
  // @@protoc_insertion_point(destructor:cqhttp.CleanCache)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CleanCache::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CleanCache::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CleanCache::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CleanCache)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CleanCache::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CleanCache::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CleanCache)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CleanCache)
  return target;
}

size_t CleanCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CleanCache)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CleanCache::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CleanCache::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CleanCache::GetClassData() const { return &_class_data_; }


void CleanCache::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CleanCache*>(&to_msg);
  auto& from = static_cast<const CleanCache&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CleanCache)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CleanCache::CopyFrom(const CleanCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CleanCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanCache::IsInitialized() const {
  return true;
}

void CleanCache::InternalSwap(CleanCache* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CleanCache::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[105]);
}

// ===================================================================

class SetGroupPortrait_Params::_Internal {
 public:
};

SetGroupPortrait_Params::SetGroupPortrait_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupPortrait.Params)
}
SetGroupPortrait_Params::SetGroupPortrait_Params(const SetGroupPortrait_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupPortrait_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cache_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.cache_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupPortrait.Params)
}

inline void SetGroupPortrait_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.cache_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetGroupPortrait_Params::~SetGroupPortrait_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupPortrait.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupPortrait_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
}

void SetGroupPortrait_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupPortrait_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupPortrait.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.cache_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.cache_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupPortrait_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetGroupPortrait.Params.file"));
        } else
          goto handle_unusual;
        continue;
      // int32 cache = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupPortrait_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupPortrait.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string file = 2;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetGroupPortrait.Params.file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file(), target);
  }

  // int32 cache = 3;
  if (this->_internal_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupPortrait.Params)
  return target;
}

size_t SetGroupPortrait_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupPortrait.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 2;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int32 cache = 3;
  if (this->_internal_cache() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cache());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupPortrait_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupPortrait_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupPortrait_Params::GetClassData() const { return &_class_data_; }


void SetGroupPortrait_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupPortrait_Params*>(&to_msg);
  auto& from = static_cast<const SetGroupPortrait_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupPortrait.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_cache() != 0) {
    _this->_internal_set_cache(from._internal_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupPortrait_Params::CopyFrom(const SetGroupPortrait_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupPortrait.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupPortrait_Params::IsInitialized() const {
  return true;
}

void SetGroupPortrait_Params::InternalSwap(SetGroupPortrait_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupPortrait_Params, _impl_.cache_)
      + sizeof(SetGroupPortrait_Params::_impl_.cache_)
      - PROTOBUF_FIELD_OFFSET(SetGroupPortrait_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupPortrait_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[106]);
}

// ===================================================================

class SetGroupPortrait::_Internal {
 public:
  static const ::cqhttp::SetGroupPortrait_Params& params(const SetGroupPortrait* msg);
};

const ::cqhttp::SetGroupPortrait_Params&
SetGroupPortrait::_Internal::params(const SetGroupPortrait* msg) {
  return *msg->_impl_.params_;
}
SetGroupPortrait::SetGroupPortrait(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetGroupPortrait)
}
SetGroupPortrait::SetGroupPortrait(const SetGroupPortrait& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGroupPortrait* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetGroupPortrait_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetGroupPortrait)
}

inline void SetGroupPortrait::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetGroupPortrait::~SetGroupPortrait() {
  // @@protoc_insertion_point(destructor:cqhttp.SetGroupPortrait)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGroupPortrait::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetGroupPortrait::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGroupPortrait::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetGroupPortrait)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGroupPortrait::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetGroupPortrait.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGroupPortrait::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetGroupPortrait)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetGroupPortrait.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetGroupPortrait)
  return target;
}

size_t SetGroupPortrait::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetGroupPortrait)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetGroupPortrait.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGroupPortrait::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGroupPortrait::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGroupPortrait::GetClassData() const { return &_class_data_; }


void SetGroupPortrait::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGroupPortrait*>(&to_msg);
  auto& from = static_cast<const SetGroupPortrait&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetGroupPortrait)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetGroupPortrait_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGroupPortrait::CopyFrom(const SetGroupPortrait& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetGroupPortrait)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGroupPortrait::IsInitialized() const {
  return true;
}

void SetGroupPortrait::InternalSwap(SetGroupPortrait* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGroupPortrait, _impl_.action_)
      + sizeof(SetGroupPortrait::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetGroupPortrait, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGroupPortrait::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[107]);
}

// ===================================================================

class GetWordSlices_Params::_Internal {
 public:
};

GetWordSlices_Params::GetWordSlices_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetWordSlices.Params)
}
GetWordSlices_Params::GetWordSlices_Params(const GetWordSlices_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetWordSlices_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetWordSlices.Params)
}

inline void GetWordSlices_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetWordSlices_Params::~GetWordSlices_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetWordSlices.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetWordSlices_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void GetWordSlices_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetWordSlices_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetWordSlices.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWordSlices_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetWordSlices.Params.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetWordSlices_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetWordSlices.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetWordSlices.Params.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetWordSlices.Params)
  return target;
}

size_t GetWordSlices_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetWordSlices.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetWordSlices_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetWordSlices_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetWordSlices_Params::GetClassData() const { return &_class_data_; }


void GetWordSlices_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetWordSlices_Params*>(&to_msg);
  auto& from = static_cast<const GetWordSlices_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetWordSlices.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetWordSlices_Params::CopyFrom(const GetWordSlices_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetWordSlices.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWordSlices_Params::IsInitialized() const {
  return true;
}

void GetWordSlices_Params::InternalSwap(GetWordSlices_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWordSlices_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[108]);
}

// ===================================================================

class GetWordSlices::_Internal {
 public:
  static const ::cqhttp::GetWordSlices_Params& params(const GetWordSlices* msg);
};

const ::cqhttp::GetWordSlices_Params&
GetWordSlices::_Internal::params(const GetWordSlices* msg) {
  return *msg->_impl_.params_;
}
GetWordSlices::GetWordSlices(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetWordSlices)
}
GetWordSlices::GetWordSlices(const GetWordSlices& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetWordSlices* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetWordSlices_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetWordSlices)
}

inline void GetWordSlices::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetWordSlices::~GetWordSlices() {
  // @@protoc_insertion_point(destructor:cqhttp.GetWordSlices)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetWordSlices::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetWordSlices::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetWordSlices::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetWordSlices)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWordSlices::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetWordSlices.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetWordSlices.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetWordSlices::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetWordSlices)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetWordSlices.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetWordSlices.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetWordSlices)
  return target;
}

size_t GetWordSlices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetWordSlices)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetWordSlices.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetWordSlices::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetWordSlices::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetWordSlices::GetClassData() const { return &_class_data_; }


void GetWordSlices::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetWordSlices*>(&to_msg);
  auto& from = static_cast<const GetWordSlices&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetWordSlices)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetWordSlices_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetWordSlices::CopyFrom(const GetWordSlices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetWordSlices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWordSlices::IsInitialized() const {
  return true;
}

void GetWordSlices::InternalSwap(GetWordSlices* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetWordSlices, _impl_.action_)
      + sizeof(GetWordSlices::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetWordSlices, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWordSlices::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[109]);
}

// ===================================================================

class GetWordSlicesResp::_Internal {
 public:
};

GetWordSlicesResp::GetWordSlicesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetWordSlicesResp)
}
GetWordSlicesResp::GetWordSlicesResp(const GetWordSlicesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetWordSlicesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.slices_){from._impl_.slices_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetWordSlicesResp)
}

inline void GetWordSlicesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.slices_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetWordSlicesResp::~GetWordSlicesResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetWordSlicesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetWordSlicesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.slices_.~RepeatedPtrField();
}

void GetWordSlicesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetWordSlicesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetWordSlicesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWordSlicesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string slices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_slices();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetWordSlicesResp.slices"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetWordSlicesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetWordSlicesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string slices = 1;
  for (int i = 0, n = this->_internal_slices_size(); i < n; i++) {
    const auto& s = this->_internal_slices(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetWordSlicesResp.slices");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetWordSlicesResp)
  return target;
}

size_t GetWordSlicesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetWordSlicesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string slices = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.slices_.size());
  for (int i = 0, n = _impl_.slices_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.slices_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetWordSlicesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetWordSlicesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetWordSlicesResp::GetClassData() const { return &_class_data_; }


void GetWordSlicesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetWordSlicesResp*>(&to_msg);
  auto& from = static_cast<const GetWordSlicesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetWordSlicesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.slices_.MergeFrom(from._impl_.slices_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetWordSlicesResp::CopyFrom(const GetWordSlicesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetWordSlicesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWordSlicesResp::IsInitialized() const {
  return true;
}

void GetWordSlicesResp::InternalSwap(GetWordSlicesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.slices_.InternalSwap(&other->_impl_.slices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWordSlicesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[110]);
}

// ===================================================================

class OcrImage_Params::_Internal {
 public:
};

OcrImage_Params::OcrImage_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.OcrImage.Params)
}
OcrImage_Params::OcrImage_Params(const OcrImage_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OcrImage_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.image_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_image().empty()) {
    _this->_impl_.image_.Set(from._internal_image(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.OcrImage.Params)
}

inline void OcrImage_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.image_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OcrImage_Params::~OcrImage_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.OcrImage.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OcrImage_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.image_.Destroy();
}

void OcrImage_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OcrImage_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.OcrImage.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OcrImage_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string image = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_image();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.OcrImage.Params.image"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OcrImage_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.OcrImage.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.OcrImage.Params.image");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_image(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.OcrImage.Params)
  return target;
}

size_t OcrImage_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.OcrImage.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image = 1;
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcrImage_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OcrImage_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcrImage_Params::GetClassData() const { return &_class_data_; }


void OcrImage_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OcrImage_Params*>(&to_msg);
  auto& from = static_cast<const OcrImage_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.OcrImage.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OcrImage_Params::CopyFrom(const OcrImage_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.OcrImage.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OcrImage_Params::IsInitialized() const {
  return true;
}

void OcrImage_Params::InternalSwap(OcrImage_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_, lhs_arena,
      &other->_impl_.image_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OcrImage_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[111]);
}

// ===================================================================

class OcrImage::_Internal {
 public:
  static const ::cqhttp::OcrImage_Params& params(const OcrImage* msg);
};

const ::cqhttp::OcrImage_Params&
OcrImage::_Internal::params(const OcrImage* msg) {
  return *msg->_impl_.params_;
}
OcrImage::OcrImage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.OcrImage)
}
OcrImage::OcrImage(const OcrImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OcrImage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::OcrImage_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.OcrImage)
}

inline void OcrImage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OcrImage::~OcrImage() {
  // @@protoc_insertion_point(destructor:cqhttp.OcrImage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OcrImage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void OcrImage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OcrImage::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.OcrImage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OcrImage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.OcrImage.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.OcrImage.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OcrImage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.OcrImage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.OcrImage.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.OcrImage.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.OcrImage)
  return target;
}

size_t OcrImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.OcrImage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.OcrImage.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcrImage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OcrImage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcrImage::GetClassData() const { return &_class_data_; }


void OcrImage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OcrImage*>(&to_msg);
  auto& from = static_cast<const OcrImage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.OcrImage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::OcrImage_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OcrImage::CopyFrom(const OcrImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.OcrImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OcrImage::IsInitialized() const {
  return true;
}

void OcrImage::InternalSwap(OcrImage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OcrImage, _impl_.action_)
      + sizeof(OcrImage::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(OcrImage, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OcrImage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[112]);
}

// ===================================================================

class OcrImageResp_TextDetection::_Internal {
 public:
};

OcrImageResp_TextDetection::OcrImageResp_TextDetection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.OcrImageResp.TextDetection)
}
OcrImageResp_TextDetection::OcrImageResp_TextDetection(const OcrImageResp_TextDetection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OcrImageResp_TextDetection* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.coordinates_){}
    , decltype(_impl_.confidence_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.coordinates_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coordinates_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_coordinates().empty()) {
    _this->_impl_.coordinates_.Set(from._internal_coordinates(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.confidence_ = from._impl_.confidence_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.OcrImageResp.TextDetection)
}

inline void OcrImageResp_TextDetection::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.coordinates_){}
    , decltype(_impl_.confidence_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.coordinates_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.coordinates_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OcrImageResp_TextDetection::~OcrImageResp_TextDetection() {
  // @@protoc_insertion_point(destructor:cqhttp.OcrImageResp.TextDetection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OcrImageResp_TextDetection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
  _impl_.coordinates_.Destroy();
}

void OcrImageResp_TextDetection::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OcrImageResp_TextDetection::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.OcrImageResp.TextDetection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.coordinates_.ClearToEmpty();
  _impl_.confidence_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OcrImageResp_TextDetection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.OcrImageResp.TextDetection.text"));
        } else
          goto handle_unusual;
        continue;
      // int32 confidence = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string coordinates = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_coordinates();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.OcrImageResp.TextDetection.coordinates"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OcrImageResp_TextDetection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.OcrImageResp.TextDetection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.OcrImageResp.TextDetection.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // int32 confidence = 2;
  if (this->_internal_confidence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_confidence(), target);
  }

  // string coordinates = 3;
  if (!this->_internal_coordinates().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coordinates().data(), static_cast<int>(this->_internal_coordinates().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.OcrImageResp.TextDetection.coordinates");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_coordinates(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.OcrImageResp.TextDetection)
  return target;
}

size_t OcrImageResp_TextDetection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.OcrImageResp.TextDetection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string coordinates = 3;
  if (!this->_internal_coordinates().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coordinates());
  }

  // int32 confidence = 2;
  if (this->_internal_confidence() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_confidence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcrImageResp_TextDetection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OcrImageResp_TextDetection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcrImageResp_TextDetection::GetClassData() const { return &_class_data_; }


void OcrImageResp_TextDetection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OcrImageResp_TextDetection*>(&to_msg);
  auto& from = static_cast<const OcrImageResp_TextDetection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.OcrImageResp.TextDetection)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (!from._internal_coordinates().empty()) {
    _this->_internal_set_coordinates(from._internal_coordinates());
  }
  if (from._internal_confidence() != 0) {
    _this->_internal_set_confidence(from._internal_confidence());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OcrImageResp_TextDetection::CopyFrom(const OcrImageResp_TextDetection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.OcrImageResp.TextDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OcrImageResp_TextDetection::IsInitialized() const {
  return true;
}

void OcrImageResp_TextDetection::InternalSwap(OcrImageResp_TextDetection* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.coordinates_, lhs_arena,
      &other->_impl_.coordinates_, rhs_arena
  );
  swap(_impl_.confidence_, other->_impl_.confidence_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OcrImageResp_TextDetection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[113]);
}

// ===================================================================

class OcrImageResp::_Internal {
 public:
};

OcrImageResp::OcrImageResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.OcrImageResp)
}
OcrImageResp::OcrImageResp(const OcrImageResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OcrImageResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.texts_){from._impl_.texts_}
    , decltype(_impl_.language_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language().empty()) {
    _this->_impl_.language_.Set(from._internal_language(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.OcrImageResp)
}

inline void OcrImageResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.texts_){arena}
    , decltype(_impl_.language_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OcrImageResp::~OcrImageResp() {
  // @@protoc_insertion_point(destructor:cqhttp.OcrImageResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OcrImageResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.texts_.~RepeatedPtrField();
  _impl_.language_.Destroy();
}

void OcrImageResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OcrImageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.OcrImageResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.texts_.Clear();
  _impl_.language_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OcrImageResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.OcrImageResp.TextDetection texts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_texts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string language = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_language();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.OcrImageResp.language"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OcrImageResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.OcrImageResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.OcrImageResp.TextDetection texts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_texts_size()); i < n; i++) {
    const auto& repfield = this->_internal_texts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string language = 2;
  if (!this->_internal_language().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language().data(), static_cast<int>(this->_internal_language().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.OcrImageResp.language");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.OcrImageResp)
  return target;
}

size_t OcrImageResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.OcrImageResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.OcrImageResp.TextDetection texts = 1;
  total_size += 1UL * this->_internal_texts_size();
  for (const auto& msg : this->_impl_.texts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string language = 2;
  if (!this->_internal_language().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcrImageResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OcrImageResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcrImageResp::GetClassData() const { return &_class_data_; }


void OcrImageResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OcrImageResp*>(&to_msg);
  auto& from = static_cast<const OcrImageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.OcrImageResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.texts_.MergeFrom(from._impl_.texts_);
  if (!from._internal_language().empty()) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OcrImageResp::CopyFrom(const OcrImageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.OcrImageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OcrImageResp::IsInitialized() const {
  return true;
}

void OcrImageResp::InternalSwap(OcrImageResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.texts_.InternalSwap(&other->_impl_.texts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_, lhs_arena,
      &other->_impl_.language_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OcrImageResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[114]);
}

// ===================================================================

class GetGroupSystemMsg::_Internal {
 public:
};

GetGroupSystemMsg::GetGroupSystemMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupSystemMsg)
}
GetGroupSystemMsg::GetGroupSystemMsg(const GetGroupSystemMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupSystemMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupSystemMsg)
}

inline void GetGroupSystemMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupSystemMsg::~GetGroupSystemMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupSystemMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupSystemMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void GetGroupSystemMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupSystemMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupSystemMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupSystemMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupSystemMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupSystemMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsg.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupSystemMsg)
  return target;
}

size_t GetGroupSystemMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupSystemMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupSystemMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupSystemMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupSystemMsg::GetClassData() const { return &_class_data_; }


void GetGroupSystemMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupSystemMsg*>(&to_msg);
  auto& from = static_cast<const GetGroupSystemMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupSystemMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupSystemMsg::CopyFrom(const GetGroupSystemMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupSystemMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupSystemMsg::IsInitialized() const {
  return true;
}

void GetGroupSystemMsg::InternalSwap(GetGroupSystemMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupSystemMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[115]);
}

// ===================================================================

class GetGroupSystemMsgResp_InvitedRequest::_Internal {
 public:
};

GetGroupSystemMsgResp_InvitedRequest::GetGroupSystemMsgResp_InvitedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
}
GetGroupSystemMsgResp_InvitedRequest::GetGroupSystemMsgResp_InvitedRequest(const GetGroupSystemMsgResp_InvitedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupSystemMsgResp_InvitedRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invitor_nick_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.invitor_uin_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.actor_){}
    , decltype(_impl_.checked_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.invitor_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invitor_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invitor_nick().empty()) {
    _this->_impl_.invitor_nick_.Set(from._internal_invitor_nick(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.checked_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.checked_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
}

inline void GetGroupSystemMsgResp_InvitedRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invitor_nick_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.invitor_uin_){int64_t{0}}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.actor_){int64_t{0}}
    , decltype(_impl_.checked_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.invitor_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invitor_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupSystemMsgResp_InvitedRequest::~GetGroupSystemMsgResp_InvitedRequest() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupSystemMsgResp_InvitedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invitor_nick_.Destroy();
  _impl_.group_name_.Destroy();
}

void GetGroupSystemMsgResp_InvitedRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupSystemMsgResp_InvitedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invitor_nick_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.checked_) -
      reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.checked_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupSystemMsgResp_InvitedRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 invitor_uin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.invitor_uin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string invitor_nick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_invitor_nick();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsgResp.InvitedRequest.invitor_nick"));
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsgResp.InvitedRequest.group_name"));
        } else
          goto handle_unusual;
        continue;
      // bool checked = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.checked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 actor = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.actor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupSystemMsgResp_InvitedRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 request_id = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // int64 invitor_uin = 2;
  if (this->_internal_invitor_uin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_invitor_uin(), target);
  }

  // string invitor_nick = 3;
  if (!this->_internal_invitor_nick().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitor_nick().data(), static_cast<int>(this->_internal_invitor_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsgResp.InvitedRequest.invitor_nick");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_invitor_nick(), target);
  }

  // int64 group_id = 4;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_group_id(), target);
  }

  // string group_name = 5;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsgResp.InvitedRequest.group_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_group_name(), target);
  }

  // bool checked = 6;
  if (this->_internal_checked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_checked(), target);
  }

  // int64 actor = 7;
  if (this->_internal_actor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_actor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  return target;
}

size_t GetGroupSystemMsgResp_InvitedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invitor_nick = 3;
  if (!this->_internal_invitor_nick().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitor_nick());
  }

  // string group_name = 5;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // int64 request_id = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
  }

  // int64 invitor_uin = 2;
  if (this->_internal_invitor_uin() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_invitor_uin());
  }

  // int64 group_id = 4;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 actor = 7;
  if (this->_internal_actor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_actor());
  }

  // bool checked = 6;
  if (this->_internal_checked() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupSystemMsgResp_InvitedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupSystemMsgResp_InvitedRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupSystemMsgResp_InvitedRequest::GetClassData() const { return &_class_data_; }


void GetGroupSystemMsgResp_InvitedRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupSystemMsgResp_InvitedRequest*>(&to_msg);
  auto& from = static_cast<const GetGroupSystemMsgResp_InvitedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invitor_nick().empty()) {
    _this->_internal_set_invitor_nick(from._internal_invitor_nick());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (from._internal_request_id() != 0) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_invitor_uin() != 0) {
    _this->_internal_set_invitor_uin(from._internal_invitor_uin());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_actor() != 0) {
    _this->_internal_set_actor(from._internal_actor());
  }
  if (from._internal_checked() != 0) {
    _this->_internal_set_checked(from._internal_checked());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupSystemMsgResp_InvitedRequest::CopyFrom(const GetGroupSystemMsgResp_InvitedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupSystemMsgResp.InvitedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupSystemMsgResp_InvitedRequest::IsInitialized() const {
  return true;
}

void GetGroupSystemMsgResp_InvitedRequest::InternalSwap(GetGroupSystemMsgResp_InvitedRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.invitor_nick_, lhs_arena,
      &other->_impl_.invitor_nick_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupSystemMsgResp_InvitedRequest, _impl_.checked_)
      + sizeof(GetGroupSystemMsgResp_InvitedRequest::_impl_.checked_)
      - PROTOBUF_FIELD_OFFSET(GetGroupSystemMsgResp_InvitedRequest, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupSystemMsgResp_InvitedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[116]);
}

// ===================================================================

class GetGroupSystemMsgResp_JoinRequest::_Internal {
 public:
};

GetGroupSystemMsgResp_JoinRequest::GetGroupSystemMsgResp_JoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupSystemMsgResp.JoinRequest)
}
GetGroupSystemMsgResp_JoinRequest::GetGroupSystemMsgResp_JoinRequest(const GetGroupSystemMsgResp_JoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupSystemMsgResp_JoinRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requester_nick_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.requester_uin_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.actor_){}
    , decltype(_impl_.checked_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.requester_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_nick().empty()) {
    _this->_impl_.requester_nick_.Set(from._internal_requester_nick(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.checked_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.checked_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupSystemMsgResp.JoinRequest)
}

inline void GetGroupSystemMsgResp_JoinRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requester_nick_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.requester_uin_){int64_t{0}}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.actor_){int64_t{0}}
    , decltype(_impl_.checked_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.requester_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupSystemMsgResp_JoinRequest::~GetGroupSystemMsgResp_JoinRequest() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupSystemMsgResp_JoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requester_nick_.Destroy();
  _impl_.message_.Destroy();
  _impl_.group_name_.Destroy();
}

void GetGroupSystemMsgResp_JoinRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupSystemMsgResp_JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requester_nick_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.checked_) -
      reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.checked_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupSystemMsgResp_JoinRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 requester_uin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.requester_uin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string requester_nick = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_requester_nick();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsgResp.JoinRequest.requester_nick"));
        } else
          goto handle_unusual;
        continue;
      // string message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsgResp.JoinRequest.message"));
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupSystemMsgResp.JoinRequest.group_name"));
        } else
          goto handle_unusual;
        continue;
      // bool checked = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.checked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 actor = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.actor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupSystemMsgResp_JoinRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 request_id = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // int64 requester_uin = 2;
  if (this->_internal_requester_uin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_requester_uin(), target);
  }

  // string requester_nick = 3;
  if (!this->_internal_requester_nick().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_nick().data(), static_cast<int>(this->_internal_requester_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsgResp.JoinRequest.requester_nick");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requester_nick(), target);
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsgResp.JoinRequest.message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message(), target);
  }

  // int64 group_id = 5;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_group_id(), target);
  }

  // string group_name = 6;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupSystemMsgResp.JoinRequest.group_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_group_name(), target);
  }

  // bool checked = 7;
  if (this->_internal_checked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_checked(), target);
  }

  // int64 actor = 8;
  if (this->_internal_actor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_actor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  return target;
}

size_t GetGroupSystemMsgResp_JoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requester_nick = 3;
  if (!this->_internal_requester_nick().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_nick());
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string group_name = 6;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // int64 request_id = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
  }

  // int64 requester_uin = 2;
  if (this->_internal_requester_uin() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_requester_uin());
  }

  // int64 group_id = 5;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int64 actor = 8;
  if (this->_internal_actor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_actor());
  }

  // bool checked = 7;
  if (this->_internal_checked() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupSystemMsgResp_JoinRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupSystemMsgResp_JoinRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupSystemMsgResp_JoinRequest::GetClassData() const { return &_class_data_; }


void GetGroupSystemMsgResp_JoinRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupSystemMsgResp_JoinRequest*>(&to_msg);
  auto& from = static_cast<const GetGroupSystemMsgResp_JoinRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_requester_nick().empty()) {
    _this->_internal_set_requester_nick(from._internal_requester_nick());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (from._internal_request_id() != 0) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_requester_uin() != 0) {
    _this->_internal_set_requester_uin(from._internal_requester_uin());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_actor() != 0) {
    _this->_internal_set_actor(from._internal_actor());
  }
  if (from._internal_checked() != 0) {
    _this->_internal_set_checked(from._internal_checked());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupSystemMsgResp_JoinRequest::CopyFrom(const GetGroupSystemMsgResp_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupSystemMsgResp.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupSystemMsgResp_JoinRequest::IsInitialized() const {
  return true;
}

void GetGroupSystemMsgResp_JoinRequest::InternalSwap(GetGroupSystemMsgResp_JoinRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_nick_, lhs_arena,
      &other->_impl_.requester_nick_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupSystemMsgResp_JoinRequest, _impl_.checked_)
      + sizeof(GetGroupSystemMsgResp_JoinRequest::_impl_.checked_)
      - PROTOBUF_FIELD_OFFSET(GetGroupSystemMsgResp_JoinRequest, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupSystemMsgResp_JoinRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[117]);
}

// ===================================================================

class GetGroupSystemMsgResp::_Internal {
 public:
};

GetGroupSystemMsgResp::GetGroupSystemMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupSystemMsgResp)
}
GetGroupSystemMsgResp::GetGroupSystemMsgResp(const GetGroupSystemMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupSystemMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invited_requests_){from._impl_.invited_requests_}
    , decltype(_impl_.join_requests_){from._impl_.join_requests_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupSystemMsgResp)
}

inline void GetGroupSystemMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invited_requests_){arena}
    , decltype(_impl_.join_requests_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupSystemMsgResp::~GetGroupSystemMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupSystemMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupSystemMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invited_requests_.~RepeatedPtrField();
  _impl_.join_requests_.~RepeatedPtrField();
}

void GetGroupSystemMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupSystemMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupSystemMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invited_requests_.Clear();
  _impl_.join_requests_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupSystemMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetGroupSystemMsgResp.InvitedRequest invited_requests = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invited_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupSystemMsgResp.JoinRequest join_requests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_join_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupSystemMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupSystemMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupSystemMsgResp.InvitedRequest invited_requests = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invited_requests_size()); i < n; i++) {
    const auto& repfield = this->_internal_invited_requests(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.GetGroupSystemMsgResp.JoinRequest join_requests = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_join_requests_size()); i < n; i++) {
    const auto& repfield = this->_internal_join_requests(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupSystemMsgResp)
  return target;
}

size_t GetGroupSystemMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupSystemMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupSystemMsgResp.InvitedRequest invited_requests = 1;
  total_size += 1UL * this->_internal_invited_requests_size();
  for (const auto& msg : this->_impl_.invited_requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.GetGroupSystemMsgResp.JoinRequest join_requests = 2;
  total_size += 1UL * this->_internal_join_requests_size();
  for (const auto& msg : this->_impl_.join_requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupSystemMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupSystemMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupSystemMsgResp::GetClassData() const { return &_class_data_; }


void GetGroupSystemMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupSystemMsgResp*>(&to_msg);
  auto& from = static_cast<const GetGroupSystemMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupSystemMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.invited_requests_.MergeFrom(from._impl_.invited_requests_);
  _this->_impl_.join_requests_.MergeFrom(from._impl_.join_requests_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupSystemMsgResp::CopyFrom(const GetGroupSystemMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupSystemMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupSystemMsgResp::IsInitialized() const {
  return true;
}

void GetGroupSystemMsgResp::InternalSwap(GetGroupSystemMsgResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.invited_requests_.InternalSwap(&other->_impl_.invited_requests_);
  _impl_.join_requests_.InternalSwap(&other->_impl_.join_requests_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupSystemMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[118]);
}

// ===================================================================

class UploadPrivateFile_Params::_Internal {
 public:
};

UploadPrivateFile_Params::UploadPrivateFile_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UploadPrivateFile.Params)
}
UploadPrivateFile_Params::UploadPrivateFile_Params(const UploadPrivateFile_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadPrivateFile_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UploadPrivateFile.Params)
}

inline void UploadPrivateFile_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadPrivateFile_Params::~UploadPrivateFile_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.UploadPrivateFile.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadPrivateFile_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
  _impl_.name_.Destroy();
}

void UploadPrivateFile_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadPrivateFile_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UploadPrivateFile.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadPrivateFile_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UploadPrivateFile.Params.file"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UploadPrivateFile.Params.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadPrivateFile_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UploadPrivateFile.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // string file = 2;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UploadPrivateFile.Params.file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UploadPrivateFile.Params.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UploadPrivateFile.Params)
  return target;
}

size_t UploadPrivateFile_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UploadPrivateFile.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 2;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadPrivateFile_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadPrivateFile_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadPrivateFile_Params::GetClassData() const { return &_class_data_; }


void UploadPrivateFile_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadPrivateFile_Params*>(&to_msg);
  auto& from = static_cast<const UploadPrivateFile_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UploadPrivateFile.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadPrivateFile_Params::CopyFrom(const UploadPrivateFile_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UploadPrivateFile.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadPrivateFile_Params::IsInitialized() const {
  return true;
}

void UploadPrivateFile_Params::InternalSwap(UploadPrivateFile_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadPrivateFile_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[119]);
}

// ===================================================================

class UploadPrivateFile::_Internal {
 public:
  static const ::cqhttp::UploadPrivateFile_Params& params(const UploadPrivateFile* msg);
};

const ::cqhttp::UploadPrivateFile_Params&
UploadPrivateFile::_Internal::params(const UploadPrivateFile* msg) {
  return *msg->_impl_.params_;
}
UploadPrivateFile::UploadPrivateFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UploadPrivateFile)
}
UploadPrivateFile::UploadPrivateFile(const UploadPrivateFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadPrivateFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::UploadPrivateFile_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UploadPrivateFile)
}

inline void UploadPrivateFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UploadPrivateFile::~UploadPrivateFile() {
  // @@protoc_insertion_point(destructor:cqhttp.UploadPrivateFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadPrivateFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void UploadPrivateFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadPrivateFile::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UploadPrivateFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadPrivateFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.UploadPrivateFile.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadPrivateFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UploadPrivateFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.UploadPrivateFile.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UploadPrivateFile)
  return target;
}

size_t UploadPrivateFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UploadPrivateFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.UploadPrivateFile.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadPrivateFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadPrivateFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadPrivateFile::GetClassData() const { return &_class_data_; }


void UploadPrivateFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadPrivateFile*>(&to_msg);
  auto& from = static_cast<const UploadPrivateFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UploadPrivateFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::UploadPrivateFile_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadPrivateFile::CopyFrom(const UploadPrivateFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UploadPrivateFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadPrivateFile::IsInitialized() const {
  return true;
}

void UploadPrivateFile::InternalSwap(UploadPrivateFile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UploadPrivateFile, _impl_.action_)
      + sizeof(UploadPrivateFile::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(UploadPrivateFile, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadPrivateFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[120]);
}

// ===================================================================

class UploadGroupFile_Params::_Internal {
 public:
};

UploadGroupFile_Params::UploadGroupFile_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UploadGroupFile.Params)
}
UploadGroupFile_Params::UploadGroupFile_Params(const UploadGroupFile_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadGroupFile_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.folder_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.folder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_folder().empty()) {
    _this->_impl_.folder_.Set(from._internal_folder(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UploadGroupFile.Params)
}

inline void UploadGroupFile_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.folder_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.folder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadGroupFile_Params::~UploadGroupFile_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.UploadGroupFile.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadGroupFile_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
  _impl_.name_.Destroy();
  _impl_.folder_.Destroy();
}

void UploadGroupFile_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadGroupFile_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UploadGroupFile.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.folder_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadGroupFile_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UploadGroupFile.Params.file"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UploadGroupFile.Params.name"));
        } else
          goto handle_unusual;
        continue;
      // string folder = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_folder();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.UploadGroupFile.Params.folder"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadGroupFile_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UploadGroupFile.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string file = 2;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UploadGroupFile.Params.file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UploadGroupFile.Params.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string folder = 4;
  if (!this->_internal_folder().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_folder().data(), static_cast<int>(this->_internal_folder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.UploadGroupFile.Params.folder");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_folder(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UploadGroupFile.Params)
  return target;
}

size_t UploadGroupFile_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UploadGroupFile.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 2;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string folder = 4;
  if (!this->_internal_folder().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_folder());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadGroupFile_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadGroupFile_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadGroupFile_Params::GetClassData() const { return &_class_data_; }


void UploadGroupFile_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadGroupFile_Params*>(&to_msg);
  auto& from = static_cast<const UploadGroupFile_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UploadGroupFile.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_folder().empty()) {
    _this->_internal_set_folder(from._internal_folder());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadGroupFile_Params::CopyFrom(const UploadGroupFile_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UploadGroupFile.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadGroupFile_Params::IsInitialized() const {
  return true;
}

void UploadGroupFile_Params::InternalSwap(UploadGroupFile_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.folder_, lhs_arena,
      &other->_impl_.folder_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadGroupFile_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[121]);
}

// ===================================================================

class UploadGroupFile::_Internal {
 public:
  static const ::cqhttp::UploadGroupFile_Params& params(const UploadGroupFile* msg);
};

const ::cqhttp::UploadGroupFile_Params&
UploadGroupFile::_Internal::params(const UploadGroupFile* msg) {
  return *msg->_impl_.params_;
}
UploadGroupFile::UploadGroupFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.UploadGroupFile)
}
UploadGroupFile::UploadGroupFile(const UploadGroupFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadGroupFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::UploadGroupFile_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.UploadGroupFile)
}

inline void UploadGroupFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UploadGroupFile::~UploadGroupFile() {
  // @@protoc_insertion_point(destructor:cqhttp.UploadGroupFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadGroupFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void UploadGroupFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadGroupFile::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.UploadGroupFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadGroupFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.UploadGroupFile.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadGroupFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.UploadGroupFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.UploadGroupFile.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.UploadGroupFile)
  return target;
}

size_t UploadGroupFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.UploadGroupFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.UploadGroupFile.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadGroupFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadGroupFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadGroupFile::GetClassData() const { return &_class_data_; }


void UploadGroupFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadGroupFile*>(&to_msg);
  auto& from = static_cast<const UploadGroupFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.UploadGroupFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::UploadGroupFile_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadGroupFile::CopyFrom(const UploadGroupFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.UploadGroupFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadGroupFile::IsInitialized() const {
  return true;
}

void UploadGroupFile::InternalSwap(UploadGroupFile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UploadGroupFile, _impl_.action_)
      + sizeof(UploadGroupFile::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(UploadGroupFile, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadGroupFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[122]);
}

// ===================================================================

class GetGroupFileSystemInfo_Params::_Internal {
 public:
};

GetGroupFileSystemInfo_Params::GetGroupFileSystemInfo_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileSystemInfo.Params)
}
GetGroupFileSystemInfo_Params::GetGroupFileSystemInfo_Params(const GetGroupFileSystemInfo_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileSystemInfo_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileSystemInfo.Params)
}

inline void GetGroupFileSystemInfo_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupFileSystemInfo_Params::~GetGroupFileSystemInfo_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileSystemInfo.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileSystemInfo_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupFileSystemInfo_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileSystemInfo_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileSystemInfo.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileSystemInfo_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileSystemInfo_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileSystemInfo.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileSystemInfo.Params)
  return target;
}

size_t GetGroupFileSystemInfo_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileSystemInfo.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileSystemInfo_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileSystemInfo_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileSystemInfo_Params::GetClassData() const { return &_class_data_; }


void GetGroupFileSystemInfo_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileSystemInfo_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupFileSystemInfo_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileSystemInfo.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileSystemInfo_Params::CopyFrom(const GetGroupFileSystemInfo_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileSystemInfo.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileSystemInfo_Params::IsInitialized() const {
  return true;
}

void GetGroupFileSystemInfo_Params::InternalSwap(GetGroupFileSystemInfo_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileSystemInfo_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[123]);
}

// ===================================================================

class GetGroupFileSystemInfo::_Internal {
 public:
  static const ::cqhttp::GetGroupFileSystemInfo_Params& params(const GetGroupFileSystemInfo* msg);
};

const ::cqhttp::GetGroupFileSystemInfo_Params&
GetGroupFileSystemInfo::_Internal::params(const GetGroupFileSystemInfo* msg) {
  return *msg->_impl_.params_;
}
GetGroupFileSystemInfo::GetGroupFileSystemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileSystemInfo)
}
GetGroupFileSystemInfo::GetGroupFileSystemInfo(const GetGroupFileSystemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileSystemInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupFileSystemInfo_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileSystemInfo)
}

inline void GetGroupFileSystemInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupFileSystemInfo::~GetGroupFileSystemInfo() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileSystemInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileSystemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupFileSystemInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileSystemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileSystemInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileSystemInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupFileSystemInfo.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupFileSystemInfo.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileSystemInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileSystemInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupFileSystemInfo.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupFileSystemInfo.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileSystemInfo)
  return target;
}

size_t GetGroupFileSystemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileSystemInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupFileSystemInfo.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileSystemInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileSystemInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileSystemInfo::GetClassData() const { return &_class_data_; }


void GetGroupFileSystemInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileSystemInfo*>(&to_msg);
  auto& from = static_cast<const GetGroupFileSystemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileSystemInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupFileSystemInfo_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileSystemInfo::CopyFrom(const GetGroupFileSystemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileSystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileSystemInfo::IsInitialized() const {
  return true;
}

void GetGroupFileSystemInfo::InternalSwap(GetGroupFileSystemInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupFileSystemInfo, _impl_.action_)
      + sizeof(GetGroupFileSystemInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupFileSystemInfo, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileSystemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[124]);
}

// ===================================================================

class GetGroupFileSystemInfoResp::_Internal {
 public:
};

GetGroupFileSystemInfoResp::GetGroupFileSystemInfoResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileSystemInfoResp)
}
GetGroupFileSystemInfoResp::GetGroupFileSystemInfoResp(const GetGroupFileSystemInfoResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileSystemInfoResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_count_){}
    , decltype(_impl_.limit_count_){}
    , decltype(_impl_.used_space_){}
    , decltype(_impl_.total_space_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.file_count_, &from._impl_.file_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.total_space_) -
    reinterpret_cast<char*>(&_impl_.file_count_)) + sizeof(_impl_.total_space_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileSystemInfoResp)
}

inline void GetGroupFileSystemInfoResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_count_){0}
    , decltype(_impl_.limit_count_){0}
    , decltype(_impl_.used_space_){int64_t{0}}
    , decltype(_impl_.total_space_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupFileSystemInfoResp::~GetGroupFileSystemInfoResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileSystemInfoResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileSystemInfoResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupFileSystemInfoResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileSystemInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileSystemInfoResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.file_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.total_space_) -
      reinterpret_cast<char*>(&_impl_.file_count_)) + sizeof(_impl_.total_space_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileSystemInfoResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 file_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.file_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 limit_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.limit_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 used_space = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.used_space_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_space = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.total_space_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileSystemInfoResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileSystemInfoResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 file_count = 1;
  if (this->_internal_file_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_file_count(), target);
  }

  // int32 limit_count = 2;
  if (this->_internal_limit_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_limit_count(), target);
  }

  // int64 used_space = 3;
  if (this->_internal_used_space() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_used_space(), target);
  }

  // int64 total_space = 4;
  if (this->_internal_total_space() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_total_space(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileSystemInfoResp)
  return target;
}

size_t GetGroupFileSystemInfoResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileSystemInfoResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 file_count = 1;
  if (this->_internal_file_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_file_count());
  }

  // int32 limit_count = 2;
  if (this->_internal_limit_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit_count());
  }

  // int64 used_space = 3;
  if (this->_internal_used_space() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_used_space());
  }

  // int64 total_space = 4;
  if (this->_internal_total_space() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_space());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileSystemInfoResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileSystemInfoResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileSystemInfoResp::GetClassData() const { return &_class_data_; }


void GetGroupFileSystemInfoResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileSystemInfoResp*>(&to_msg);
  auto& from = static_cast<const GetGroupFileSystemInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileSystemInfoResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_file_count() != 0) {
    _this->_internal_set_file_count(from._internal_file_count());
  }
  if (from._internal_limit_count() != 0) {
    _this->_internal_set_limit_count(from._internal_limit_count());
  }
  if (from._internal_used_space() != 0) {
    _this->_internal_set_used_space(from._internal_used_space());
  }
  if (from._internal_total_space() != 0) {
    _this->_internal_set_total_space(from._internal_total_space());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileSystemInfoResp::CopyFrom(const GetGroupFileSystemInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileSystemInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileSystemInfoResp::IsInitialized() const {
  return true;
}

void GetGroupFileSystemInfoResp::InternalSwap(GetGroupFileSystemInfoResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupFileSystemInfoResp, _impl_.total_space_)
      + sizeof(GetGroupFileSystemInfoResp::_impl_.total_space_)
      - PROTOBUF_FIELD_OFFSET(GetGroupFileSystemInfoResp, _impl_.file_count_)>(
          reinterpret_cast<char*>(&_impl_.file_count_),
          reinterpret_cast<char*>(&other->_impl_.file_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileSystemInfoResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[125]);
}

// ===================================================================

class GetGroupRootFiles_Params::_Internal {
 public:
};

GetGroupRootFiles_Params::GetGroupRootFiles_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupRootFiles.Params)
}
GetGroupRootFiles_Params::GetGroupRootFiles_Params(const GetGroupRootFiles_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupRootFiles_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupRootFiles.Params)
}

inline void GetGroupRootFiles_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupRootFiles_Params::~GetGroupRootFiles_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupRootFiles.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupRootFiles_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupRootFiles_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupRootFiles_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupRootFiles.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupRootFiles_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupRootFiles_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupRootFiles.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupRootFiles.Params)
  return target;
}

size_t GetGroupRootFiles_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupRootFiles.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupRootFiles_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupRootFiles_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupRootFiles_Params::GetClassData() const { return &_class_data_; }


void GetGroupRootFiles_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupRootFiles_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupRootFiles_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupRootFiles.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupRootFiles_Params::CopyFrom(const GetGroupRootFiles_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupRootFiles.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupRootFiles_Params::IsInitialized() const {
  return true;
}

void GetGroupRootFiles_Params::InternalSwap(GetGroupRootFiles_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupRootFiles_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[126]);
}

// ===================================================================

class GetGroupRootFiles::_Internal {
 public:
  static const ::cqhttp::GetGroupRootFiles_Params& params(const GetGroupRootFiles* msg);
};

const ::cqhttp::GetGroupRootFiles_Params&
GetGroupRootFiles::_Internal::params(const GetGroupRootFiles* msg) {
  return *msg->_impl_.params_;
}
GetGroupRootFiles::GetGroupRootFiles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupRootFiles)
}
GetGroupRootFiles::GetGroupRootFiles(const GetGroupRootFiles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupRootFiles* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupRootFiles_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupRootFiles)
}

inline void GetGroupRootFiles::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupRootFiles::~GetGroupRootFiles() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupRootFiles)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupRootFiles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupRootFiles::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupRootFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupRootFiles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupRootFiles::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupRootFiles.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupRootFiles.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupRootFiles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupRootFiles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupRootFiles.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupRootFiles.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupRootFiles)
  return target;
}

size_t GetGroupRootFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupRootFiles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupRootFiles.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupRootFiles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupRootFiles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupRootFiles::GetClassData() const { return &_class_data_; }


void GetGroupRootFiles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupRootFiles*>(&to_msg);
  auto& from = static_cast<const GetGroupRootFiles&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupRootFiles)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupRootFiles_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupRootFiles::CopyFrom(const GetGroupRootFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupRootFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupRootFiles::IsInitialized() const {
  return true;
}

void GetGroupRootFiles::InternalSwap(GetGroupRootFiles* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupRootFiles, _impl_.action_)
      + sizeof(GetGroupRootFiles::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupRootFiles, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupRootFiles::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[127]);
}

// ===================================================================

class GetGroupRootFilesResp::_Internal {
 public:
};

void GetGroupRootFilesResp::clear_files() {
  _impl_.files_.Clear();
}
void GetGroupRootFilesResp::clear_folders() {
  _impl_.folders_.Clear();
}
GetGroupRootFilesResp::GetGroupRootFilesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupRootFilesResp)
}
GetGroupRootFilesResp::GetGroupRootFilesResp(const GetGroupRootFilesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupRootFilesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){from._impl_.files_}
    , decltype(_impl_.folders_){from._impl_.folders_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupRootFilesResp)
}

inline void GetGroupRootFilesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){arena}
    , decltype(_impl_.folders_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupRootFilesResp::~GetGroupRootFilesResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupRootFilesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupRootFilesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  _impl_.folders_.~RepeatedPtrField();
}

void GetGroupRootFilesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupRootFilesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupRootFilesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  _impl_.folders_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupRootFilesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.File files = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.Folder folders = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_folders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupRootFilesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupRootFilesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.File files = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.Folder folders = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_folders_size()); i < n; i++) {
    const auto& repfield = this->_internal_folders(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupRootFilesResp)
  return target;
}

size_t GetGroupRootFilesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupRootFilesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.File files = 1;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_impl_.files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.Folder folders = 2;
  total_size += 1UL * this->_internal_folders_size();
  for (const auto& msg : this->_impl_.folders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupRootFilesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupRootFilesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupRootFilesResp::GetClassData() const { return &_class_data_; }


void GetGroupRootFilesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupRootFilesResp*>(&to_msg);
  auto& from = static_cast<const GetGroupRootFilesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupRootFilesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.files_.MergeFrom(from._impl_.files_);
  _this->_impl_.folders_.MergeFrom(from._impl_.folders_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupRootFilesResp::CopyFrom(const GetGroupRootFilesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupRootFilesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupRootFilesResp::IsInitialized() const {
  return true;
}

void GetGroupRootFilesResp::InternalSwap(GetGroupRootFilesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  _impl_.folders_.InternalSwap(&other->_impl_.folders_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupRootFilesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[128]);
}

// ===================================================================

class getGroupFileByFolder_Params::_Internal {
 public:
};

getGroupFileByFolder_Params::getGroupFileByFolder_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getGroupFileByFolder.Params)
}
getGroupFileByFolder_Params::getGroupFileByFolder_Params(const getGroupFileByFolder_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getGroupFileByFolder_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.folder_id_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.folder_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_folder_id().empty()) {
    _this->_impl_.folder_id_.Set(from._internal_folder_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.getGroupFileByFolder.Params)
}

inline void getGroupFileByFolder_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.folder_id_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.folder_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getGroupFileByFolder_Params::~getGroupFileByFolder_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.getGroupFileByFolder.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getGroupFileByFolder_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.folder_id_.Destroy();
}

void getGroupFileByFolder_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getGroupFileByFolder_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getGroupFileByFolder.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.folder_id_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getGroupFileByFolder_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string folder_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_folder_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getGroupFileByFolder.Params.folder_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getGroupFileByFolder_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getGroupFileByFolder.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string folder_id = 2;
  if (!this->_internal_folder_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_folder_id().data(), static_cast<int>(this->_internal_folder_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getGroupFileByFolder.Params.folder_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_folder_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getGroupFileByFolder.Params)
  return target;
}

size_t getGroupFileByFolder_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getGroupFileByFolder.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string folder_id = 2;
  if (!this->_internal_folder_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_folder_id());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getGroupFileByFolder_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getGroupFileByFolder_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getGroupFileByFolder_Params::GetClassData() const { return &_class_data_; }


void getGroupFileByFolder_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getGroupFileByFolder_Params*>(&to_msg);
  auto& from = static_cast<const getGroupFileByFolder_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getGroupFileByFolder.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_folder_id().empty()) {
    _this->_internal_set_folder_id(from._internal_folder_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getGroupFileByFolder_Params::CopyFrom(const getGroupFileByFolder_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getGroupFileByFolder.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getGroupFileByFolder_Params::IsInitialized() const {
  return true;
}

void getGroupFileByFolder_Params::InternalSwap(getGroupFileByFolder_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.folder_id_, lhs_arena,
      &other->_impl_.folder_id_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getGroupFileByFolder_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[129]);
}

// ===================================================================

class getGroupFileByFolder::_Internal {
 public:
  static const ::cqhttp::getGroupFileByFolder_Params& params(const getGroupFileByFolder* msg);
};

const ::cqhttp::getGroupFileByFolder_Params&
getGroupFileByFolder::_Internal::params(const getGroupFileByFolder* msg) {
  return *msg->_impl_.params_;
}
getGroupFileByFolder::getGroupFileByFolder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getGroupFileByFolder)
}
getGroupFileByFolder::getGroupFileByFolder(const getGroupFileByFolder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getGroupFileByFolder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::getGroupFileByFolder_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.getGroupFileByFolder)
}

inline void getGroupFileByFolder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getGroupFileByFolder::~getGroupFileByFolder() {
  // @@protoc_insertion_point(destructor:cqhttp.getGroupFileByFolder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getGroupFileByFolder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void getGroupFileByFolder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getGroupFileByFolder::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getGroupFileByFolder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getGroupFileByFolder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.getGroupFileByFolder.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.getGroupFileByFolder.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getGroupFileByFolder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getGroupFileByFolder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.getGroupFileByFolder.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.getGroupFileByFolder.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getGroupFileByFolder)
  return target;
}

size_t getGroupFileByFolder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getGroupFileByFolder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.getGroupFileByFolder.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getGroupFileByFolder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getGroupFileByFolder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getGroupFileByFolder::GetClassData() const { return &_class_data_; }


void getGroupFileByFolder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getGroupFileByFolder*>(&to_msg);
  auto& from = static_cast<const getGroupFileByFolder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getGroupFileByFolder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::getGroupFileByFolder_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getGroupFileByFolder::CopyFrom(const getGroupFileByFolder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getGroupFileByFolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getGroupFileByFolder::IsInitialized() const {
  return true;
}

void getGroupFileByFolder::InternalSwap(getGroupFileByFolder* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getGroupFileByFolder, _impl_.action_)
      + sizeof(getGroupFileByFolder::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(getGroupFileByFolder, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getGroupFileByFolder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[130]);
}

// ===================================================================

class getGroupFileByFolderResp::_Internal {
 public:
};

void getGroupFileByFolderResp::clear_files() {
  _impl_.files_.Clear();
}
void getGroupFileByFolderResp::clear_folders() {
  _impl_.folders_.Clear();
}
getGroupFileByFolderResp::getGroupFileByFolderResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.getGroupFileByFolderResp)
}
getGroupFileByFolderResp::getGroupFileByFolderResp(const getGroupFileByFolderResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getGroupFileByFolderResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){from._impl_.files_}
    , decltype(_impl_.folders_){from._impl_.folders_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.getGroupFileByFolderResp)
}

inline void getGroupFileByFolderResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){arena}
    , decltype(_impl_.folders_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getGroupFileByFolderResp::~getGroupFileByFolderResp() {
  // @@protoc_insertion_point(destructor:cqhttp.getGroupFileByFolderResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getGroupFileByFolderResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  _impl_.folders_.~RepeatedPtrField();
}

void getGroupFileByFolderResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getGroupFileByFolderResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.getGroupFileByFolderResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  _impl_.folders_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getGroupFileByFolderResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.File files = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.Folder folders = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_folders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getGroupFileByFolderResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.getGroupFileByFolderResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.File files = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .cqhttp.Folder folders = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_folders_size()); i < n; i++) {
    const auto& repfield = this->_internal_folders(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.getGroupFileByFolderResp)
  return target;
}

size_t getGroupFileByFolderResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.getGroupFileByFolderResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.File files = 1;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_impl_.files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .cqhttp.Folder folders = 2;
  total_size += 1UL * this->_internal_folders_size();
  for (const auto& msg : this->_impl_.folders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getGroupFileByFolderResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getGroupFileByFolderResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getGroupFileByFolderResp::GetClassData() const { return &_class_data_; }


void getGroupFileByFolderResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getGroupFileByFolderResp*>(&to_msg);
  auto& from = static_cast<const getGroupFileByFolderResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.getGroupFileByFolderResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.files_.MergeFrom(from._impl_.files_);
  _this->_impl_.folders_.MergeFrom(from._impl_.folders_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getGroupFileByFolderResp::CopyFrom(const getGroupFileByFolderResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.getGroupFileByFolderResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getGroupFileByFolderResp::IsInitialized() const {
  return true;
}

void getGroupFileByFolderResp::InternalSwap(getGroupFileByFolderResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  _impl_.folders_.InternalSwap(&other->_impl_.folders_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getGroupFileByFolderResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[131]);
}

// ===================================================================

class CreateGroupFileFolder_Params::_Internal {
 public:
};

CreateGroupFileFolder_Params::CreateGroupFileFolder_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CreateGroupFileFolder.Params)
}
CreateGroupFileFolder_Params::CreateGroupFileFolder_Params(const CreateGroupFileFolder_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateGroupFileFolder_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_id().empty()) {
    _this->_impl_.parent_id_.Set(from._internal_parent_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CreateGroupFileFolder.Params)
}

inline void CreateGroupFileFolder_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_id_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateGroupFileFolder_Params::~CreateGroupFileFolder_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.CreateGroupFileFolder.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateGroupFileFolder_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.parent_id_.Destroy();
}

void CreateGroupFileFolder_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateGroupFileFolder_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CreateGroupFileFolder.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.parent_id_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupFileFolder_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CreateGroupFileFolder.Params.name"));
        } else
          goto handle_unusual;
        continue;
      // string parent_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CreateGroupFileFolder.Params.parent_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateGroupFileFolder_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CreateGroupFileFolder.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CreateGroupFileFolder.Params.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string parent_id = 3;
  if (!this->_internal_parent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CreateGroupFileFolder.Params.parent_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CreateGroupFileFolder.Params)
  return target;
}

size_t CreateGroupFileFolder_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CreateGroupFileFolder.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string parent_id = 3;
  if (!this->_internal_parent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateGroupFileFolder_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateGroupFileFolder_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateGroupFileFolder_Params::GetClassData() const { return &_class_data_; }


void CreateGroupFileFolder_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateGroupFileFolder_Params*>(&to_msg);
  auto& from = static_cast<const CreateGroupFileFolder_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CreateGroupFileFolder.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_parent_id().empty()) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateGroupFileFolder_Params::CopyFrom(const CreateGroupFileFolder_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CreateGroupFileFolder.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupFileFolder_Params::IsInitialized() const {
  return true;
}

void CreateGroupFileFolder_Params::InternalSwap(CreateGroupFileFolder_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_id_, lhs_arena,
      &other->_impl_.parent_id_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupFileFolder_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[132]);
}

// ===================================================================

class CreateGroupFileFolder::_Internal {
 public:
  static const ::cqhttp::CreateGroupFileFolder_Params& params(const CreateGroupFileFolder* msg);
};

const ::cqhttp::CreateGroupFileFolder_Params&
CreateGroupFileFolder::_Internal::params(const CreateGroupFileFolder* msg) {
  return *msg->_impl_.params_;
}
CreateGroupFileFolder::CreateGroupFileFolder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CreateGroupFileFolder)
}
CreateGroupFileFolder::CreateGroupFileFolder(const CreateGroupFileFolder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateGroupFileFolder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::CreateGroupFileFolder_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CreateGroupFileFolder)
}

inline void CreateGroupFileFolder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateGroupFileFolder::~CreateGroupFileFolder() {
  // @@protoc_insertion_point(destructor:cqhttp.CreateGroupFileFolder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateGroupFileFolder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void CreateGroupFileFolder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateGroupFileFolder::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CreateGroupFileFolder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupFileFolder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.CreateGroupFileFolder.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateGroupFileFolder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CreateGroupFileFolder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.CreateGroupFileFolder.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CreateGroupFileFolder)
  return target;
}

size_t CreateGroupFileFolder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CreateGroupFileFolder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.CreateGroupFileFolder.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateGroupFileFolder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateGroupFileFolder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateGroupFileFolder::GetClassData() const { return &_class_data_; }


void CreateGroupFileFolder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateGroupFileFolder*>(&to_msg);
  auto& from = static_cast<const CreateGroupFileFolder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CreateGroupFileFolder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::CreateGroupFileFolder_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateGroupFileFolder::CopyFrom(const CreateGroupFileFolder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CreateGroupFileFolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupFileFolder::IsInitialized() const {
  return true;
}

void CreateGroupFileFolder::InternalSwap(CreateGroupFileFolder* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateGroupFileFolder, _impl_.action_)
      + sizeof(CreateGroupFileFolder::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(CreateGroupFileFolder, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupFileFolder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[133]);
}

// ===================================================================

class DeleteGroupFolder_Params::_Internal {
 public:
};

DeleteGroupFolder_Params::DeleteGroupFolder_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteGroupFolder.Params)
}
DeleteGroupFolder_Params::DeleteGroupFolder_Params(const DeleteGroupFolder_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteGroupFolder_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.folder_id_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.folder_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_folder_id().empty()) {
    _this->_impl_.folder_id_.Set(from._internal_folder_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteGroupFolder.Params)
}

inline void DeleteGroupFolder_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.folder_id_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.folder_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.folder_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteGroupFolder_Params::~DeleteGroupFolder_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteGroupFolder.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteGroupFolder_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.folder_id_.Destroy();
}

void DeleteGroupFolder_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteGroupFolder_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteGroupFolder.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.folder_id_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupFolder_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string folder_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_folder_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DeleteGroupFolder.Params.folder_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteGroupFolder_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteGroupFolder.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string folder_id = 2;
  if (!this->_internal_folder_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_folder_id().data(), static_cast<int>(this->_internal_folder_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DeleteGroupFolder.Params.folder_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_folder_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteGroupFolder.Params)
  return target;
}

size_t DeleteGroupFolder_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteGroupFolder.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string folder_id = 2;
  if (!this->_internal_folder_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_folder_id());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteGroupFolder_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteGroupFolder_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteGroupFolder_Params::GetClassData() const { return &_class_data_; }


void DeleteGroupFolder_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteGroupFolder_Params*>(&to_msg);
  auto& from = static_cast<const DeleteGroupFolder_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteGroupFolder.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_folder_id().empty()) {
    _this->_internal_set_folder_id(from._internal_folder_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteGroupFolder_Params::CopyFrom(const DeleteGroupFolder_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteGroupFolder.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupFolder_Params::IsInitialized() const {
  return true;
}

void DeleteGroupFolder_Params::InternalSwap(DeleteGroupFolder_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.folder_id_, lhs_arena,
      &other->_impl_.folder_id_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupFolder_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[134]);
}

// ===================================================================

class DeleteGroupFolder::_Internal {
 public:
  static const ::cqhttp::DeleteGroupFolder_Params& params(const DeleteGroupFolder* msg);
};

const ::cqhttp::DeleteGroupFolder_Params&
DeleteGroupFolder::_Internal::params(const DeleteGroupFolder* msg) {
  return *msg->_impl_.params_;
}
DeleteGroupFolder::DeleteGroupFolder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteGroupFolder)
}
DeleteGroupFolder::DeleteGroupFolder(const DeleteGroupFolder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteGroupFolder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteGroupFolder_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteGroupFolder)
}

inline void DeleteGroupFolder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteGroupFolder::~DeleteGroupFolder() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteGroupFolder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteGroupFolder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteGroupFolder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteGroupFolder::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteGroupFolder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupFolder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteGroupFolder.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteGroupFolder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteGroupFolder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteGroupFolder.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteGroupFolder)
  return target;
}

size_t DeleteGroupFolder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteGroupFolder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteGroupFolder.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteGroupFolder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteGroupFolder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteGroupFolder::GetClassData() const { return &_class_data_; }


void DeleteGroupFolder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteGroupFolder*>(&to_msg);
  auto& from = static_cast<const DeleteGroupFolder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteGroupFolder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteGroupFolder_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteGroupFolder::CopyFrom(const DeleteGroupFolder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteGroupFolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupFolder::IsInitialized() const {
  return true;
}

void DeleteGroupFolder::InternalSwap(DeleteGroupFolder* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteGroupFolder, _impl_.action_)
      + sizeof(DeleteGroupFolder::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteGroupFolder, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupFolder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[135]);
}

// ===================================================================

class DeleteGroupFile_Params::_Internal {
 public:
};

DeleteGroupFile_Params::DeleteGroupFile_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteGroupFile.Params)
}
DeleteGroupFile_Params::DeleteGroupFile_Params(const DeleteGroupFile_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteGroupFile_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.busid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_id().empty()) {
    _this->_impl_.file_id_.Set(from._internal_file_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.busid_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.busid_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteGroupFile.Params)
}

inline void DeleteGroupFile_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_id_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.busid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteGroupFile_Params::~DeleteGroupFile_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteGroupFile.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteGroupFile_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_id_.Destroy();
}

void DeleteGroupFile_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteGroupFile_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteGroupFile.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_id_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.busid_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.busid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupFile_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DeleteGroupFile.Params.file_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 busid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.busid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteGroupFile_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteGroupFile.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string file_id = 2;
  if (!this->_internal_file_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_id().data(), static_cast<int>(this->_internal_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DeleteGroupFile.Params.file_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_id(), target);
  }

  // int32 busid = 3;
  if (this->_internal_busid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_busid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteGroupFile.Params)
  return target;
}

size_t DeleteGroupFile_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteGroupFile.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_id = 2;
  if (!this->_internal_file_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_id());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int32 busid = 3;
  if (this->_internal_busid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_busid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteGroupFile_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteGroupFile_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteGroupFile_Params::GetClassData() const { return &_class_data_; }


void DeleteGroupFile_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteGroupFile_Params*>(&to_msg);
  auto& from = static_cast<const DeleteGroupFile_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteGroupFile.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_id().empty()) {
    _this->_internal_set_file_id(from._internal_file_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_busid() != 0) {
    _this->_internal_set_busid(from._internal_busid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteGroupFile_Params::CopyFrom(const DeleteGroupFile_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteGroupFile.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupFile_Params::IsInitialized() const {
  return true;
}

void DeleteGroupFile_Params::InternalSwap(DeleteGroupFile_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_id_, lhs_arena,
      &other->_impl_.file_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteGroupFile_Params, _impl_.busid_)
      + sizeof(DeleteGroupFile_Params::_impl_.busid_)
      - PROTOBUF_FIELD_OFFSET(DeleteGroupFile_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupFile_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[136]);
}

// ===================================================================

class DeleteGroupFile::_Internal {
 public:
  static const ::cqhttp::DeleteGroupFile_Params& params(const DeleteGroupFile* msg);
};

const ::cqhttp::DeleteGroupFile_Params&
DeleteGroupFile::_Internal::params(const DeleteGroupFile* msg) {
  return *msg->_impl_.params_;
}
DeleteGroupFile::DeleteGroupFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteGroupFile)
}
DeleteGroupFile::DeleteGroupFile(const DeleteGroupFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteGroupFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteGroupFile_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteGroupFile)
}

inline void DeleteGroupFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteGroupFile::~DeleteGroupFile() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteGroupFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteGroupFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteGroupFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteGroupFile::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteGroupFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteGroupFile.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteGroupFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteGroupFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteGroupFile.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteGroupFile)
  return target;
}

size_t DeleteGroupFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteGroupFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteGroupFile.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteGroupFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteGroupFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteGroupFile::GetClassData() const { return &_class_data_; }


void DeleteGroupFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteGroupFile*>(&to_msg);
  auto& from = static_cast<const DeleteGroupFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteGroupFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteGroupFile_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteGroupFile::CopyFrom(const DeleteGroupFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteGroupFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupFile::IsInitialized() const {
  return true;
}

void DeleteGroupFile::InternalSwap(DeleteGroupFile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteGroupFile, _impl_.action_)
      + sizeof(DeleteGroupFile::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteGroupFile, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[137]);
}

// ===================================================================

class GetGroupFileUrl_Params::_Internal {
 public:
};

GetGroupFileUrl_Params::GetGroupFileUrl_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileUrl.Params)
}
GetGroupFileUrl_Params::GetGroupFileUrl_Params(const GetGroupFileUrl_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileUrl_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.busid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_id().empty()) {
    _this->_impl_.file_id_.Set(from._internal_file_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.group_id_, &from._impl_.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.busid_) -
    reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.busid_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileUrl.Params)
}

inline void GetGroupFileUrl_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_id_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , decltype(_impl_.busid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupFileUrl_Params::~GetGroupFileUrl_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileUrl.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileUrl_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_id_.Destroy();
}

void GetGroupFileUrl_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileUrl_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileUrl.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_id_.ClearToEmpty();
  ::memset(&_impl_.group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.busid_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.busid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileUrl_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string file_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupFileUrl.Params.file_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 busid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.busid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileUrl_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileUrl.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string file_id = 2;
  if (!this->_internal_file_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_id().data(), static_cast<int>(this->_internal_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupFileUrl.Params.file_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_id(), target);
  }

  // int32 busid = 3;
  if (this->_internal_busid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_busid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileUrl.Params)
  return target;
}

size_t GetGroupFileUrl_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileUrl.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_id = 2;
  if (!this->_internal_file_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_id());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  // int32 busid = 3;
  if (this->_internal_busid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_busid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileUrl_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileUrl_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileUrl_Params::GetClassData() const { return &_class_data_; }


void GetGroupFileUrl_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileUrl_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupFileUrl_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileUrl.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_id().empty()) {
    _this->_internal_set_file_id(from._internal_file_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_busid() != 0) {
    _this->_internal_set_busid(from._internal_busid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileUrl_Params::CopyFrom(const GetGroupFileUrl_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileUrl.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileUrl_Params::IsInitialized() const {
  return true;
}

void GetGroupFileUrl_Params::InternalSwap(GetGroupFileUrl_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_id_, lhs_arena,
      &other->_impl_.file_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupFileUrl_Params, _impl_.busid_)
      + sizeof(GetGroupFileUrl_Params::_impl_.busid_)
      - PROTOBUF_FIELD_OFFSET(GetGroupFileUrl_Params, _impl_.group_id_)>(
          reinterpret_cast<char*>(&_impl_.group_id_),
          reinterpret_cast<char*>(&other->_impl_.group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileUrl_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[138]);
}

// ===================================================================

class GetGroupFileUrl::_Internal {
 public:
  static const ::cqhttp::GetGroupFileUrl_Params& params(const GetGroupFileUrl* msg);
};

const ::cqhttp::GetGroupFileUrl_Params&
GetGroupFileUrl::_Internal::params(const GetGroupFileUrl* msg) {
  return *msg->_impl_.params_;
}
GetGroupFileUrl::GetGroupFileUrl(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileUrl)
}
GetGroupFileUrl::GetGroupFileUrl(const GetGroupFileUrl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileUrl* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupFileUrl_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileUrl)
}

inline void GetGroupFileUrl::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupFileUrl::~GetGroupFileUrl() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileUrl)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileUrl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupFileUrl::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileUrl)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileUrl::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupFileUrl.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupFileUrl.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileUrl::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileUrl)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupFileUrl.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupFileUrl.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileUrl)
  return target;
}

size_t GetGroupFileUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileUrl)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupFileUrl.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileUrl::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileUrl::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileUrl::GetClassData() const { return &_class_data_; }


void GetGroupFileUrl::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileUrl*>(&to_msg);
  auto& from = static_cast<const GetGroupFileUrl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileUrl)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupFileUrl_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileUrl::CopyFrom(const GetGroupFileUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileUrl::IsInitialized() const {
  return true;
}

void GetGroupFileUrl::InternalSwap(GetGroupFileUrl* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupFileUrl, _impl_.action_)
      + sizeof(GetGroupFileUrl::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupFileUrl, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileUrl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[139]);
}

// ===================================================================

class GetGroupFileUrlResp::_Internal {
 public:
};

GetGroupFileUrlResp::GetGroupFileUrlResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupFileUrlResp)
}
GetGroupFileUrlResp::GetGroupFileUrlResp(const GetGroupFileUrlResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupFileUrlResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupFileUrlResp)
}

inline void GetGroupFileUrlResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupFileUrlResp::~GetGroupFileUrlResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupFileUrlResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupFileUrlResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
}

void GetGroupFileUrlResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupFileUrlResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupFileUrlResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupFileUrlResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupFileUrlResp.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupFileUrlResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupFileUrlResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupFileUrlResp.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupFileUrlResp)
  return target;
}

size_t GetGroupFileUrlResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupFileUrlResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupFileUrlResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupFileUrlResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupFileUrlResp::GetClassData() const { return &_class_data_; }


void GetGroupFileUrlResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupFileUrlResp*>(&to_msg);
  auto& from = static_cast<const GetGroupFileUrlResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupFileUrlResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupFileUrlResp::CopyFrom(const GetGroupFileUrlResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupFileUrlResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupFileUrlResp::IsInitialized() const {
  return true;
}

void GetGroupFileUrlResp::InternalSwap(GetGroupFileUrlResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupFileUrlResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[140]);
}

// ===================================================================

class GetStatus::_Internal {
 public:
};

GetStatus::GetStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStatus)
}
GetStatus::GetStatus(const GetStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStatus)
}

inline void GetStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStatus::~GetStatus() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
}

void GetStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // string echo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetStatus.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetStatus.echo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStatus)
  return target;
}

size_t GetStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 2;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatus::GetClassData() const { return &_class_data_; }


void GetStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatus*>(&to_msg);
  auto& from = static_cast<const GetStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatus::CopyFrom(const GetStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatus::IsInitialized() const {
  return true;
}

void GetStatus::InternalSwap(GetStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[141]);
}

// ===================================================================

class GetStatusResp_Statistics::_Internal {
 public:
};

GetStatusResp_Statistics::GetStatusResp_Statistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStatusResp.Statistics)
}
GetStatusResp_Statistics::GetStatusResp_Statistics(const GetStatusResp_Statistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatusResp_Statistics* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.packetreceived_){}
    , decltype(_impl_.packetsent_){}
    , decltype(_impl_.messagereceived_){}
    , decltype(_impl_.packetlost_){}
    , decltype(_impl_.disconnecttimes_){}
    , decltype(_impl_.messagesent_){}
    , decltype(_impl_.lastmessagetime_){}
    , decltype(_impl_.losttimes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.packetreceived_, &from._impl_.packetreceived_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.losttimes_) -
    reinterpret_cast<char*>(&_impl_.packetreceived_)) + sizeof(_impl_.losttimes_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStatusResp.Statistics)
}

inline void GetStatusResp_Statistics::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.packetreceived_){uint64_t{0u}}
    , decltype(_impl_.packetsent_){uint64_t{0u}}
    , decltype(_impl_.messagereceived_){uint64_t{0u}}
    , decltype(_impl_.packetlost_){0u}
    , decltype(_impl_.disconnecttimes_){0u}
    , decltype(_impl_.messagesent_){uint64_t{0u}}
    , decltype(_impl_.lastmessagetime_){int64_t{0}}
    , decltype(_impl_.losttimes_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStatusResp_Statistics::~GetStatusResp_Statistics() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStatusResp.Statistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusResp_Statistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusResp_Statistics::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatusResp_Statistics::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStatusResp.Statistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.packetreceived_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.losttimes_) -
      reinterpret_cast<char*>(&_impl_.packetreceived_)) + sizeof(_impl_.losttimes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResp_Statistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 PacketReceived = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.packetreceived_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 PacketSent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.packetsent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PacketLost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.packetlost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 MessageReceived = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.messagereceived_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 MessageSent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.messagesent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 DisconnectTimes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.disconnecttimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LostTimes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.losttimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 LastMessageTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.lastmessagetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusResp_Statistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStatusResp.Statistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 PacketReceived = 1;
  if (this->_internal_packetreceived() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_packetreceived(), target);
  }

  // uint64 PacketSent = 2;
  if (this->_internal_packetsent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_packetsent(), target);
  }

  // uint32 PacketLost = 3;
  if (this->_internal_packetlost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_packetlost(), target);
  }

  // uint64 MessageReceived = 4;
  if (this->_internal_messagereceived() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_messagereceived(), target);
  }

  // uint64 MessageSent = 5;
  if (this->_internal_messagesent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_messagesent(), target);
  }

  // uint32 DisconnectTimes = 6;
  if (this->_internal_disconnecttimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_disconnecttimes(), target);
  }

  // uint32 LostTimes = 7;
  if (this->_internal_losttimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_losttimes(), target);
  }

  // int64 LastMessageTime = 8;
  if (this->_internal_lastmessagetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_lastmessagetime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStatusResp.Statistics)
  return target;
}

size_t GetStatusResp_Statistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStatusResp.Statistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 PacketReceived = 1;
  if (this->_internal_packetreceived() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_packetreceived());
  }

  // uint64 PacketSent = 2;
  if (this->_internal_packetsent() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_packetsent());
  }

  // uint64 MessageReceived = 4;
  if (this->_internal_messagereceived() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_messagereceived());
  }

  // uint32 PacketLost = 3;
  if (this->_internal_packetlost() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_packetlost());
  }

  // uint32 DisconnectTimes = 6;
  if (this->_internal_disconnecttimes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_disconnecttimes());
  }

  // uint64 MessageSent = 5;
  if (this->_internal_messagesent() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_messagesent());
  }

  // int64 LastMessageTime = 8;
  if (this->_internal_lastmessagetime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_lastmessagetime());
  }

  // uint32 LostTimes = 7;
  if (this->_internal_losttimes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_losttimes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusResp_Statistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatusResp_Statistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusResp_Statistics::GetClassData() const { return &_class_data_; }


void GetStatusResp_Statistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatusResp_Statistics*>(&to_msg);
  auto& from = static_cast<const GetStatusResp_Statistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStatusResp.Statistics)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_packetreceived() != 0) {
    _this->_internal_set_packetreceived(from._internal_packetreceived());
  }
  if (from._internal_packetsent() != 0) {
    _this->_internal_set_packetsent(from._internal_packetsent());
  }
  if (from._internal_messagereceived() != 0) {
    _this->_internal_set_messagereceived(from._internal_messagereceived());
  }
  if (from._internal_packetlost() != 0) {
    _this->_internal_set_packetlost(from._internal_packetlost());
  }
  if (from._internal_disconnecttimes() != 0) {
    _this->_internal_set_disconnecttimes(from._internal_disconnecttimes());
  }
  if (from._internal_messagesent() != 0) {
    _this->_internal_set_messagesent(from._internal_messagesent());
  }
  if (from._internal_lastmessagetime() != 0) {
    _this->_internal_set_lastmessagetime(from._internal_lastmessagetime());
  }
  if (from._internal_losttimes() != 0) {
    _this->_internal_set_losttimes(from._internal_losttimes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusResp_Statistics::CopyFrom(const GetStatusResp_Statistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStatusResp.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResp_Statistics::IsInitialized() const {
  return true;
}

void GetStatusResp_Statistics::InternalSwap(GetStatusResp_Statistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResp_Statistics, _impl_.losttimes_)
      + sizeof(GetStatusResp_Statistics::_impl_.losttimes_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResp_Statistics, _impl_.packetreceived_)>(
          reinterpret_cast<char*>(&_impl_.packetreceived_),
          reinterpret_cast<char*>(&other->_impl_.packetreceived_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResp_Statistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[142]);
}

// ===================================================================

class GetStatusResp::_Internal {
 public:
  static const ::cqhttp::GetStatusResp_Statistics& stat(const GetStatusResp* msg);
};

const ::cqhttp::GetStatusResp_Statistics&
GetStatusResp::_Internal::stat(const GetStatusResp* msg) {
  return *msg->_impl_.stat_;
}
GetStatusResp::GetStatusResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetStatusResp)
}
GetStatusResp::GetStatusResp(const GetStatusResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatusResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stat_){nullptr}
    , decltype(_impl_.app_initialized_){}
    , decltype(_impl_.app_enabled_){}
    , decltype(_impl_.plugins_good_){}
    , decltype(_impl_.app_good_){}
    , decltype(_impl_.online_){}
    , decltype(_impl_.good_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stat()) {
    _this->_impl_.stat_ = new ::cqhttp::GetStatusResp_Statistics(*from._impl_.stat_);
  }
  ::memcpy(&_impl_.app_initialized_, &from._impl_.app_initialized_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.good_) -
    reinterpret_cast<char*>(&_impl_.app_initialized_)) + sizeof(_impl_.good_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetStatusResp)
}

inline void GetStatusResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stat_){nullptr}
    , decltype(_impl_.app_initialized_){false}
    , decltype(_impl_.app_enabled_){false}
    , decltype(_impl_.plugins_good_){false}
    , decltype(_impl_.app_good_){false}
    , decltype(_impl_.online_){false}
    , decltype(_impl_.good_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStatusResp::~GetStatusResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetStatusResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stat_;
}

void GetStatusResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatusResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetStatusResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stat_ != nullptr) {
    delete _impl_.stat_;
  }
  _impl_.stat_ = nullptr;
  ::memset(&_impl_.app_initialized_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.good_) -
      reinterpret_cast<char*>(&_impl_.app_initialized_)) + sizeof(_impl_.good_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool app_initialized = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.app_initialized_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool app_enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.app_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool plugins_good = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.plugins_good_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool app_good = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.app_good_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool online = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool good = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.good_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetStatusResp.Statistics stat = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetStatusResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool app_initialized = 1;
  if (this->_internal_app_initialized() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_app_initialized(), target);
  }

  // bool app_enabled = 2;
  if (this->_internal_app_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_app_enabled(), target);
  }

  // bool plugins_good = 3;
  if (this->_internal_plugins_good() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_plugins_good(), target);
  }

  // bool app_good = 4;
  if (this->_internal_app_good() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_app_good(), target);
  }

  // bool online = 5;
  if (this->_internal_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_online(), target);
  }

  // bool good = 6;
  if (this->_internal_good() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_good(), target);
  }

  // .cqhttp.GetStatusResp.Statistics stat = 7;
  if (this->_internal_has_stat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::stat(this),
        _Internal::stat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetStatusResp)
  return target;
}

size_t GetStatusResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetStatusResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.GetStatusResp.Statistics stat = 7;
  if (this->_internal_has_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stat_);
  }

  // bool app_initialized = 1;
  if (this->_internal_app_initialized() != 0) {
    total_size += 1 + 1;
  }

  // bool app_enabled = 2;
  if (this->_internal_app_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool plugins_good = 3;
  if (this->_internal_plugins_good() != 0) {
    total_size += 1 + 1;
  }

  // bool app_good = 4;
  if (this->_internal_app_good() != 0) {
    total_size += 1 + 1;
  }

  // bool online = 5;
  if (this->_internal_online() != 0) {
    total_size += 1 + 1;
  }

  // bool good = 6;
  if (this->_internal_good() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatusResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusResp::GetClassData() const { return &_class_data_; }


void GetStatusResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatusResp*>(&to_msg);
  auto& from = static_cast<const GetStatusResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetStatusResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stat()) {
    _this->_internal_mutable_stat()->::cqhttp::GetStatusResp_Statistics::MergeFrom(
        from._internal_stat());
  }
  if (from._internal_app_initialized() != 0) {
    _this->_internal_set_app_initialized(from._internal_app_initialized());
  }
  if (from._internal_app_enabled() != 0) {
    _this->_internal_set_app_enabled(from._internal_app_enabled());
  }
  if (from._internal_plugins_good() != 0) {
    _this->_internal_set_plugins_good(from._internal_plugins_good());
  }
  if (from._internal_app_good() != 0) {
    _this->_internal_set_app_good(from._internal_app_good());
  }
  if (from._internal_online() != 0) {
    _this->_internal_set_online(from._internal_online());
  }
  if (from._internal_good() != 0) {
    _this->_internal_set_good(from._internal_good());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusResp::CopyFrom(const GetStatusResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResp::IsInitialized() const {
  return true;
}

void GetStatusResp::InternalSwap(GetStatusResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResp, _impl_.good_)
      + sizeof(GetStatusResp::_impl_.good_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResp, _impl_.stat_)>(
          reinterpret_cast<char*>(&_impl_.stat_),
          reinterpret_cast<char*>(&other->_impl_.stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[143]);
}

// ===================================================================

class GetGroupAtAllRemain_Params::_Internal {
 public:
};

GetGroupAtAllRemain_Params::GetGroupAtAllRemain_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupAtAllRemain.Params)
}
GetGroupAtAllRemain_Params::GetGroupAtAllRemain_Params(const GetGroupAtAllRemain_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupAtAllRemain_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupAtAllRemain.Params)
}

inline void GetGroupAtAllRemain_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupAtAllRemain_Params::~GetGroupAtAllRemain_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupAtAllRemain.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupAtAllRemain_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupAtAllRemain_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupAtAllRemain_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupAtAllRemain.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupAtAllRemain_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupAtAllRemain_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupAtAllRemain.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupAtAllRemain.Params)
  return target;
}

size_t GetGroupAtAllRemain_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupAtAllRemain.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupAtAllRemain_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupAtAllRemain_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupAtAllRemain_Params::GetClassData() const { return &_class_data_; }


void GetGroupAtAllRemain_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupAtAllRemain_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupAtAllRemain_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupAtAllRemain.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupAtAllRemain_Params::CopyFrom(const GetGroupAtAllRemain_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupAtAllRemain.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupAtAllRemain_Params::IsInitialized() const {
  return true;
}

void GetGroupAtAllRemain_Params::InternalSwap(GetGroupAtAllRemain_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupAtAllRemain_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[144]);
}

// ===================================================================

class GetGroupAtAllRemain::_Internal {
 public:
  static const ::cqhttp::GetGroupAtAllRemain_Params& params(const GetGroupAtAllRemain* msg);
};

const ::cqhttp::GetGroupAtAllRemain_Params&
GetGroupAtAllRemain::_Internal::params(const GetGroupAtAllRemain* msg) {
  return *msg->_impl_.params_;
}
GetGroupAtAllRemain::GetGroupAtAllRemain(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupAtAllRemain)
}
GetGroupAtAllRemain::GetGroupAtAllRemain(const GetGroupAtAllRemain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupAtAllRemain* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupAtAllRemain_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupAtAllRemain)
}

inline void GetGroupAtAllRemain::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupAtAllRemain::~GetGroupAtAllRemain() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupAtAllRemain)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupAtAllRemain::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupAtAllRemain::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupAtAllRemain::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupAtAllRemain)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupAtAllRemain::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupAtAllRemain.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupAtAllRemain.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupAtAllRemain::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupAtAllRemain)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupAtAllRemain.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupAtAllRemain.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupAtAllRemain)
  return target;
}

size_t GetGroupAtAllRemain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupAtAllRemain)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupAtAllRemain.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupAtAllRemain::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupAtAllRemain::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupAtAllRemain::GetClassData() const { return &_class_data_; }


void GetGroupAtAllRemain::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupAtAllRemain*>(&to_msg);
  auto& from = static_cast<const GetGroupAtAllRemain&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupAtAllRemain)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupAtAllRemain_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupAtAllRemain::CopyFrom(const GetGroupAtAllRemain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupAtAllRemain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupAtAllRemain::IsInitialized() const {
  return true;
}

void GetGroupAtAllRemain::InternalSwap(GetGroupAtAllRemain* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupAtAllRemain, _impl_.action_)
      + sizeof(GetGroupAtAllRemain::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupAtAllRemain, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupAtAllRemain::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[145]);
}

// ===================================================================

class GetGroupAtAllRemainResp::_Internal {
 public:
};

GetGroupAtAllRemainResp::GetGroupAtAllRemainResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupAtAllRemainResp)
}
GetGroupAtAllRemainResp::GetGroupAtAllRemainResp(const GetGroupAtAllRemainResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupAtAllRemainResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.can_at_all_){}
    , decltype(_impl_.remain_at_all_count_for_group_){}
    , decltype(_impl_.remain_at_all_count_for_uin_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.can_at_all_, &from._impl_.can_at_all_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.remain_at_all_count_for_uin_) -
    reinterpret_cast<char*>(&_impl_.can_at_all_)) + sizeof(_impl_.remain_at_all_count_for_uin_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupAtAllRemainResp)
}

inline void GetGroupAtAllRemainResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.can_at_all_){false}
    , decltype(_impl_.remain_at_all_count_for_group_){0}
    , decltype(_impl_.remain_at_all_count_for_uin_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupAtAllRemainResp::~GetGroupAtAllRemainResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupAtAllRemainResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupAtAllRemainResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupAtAllRemainResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupAtAllRemainResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupAtAllRemainResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.can_at_all_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.remain_at_all_count_for_uin_) -
      reinterpret_cast<char*>(&_impl_.can_at_all_)) + sizeof(_impl_.remain_at_all_count_for_uin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupAtAllRemainResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool can_at_all = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.can_at_all_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 remain_at_all_count_for_group = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.remain_at_all_count_for_group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 remain_at_all_count_for_uin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.remain_at_all_count_for_uin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupAtAllRemainResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupAtAllRemainResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool can_at_all = 1;
  if (this->_internal_can_at_all() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_can_at_all(), target);
  }

  // int32 remain_at_all_count_for_group = 2;
  if (this->_internal_remain_at_all_count_for_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_remain_at_all_count_for_group(), target);
  }

  // int32 remain_at_all_count_for_uin = 3;
  if (this->_internal_remain_at_all_count_for_uin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_remain_at_all_count_for_uin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupAtAllRemainResp)
  return target;
}

size_t GetGroupAtAllRemainResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupAtAllRemainResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool can_at_all = 1;
  if (this->_internal_can_at_all() != 0) {
    total_size += 1 + 1;
  }

  // int32 remain_at_all_count_for_group = 2;
  if (this->_internal_remain_at_all_count_for_group() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_remain_at_all_count_for_group());
  }

  // int32 remain_at_all_count_for_uin = 3;
  if (this->_internal_remain_at_all_count_for_uin() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_remain_at_all_count_for_uin());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupAtAllRemainResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupAtAllRemainResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupAtAllRemainResp::GetClassData() const { return &_class_data_; }


void GetGroupAtAllRemainResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupAtAllRemainResp*>(&to_msg);
  auto& from = static_cast<const GetGroupAtAllRemainResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupAtAllRemainResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_can_at_all() != 0) {
    _this->_internal_set_can_at_all(from._internal_can_at_all());
  }
  if (from._internal_remain_at_all_count_for_group() != 0) {
    _this->_internal_set_remain_at_all_count_for_group(from._internal_remain_at_all_count_for_group());
  }
  if (from._internal_remain_at_all_count_for_uin() != 0) {
    _this->_internal_set_remain_at_all_count_for_uin(from._internal_remain_at_all_count_for_uin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupAtAllRemainResp::CopyFrom(const GetGroupAtAllRemainResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupAtAllRemainResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupAtAllRemainResp::IsInitialized() const {
  return true;
}

void GetGroupAtAllRemainResp::InternalSwap(GetGroupAtAllRemainResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupAtAllRemainResp, _impl_.remain_at_all_count_for_uin_)
      + sizeof(GetGroupAtAllRemainResp::_impl_.remain_at_all_count_for_uin_)
      - PROTOBUF_FIELD_OFFSET(GetGroupAtAllRemainResp, _impl_.can_at_all_)>(
          reinterpret_cast<char*>(&_impl_.can_at_all_),
          reinterpret_cast<char*>(&other->_impl_.can_at_all_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupAtAllRemainResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[146]);
}

// ===================================================================

class HandleQuickOperation_Params::_Internal {
 public:
};

HandleQuickOperation_Params::HandleQuickOperation_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.HandleQuickOperation.Params)
}
HandleQuickOperation_Params::HandleQuickOperation_Params(const HandleQuickOperation_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HandleQuickOperation_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.operation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation().empty()) {
    _this->_impl_.operation_.Set(from._internal_operation(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.HandleQuickOperation.Params)
}

inline void HandleQuickOperation_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.operation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HandleQuickOperation_Params::~HandleQuickOperation_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.HandleQuickOperation.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HandleQuickOperation_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
  _impl_.operation_.Destroy();
}

void HandleQuickOperation_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HandleQuickOperation_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.HandleQuickOperation.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.operation_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandleQuickOperation_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.HandleQuickOperation.Params.content"));
        } else
          goto handle_unusual;
        continue;
      // string operation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_operation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.HandleQuickOperation.Params.operation"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandleQuickOperation_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.HandleQuickOperation.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.HandleQuickOperation.Params.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  // string operation = 2;
  if (!this->_internal_operation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation().data(), static_cast<int>(this->_internal_operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.HandleQuickOperation.Params.operation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.HandleQuickOperation.Params)
  return target;
}

size_t HandleQuickOperation_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.HandleQuickOperation.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string operation = 2;
  if (!this->_internal_operation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandleQuickOperation_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HandleQuickOperation_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandleQuickOperation_Params::GetClassData() const { return &_class_data_; }


void HandleQuickOperation_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HandleQuickOperation_Params*>(&to_msg);
  auto& from = static_cast<const HandleQuickOperation_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.HandleQuickOperation.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_operation().empty()) {
    _this->_internal_set_operation(from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandleQuickOperation_Params::CopyFrom(const HandleQuickOperation_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.HandleQuickOperation.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleQuickOperation_Params::IsInitialized() const {
  return true;
}

void HandleQuickOperation_Params::InternalSwap(HandleQuickOperation_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_, lhs_arena,
      &other->_impl_.operation_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HandleQuickOperation_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[147]);
}

// ===================================================================

class HandleQuickOperation::_Internal {
 public:
  static const ::cqhttp::HandleQuickOperation_Params& params(const HandleQuickOperation* msg);
};

const ::cqhttp::HandleQuickOperation_Params&
HandleQuickOperation::_Internal::params(const HandleQuickOperation* msg) {
  return *msg->_impl_.params_;
}
HandleQuickOperation::HandleQuickOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.HandleQuickOperation)
}
HandleQuickOperation::HandleQuickOperation(const HandleQuickOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HandleQuickOperation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::HandleQuickOperation_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.HandleQuickOperation)
}

inline void HandleQuickOperation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

HandleQuickOperation::~HandleQuickOperation() {
  // @@protoc_insertion_point(destructor:cqhttp.HandleQuickOperation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HandleQuickOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void HandleQuickOperation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HandleQuickOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.HandleQuickOperation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandleQuickOperation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.HandleQuickOperation.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandleQuickOperation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.HandleQuickOperation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.HandleQuickOperation.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.HandleQuickOperation)
  return target;
}

size_t HandleQuickOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.HandleQuickOperation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.HandleQuickOperation.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandleQuickOperation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HandleQuickOperation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandleQuickOperation::GetClassData() const { return &_class_data_; }


void HandleQuickOperation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HandleQuickOperation*>(&to_msg);
  auto& from = static_cast<const HandleQuickOperation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.HandleQuickOperation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::HandleQuickOperation_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandleQuickOperation::CopyFrom(const HandleQuickOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.HandleQuickOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleQuickOperation::IsInitialized() const {
  return true;
}

void HandleQuickOperation::InternalSwap(HandleQuickOperation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandleQuickOperation, _impl_.action_)
      + sizeof(HandleQuickOperation::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(HandleQuickOperation, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HandleQuickOperation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[148]);
}

// ===================================================================

class SendGroupNotice_Params::_Internal {
 public:
};

SendGroupNotice_Params::SendGroupNotice_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupNotice.Params)
}
SendGroupNotice_Params::SendGroupNotice_Params(const SendGroupNotice_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupNotice_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.image_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_image().empty()) {
    _this->_impl_.image_.Set(from._internal_image(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupNotice.Params)
}

inline void SendGroupNotice_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , decltype(_impl_.image_){}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendGroupNotice_Params::~SendGroupNotice_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupNotice.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupNotice_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
  _impl_.image_.Destroy();
}

void SendGroupNotice_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupNotice_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupNotice.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.image_.ClearToEmpty();
  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupNotice_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupNotice.Params.content"));
        } else
          goto handle_unusual;
        continue;
      // string image = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_image();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendGroupNotice.Params.image"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupNotice_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupNotice.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupNotice.Params.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string image = 3;
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendGroupNotice.Params.image");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_image(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupNotice.Params)
  return target;
}

size_t SendGroupNotice_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupNotice.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string image = 3;
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupNotice_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupNotice_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupNotice_Params::GetClassData() const { return &_class_data_; }


void SendGroupNotice_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupNotice_Params*>(&to_msg);
  auto& from = static_cast<const SendGroupNotice_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupNotice.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupNotice_Params::CopyFrom(const SendGroupNotice_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupNotice.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupNotice_Params::IsInitialized() const {
  return true;
}

void SendGroupNotice_Params::InternalSwap(SendGroupNotice_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_, lhs_arena,
      &other->_impl_.image_, rhs_arena
  );
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupNotice_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[149]);
}

// ===================================================================

class SendGroupNotice::_Internal {
 public:
  static const ::cqhttp::SendGroupNotice_Params& params(const SendGroupNotice* msg);
};

const ::cqhttp::SendGroupNotice_Params&
SendGroupNotice::_Internal::params(const SendGroupNotice* msg) {
  return *msg->_impl_.params_;
}
SendGroupNotice::SendGroupNotice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendGroupNotice)
}
SendGroupNotice::SendGroupNotice(const SendGroupNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendGroupNotice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendGroupNotice_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendGroupNotice)
}

inline void SendGroupNotice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendGroupNotice::~SendGroupNotice() {
  // @@protoc_insertion_point(destructor:cqhttp.SendGroupNotice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendGroupNotice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendGroupNotice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendGroupNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendGroupNotice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGroupNotice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendGroupNotice.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendGroupNotice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendGroupNotice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendGroupNotice.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendGroupNotice)
  return target;
}

size_t SendGroupNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendGroupNotice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SendGroupNotice.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGroupNotice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendGroupNotice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGroupNotice::GetClassData() const { return &_class_data_; }


void SendGroupNotice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendGroupNotice*>(&to_msg);
  auto& from = static_cast<const SendGroupNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendGroupNotice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendGroupNotice_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGroupNotice::CopyFrom(const SendGroupNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendGroupNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGroupNotice::IsInitialized() const {
  return true;
}

void SendGroupNotice::InternalSwap(SendGroupNotice* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGroupNotice, _impl_.action_)
      + sizeof(SendGroupNotice::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendGroupNotice, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGroupNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[150]);
}

// ===================================================================

class GetGroupNotice_Params::_Internal {
 public:
};

GetGroupNotice_Params::GetGroupNotice_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNotice.Params)
}
GetGroupNotice_Params::GetGroupNotice_Params(const GetGroupNotice_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNotice_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNotice.Params)
}

inline void GetGroupNotice_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupNotice_Params::~GetGroupNotice_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNotice.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNotice_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupNotice_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNotice_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNotice.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNotice_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNotice_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNotice.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNotice.Params)
  return target;
}

size_t GetGroupNotice_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNotice.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNotice_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNotice_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNotice_Params::GetClassData() const { return &_class_data_; }


void GetGroupNotice_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNotice_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupNotice_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNotice.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNotice_Params::CopyFrom(const GetGroupNotice_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNotice.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNotice_Params::IsInitialized() const {
  return true;
}

void GetGroupNotice_Params::InternalSwap(GetGroupNotice_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNotice_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[151]);
}

// ===================================================================

class GetGroupNotice::_Internal {
 public:
  static const ::cqhttp::GetGroupNotice_Params& params(const GetGroupNotice* msg);
};

const ::cqhttp::GetGroupNotice_Params&
GetGroupNotice::_Internal::params(const GetGroupNotice* msg) {
  return *msg->_impl_.params_;
}
GetGroupNotice::GetGroupNotice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNotice)
}
GetGroupNotice::GetGroupNotice(const GetGroupNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNotice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupNotice_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNotice)
}

inline void GetGroupNotice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupNotice::~GetGroupNotice() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNotice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNotice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupNotice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNotice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNotice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupNotice.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupNotice.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNotice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNotice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupNotice.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupNotice.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNotice)
  return target;
}

size_t GetGroupNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNotice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupNotice.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNotice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNotice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNotice::GetClassData() const { return &_class_data_; }


void GetGroupNotice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNotice*>(&to_msg);
  auto& from = static_cast<const GetGroupNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNotice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupNotice_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNotice::CopyFrom(const GetGroupNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNotice::IsInitialized() const {
  return true;
}

void GetGroupNotice::InternalSwap(GetGroupNotice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupNotice, _impl_.action_)
      + sizeof(GetGroupNotice::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupNotice, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[152]);
}

// ===================================================================

class GetGroupNoticeResp_Notice_NoticeMessage_Image::_Internal {
 public:
};

GetGroupNoticeResp_Notice_NoticeMessage_Image::GetGroupNoticeResp_Notice_NoticeMessage_Image(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
}
GetGroupNoticeResp_Notice_NoticeMessage_Image::GetGroupNoticeResp_Notice_NoticeMessage_Image(const GetGroupNoticeResp_Notice_NoticeMessage_Image& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNoticeResp_Notice_NoticeMessage_Image* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.height_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.height_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.height_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_height().empty()) {
    _this->_impl_.height_.Set(from._internal_height(), 
      _this->GetArenaForAllocation());
  }
  _impl_.width_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.width_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_width().empty()) {
    _this->_impl_.width_.Set(from._internal_width(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
}

inline void GetGroupNoticeResp_Notice_NoticeMessage_Image::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.height_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.height_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.height_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.width_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.width_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupNoticeResp_Notice_NoticeMessage_Image::~GetGroupNoticeResp_Notice_NoticeMessage_Image() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNoticeResp_Notice_NoticeMessage_Image::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.height_.Destroy();
  _impl_.width_.Destroy();
  _impl_.id_.Destroy();
}

void GetGroupNoticeResp_Notice_NoticeMessage_Image::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNoticeResp_Notice_NoticeMessage_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_.ClearToEmpty();
  _impl_.width_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNoticeResp_Notice_NoticeMessage_Image::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_height();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.height"));
        } else
          goto handle_unusual;
        continue;
      // string width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_width();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.width"));
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNoticeResp_Notice_NoticeMessage_Image::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string height = 1;
  if (!this->_internal_height().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_height().data(), static_cast<int>(this->_internal_height().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.height");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_height(), target);
  }

  // string width = 2;
  if (!this->_internal_width().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_width().data(), static_cast<int>(this->_internal_width().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.width");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_width(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  return target;
}

size_t GetGroupNoticeResp_Notice_NoticeMessage_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string height = 1;
  if (!this->_internal_height().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_height());
  }

  // string width = 2;
  if (!this->_internal_width().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_width());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNoticeResp_Notice_NoticeMessage_Image::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNoticeResp_Notice_NoticeMessage_Image::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNoticeResp_Notice_NoticeMessage_Image::GetClassData() const { return &_class_data_; }


void GetGroupNoticeResp_Notice_NoticeMessage_Image::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNoticeResp_Notice_NoticeMessage_Image*>(&to_msg);
  auto& from = static_cast<const GetGroupNoticeResp_Notice_NoticeMessage_Image&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_height().empty()) {
    _this->_internal_set_height(from._internal_height());
  }
  if (!from._internal_width().empty()) {
    _this->_internal_set_width(from._internal_width());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNoticeResp_Notice_NoticeMessage_Image::CopyFrom(const GetGroupNoticeResp_Notice_NoticeMessage_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNoticeResp_Notice_NoticeMessage_Image::IsInitialized() const {
  return true;
}

void GetGroupNoticeResp_Notice_NoticeMessage_Image::InternalSwap(GetGroupNoticeResp_Notice_NoticeMessage_Image* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.height_, lhs_arena,
      &other->_impl_.height_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.width_, lhs_arena,
      &other->_impl_.width_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNoticeResp_Notice_NoticeMessage_Image::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[153]);
}

// ===================================================================

class GetGroupNoticeResp_Notice_NoticeMessage::_Internal {
 public:
};

GetGroupNoticeResp_Notice_NoticeMessage::GetGroupNoticeResp_Notice_NoticeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
}
GetGroupNoticeResp_Notice_NoticeMessage::GetGroupNoticeResp_Notice_NoticeMessage(const GetGroupNoticeResp_Notice_NoticeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNoticeResp_Notice_NoticeMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
}

inline void GetGroupNoticeResp_Notice_NoticeMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){arena}
    , decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupNoticeResp_Notice_NoticeMessage::~GetGroupNoticeResp_Notice_NoticeMessage() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNoticeResp_Notice_NoticeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  _impl_.text_.Destroy();
}

void GetGroupNoticeResp_Notice_NoticeMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNoticeResp_Notice_NoticeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.images_.Clear();
  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNoticeResp_Notice_NoticeMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.text"));
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNoticeResp_Notice_NoticeMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // repeated .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image images = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  return target;
}

size_t GetGroupNoticeResp_Notice_NoticeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage.Image images = 2;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_impl_.images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNoticeResp_Notice_NoticeMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNoticeResp_Notice_NoticeMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNoticeResp_Notice_NoticeMessage::GetClassData() const { return &_class_data_; }


void GetGroupNoticeResp_Notice_NoticeMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNoticeResp_Notice_NoticeMessage*>(&to_msg);
  auto& from = static_cast<const GetGroupNoticeResp_Notice_NoticeMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.images_.MergeFrom(from._impl_.images_);
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNoticeResp_Notice_NoticeMessage::CopyFrom(const GetGroupNoticeResp_Notice_NoticeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNoticeResp.Notice.NoticeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNoticeResp_Notice_NoticeMessage::IsInitialized() const {
  return true;
}

void GetGroupNoticeResp_Notice_NoticeMessage::InternalSwap(GetGroupNoticeResp_Notice_NoticeMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNoticeResp_Notice_NoticeMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[154]);
}

// ===================================================================

class GetGroupNoticeResp_Notice::_Internal {
 public:
  static const ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage& message(const GetGroupNoticeResp_Notice* msg);
};

const ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage&
GetGroupNoticeResp_Notice::_Internal::message(const GetGroupNoticeResp_Notice* msg) {
  return *msg->_impl_.message_;
}
GetGroupNoticeResp_Notice::GetGroupNoticeResp_Notice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNoticeResp.Notice)
}
GetGroupNoticeResp_Notice::GetGroupNoticeResp_Notice(const GetGroupNoticeResp_Notice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNoticeResp_Notice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){nullptr}
    , decltype(_impl_.sender_id_){}
    , decltype(_impl_.publish_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_message()) {
    _this->_impl_.message_ = new ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage(*from._impl_.message_);
  }
  ::memcpy(&_impl_.sender_id_, &from._impl_.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.publish_time_) -
    reinterpret_cast<char*>(&_impl_.sender_id_)) + sizeof(_impl_.publish_time_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNoticeResp.Notice)
}

inline void GetGroupNoticeResp_Notice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){nullptr}
    , decltype(_impl_.sender_id_){int64_t{0}}
    , decltype(_impl_.publish_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupNoticeResp_Notice::~GetGroupNoticeResp_Notice() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNoticeResp.Notice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNoticeResp_Notice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.message_;
}

void GetGroupNoticeResp_Notice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNoticeResp_Notice::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNoticeResp.Notice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.message_ != nullptr) {
    delete _impl_.message_;
  }
  _impl_.message_ = nullptr;
  ::memset(&_impl_.sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.publish_time_) -
      reinterpret_cast<char*>(&_impl_.sender_id_)) + sizeof(_impl_.publish_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNoticeResp_Notice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 sender_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sender_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 publish_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.publish_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNoticeResp_Notice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNoticeResp.Notice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sender_id = 1;
  if (this->_internal_sender_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_sender_id(), target);
  }

  // int64 publish_time = 2;
  if (this->_internal_publish_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_publish_time(), target);
  }

  // .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage message = 3;
  if (this->_internal_has_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNoticeResp.Notice)
  return target;
}

size_t GetGroupNoticeResp_Notice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNoticeResp.Notice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.GetGroupNoticeResp.Notice.NoticeMessage message = 3;
  if (this->_internal_has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.message_);
  }

  // int64 sender_id = 1;
  if (this->_internal_sender_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sender_id());
  }

  // int64 publish_time = 2;
  if (this->_internal_publish_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_publish_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNoticeResp_Notice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNoticeResp_Notice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNoticeResp_Notice::GetClassData() const { return &_class_data_; }


void GetGroupNoticeResp_Notice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNoticeResp_Notice*>(&to_msg);
  auto& from = static_cast<const GetGroupNoticeResp_Notice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNoticeResp.Notice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_message()) {
    _this->_internal_mutable_message()->::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage::MergeFrom(
        from._internal_message());
  }
  if (from._internal_sender_id() != 0) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (from._internal_publish_time() != 0) {
    _this->_internal_set_publish_time(from._internal_publish_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNoticeResp_Notice::CopyFrom(const GetGroupNoticeResp_Notice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNoticeResp.Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNoticeResp_Notice::IsInitialized() const {
  return true;
}

void GetGroupNoticeResp_Notice::InternalSwap(GetGroupNoticeResp_Notice* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupNoticeResp_Notice, _impl_.publish_time_)
      + sizeof(GetGroupNoticeResp_Notice::_impl_.publish_time_)
      - PROTOBUF_FIELD_OFFSET(GetGroupNoticeResp_Notice, _impl_.message_)>(
          reinterpret_cast<char*>(&_impl_.message_),
          reinterpret_cast<char*>(&other->_impl_.message_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNoticeResp_Notice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[155]);
}

// ===================================================================

class GetGroupNoticeResp::_Internal {
 public:
};

GetGroupNoticeResp::GetGroupNoticeResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupNoticeResp)
}
GetGroupNoticeResp::GetGroupNoticeResp(const GetGroupNoticeResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupNoticeResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.notices_){from._impl_.notices_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupNoticeResp)
}

inline void GetGroupNoticeResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.notices_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupNoticeResp::~GetGroupNoticeResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupNoticeResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupNoticeResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.notices_.~RepeatedPtrField();
}

void GetGroupNoticeResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupNoticeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupNoticeResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupNoticeResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetGroupNoticeResp.Notice notices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_notices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupNoticeResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupNoticeResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupNoticeResp.Notice notices = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_notices_size()); i < n; i++) {
    const auto& repfield = this->_internal_notices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupNoticeResp)
  return target;
}

size_t GetGroupNoticeResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupNoticeResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetGroupNoticeResp.Notice notices = 1;
  total_size += 1UL * this->_internal_notices_size();
  for (const auto& msg : this->_impl_.notices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupNoticeResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupNoticeResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupNoticeResp::GetClassData() const { return &_class_data_; }


void GetGroupNoticeResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupNoticeResp*>(&to_msg);
  auto& from = static_cast<const GetGroupNoticeResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupNoticeResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.notices_.MergeFrom(from._impl_.notices_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupNoticeResp::CopyFrom(const GetGroupNoticeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupNoticeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupNoticeResp::IsInitialized() const {
  return true;
}

void GetGroupNoticeResp::InternalSwap(GetGroupNoticeResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.notices_.InternalSwap(&other->_impl_.notices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupNoticeResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[156]);
}

// ===================================================================

class ReloadEventFilter_Params::_Internal {
 public:
};

ReloadEventFilter_Params::ReloadEventFilter_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.ReloadEventFilter.Params)
}
ReloadEventFilter_Params::ReloadEventFilter_Params(const ReloadEventFilter_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReloadEventFilter_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.ReloadEventFilter.Params)
}

inline void ReloadEventFilter_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReloadEventFilter_Params::~ReloadEventFilter_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.ReloadEventFilter.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReloadEventFilter_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
}

void ReloadEventFilter_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReloadEventFilter_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.ReloadEventFilter.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReloadEventFilter_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.ReloadEventFilter.Params.file"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReloadEventFilter_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.ReloadEventFilter.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.ReloadEventFilter.Params.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.ReloadEventFilter.Params)
  return target;
}

size_t ReloadEventFilter_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.ReloadEventFilter.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReloadEventFilter_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReloadEventFilter_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReloadEventFilter_Params::GetClassData() const { return &_class_data_; }


void ReloadEventFilter_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReloadEventFilter_Params*>(&to_msg);
  auto& from = static_cast<const ReloadEventFilter_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.ReloadEventFilter.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReloadEventFilter_Params::CopyFrom(const ReloadEventFilter_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.ReloadEventFilter.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadEventFilter_Params::IsInitialized() const {
  return true;
}

void ReloadEventFilter_Params::InternalSwap(ReloadEventFilter_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReloadEventFilter_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[157]);
}

// ===================================================================

class ReloadEventFilter::_Internal {
 public:
  static const ::cqhttp::ReloadEventFilter_Params& params(const ReloadEventFilter* msg);
};

const ::cqhttp::ReloadEventFilter_Params&
ReloadEventFilter::_Internal::params(const ReloadEventFilter* msg) {
  return *msg->_impl_.params_;
}
ReloadEventFilter::ReloadEventFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.ReloadEventFilter)
}
ReloadEventFilter::ReloadEventFilter(const ReloadEventFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReloadEventFilter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::ReloadEventFilter_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.ReloadEventFilter)
}

inline void ReloadEventFilter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReloadEventFilter::~ReloadEventFilter() {
  // @@protoc_insertion_point(destructor:cqhttp.ReloadEventFilter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReloadEventFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void ReloadEventFilter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReloadEventFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.ReloadEventFilter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReloadEventFilter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.ReloadEventFilter.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReloadEventFilter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.ReloadEventFilter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.ReloadEventFilter.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.ReloadEventFilter)
  return target;
}

size_t ReloadEventFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.ReloadEventFilter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.ReloadEventFilter.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReloadEventFilter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReloadEventFilter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReloadEventFilter::GetClassData() const { return &_class_data_; }


void ReloadEventFilter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReloadEventFilter*>(&to_msg);
  auto& from = static_cast<const ReloadEventFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.ReloadEventFilter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::ReloadEventFilter_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReloadEventFilter::CopyFrom(const ReloadEventFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.ReloadEventFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadEventFilter::IsInitialized() const {
  return true;
}

void ReloadEventFilter::InternalSwap(ReloadEventFilter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReloadEventFilter, _impl_.action_)
      + sizeof(ReloadEventFilter::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(ReloadEventFilter, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReloadEventFilter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[158]);
}

// ===================================================================

class DownloadFile_Params::_Internal {
 public:
};

DownloadFile_Params::DownloadFile_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DownloadFile.Params)
}
DownloadFile_Params::DownloadFile_Params(const DownloadFile_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DownloadFile_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.headers_){}
    , decltype(_impl_.thread_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.headers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_headers().empty()) {
    _this->_impl_.headers_.Set(from._internal_headers(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.thread_count_ = from._impl_.thread_count_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DownloadFile.Params)
}

inline void DownloadFile_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.headers_){}
    , decltype(_impl_.thread_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.headers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DownloadFile_Params::~DownloadFile_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DownloadFile.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DownloadFile_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  _impl_.headers_.Destroy();
}

void DownloadFile_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DownloadFile_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DownloadFile.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.headers_.ClearToEmpty();
  _impl_.thread_count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadFile_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DownloadFile.Params.url"));
        } else
          goto handle_unusual;
        continue;
      // int32 thread_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.thread_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string headers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_headers();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DownloadFile.Params.headers"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadFile_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DownloadFile.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DownloadFile.Params.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 thread_count = 2;
  if (this->_internal_thread_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_thread_count(), target);
  }

  // string headers = 3;
  if (!this->_internal_headers().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_headers().data(), static_cast<int>(this->_internal_headers().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DownloadFile.Params.headers");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_headers(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DownloadFile.Params)
  return target;
}

size_t DownloadFile_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DownloadFile.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string headers = 3;
  if (!this->_internal_headers().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_headers());
  }

  // int32 thread_count = 2;
  if (this->_internal_thread_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_thread_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadFile_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DownloadFile_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadFile_Params::GetClassData() const { return &_class_data_; }


void DownloadFile_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DownloadFile_Params*>(&to_msg);
  auto& from = static_cast<const DownloadFile_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DownloadFile.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_headers().empty()) {
    _this->_internal_set_headers(from._internal_headers());
  }
  if (from._internal_thread_count() != 0) {
    _this->_internal_set_thread_count(from._internal_thread_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadFile_Params::CopyFrom(const DownloadFile_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DownloadFile.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFile_Params::IsInitialized() const {
  return true;
}

void DownloadFile_Params::InternalSwap(DownloadFile_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.headers_, lhs_arena,
      &other->_impl_.headers_, rhs_arena
  );
  swap(_impl_.thread_count_, other->_impl_.thread_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadFile_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[159]);
}

// ===================================================================

class DownloadFile::_Internal {
 public:
  static const ::cqhttp::DownloadFile_Params& params(const DownloadFile* msg);
};

const ::cqhttp::DownloadFile_Params&
DownloadFile::_Internal::params(const DownloadFile* msg) {
  return *msg->_impl_.params_;
}
DownloadFile::DownloadFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DownloadFile)
}
DownloadFile::DownloadFile(const DownloadFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DownloadFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DownloadFile_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DownloadFile)
}

inline void DownloadFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DownloadFile::~DownloadFile() {
  // @@protoc_insertion_point(destructor:cqhttp.DownloadFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DownloadFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DownloadFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DownloadFile::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DownloadFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DownloadFile.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DownloadFile.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DownloadFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DownloadFile.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DownloadFile.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DownloadFile)
  return target;
}

size_t DownloadFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DownloadFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.DownloadFile.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DownloadFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadFile::GetClassData() const { return &_class_data_; }


void DownloadFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DownloadFile*>(&to_msg);
  auto& from = static_cast<const DownloadFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DownloadFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DownloadFile_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadFile::CopyFrom(const DownloadFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DownloadFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFile::IsInitialized() const {
  return true;
}

void DownloadFile::InternalSwap(DownloadFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadFile, _impl_.action_)
      + sizeof(DownloadFile::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DownloadFile, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[160]);
}

// ===================================================================

class DownloadFileResp::_Internal {
 public:
};

DownloadFileResp::DownloadFileResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DownloadFileResp)
}
DownloadFileResp::DownloadFileResp(const DownloadFileResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DownloadFileResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.DownloadFileResp)
}

inline void DownloadFileResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DownloadFileResp::~DownloadFileResp() {
  // @@protoc_insertion_point(destructor:cqhttp.DownloadFileResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DownloadFileResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
}

void DownloadFileResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DownloadFileResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DownloadFileResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadFileResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.DownloadFileResp.file"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DownloadFileResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DownloadFileResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.DownloadFileResp.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DownloadFileResp)
  return target;
}

size_t DownloadFileResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DownloadFileResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DownloadFileResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DownloadFileResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DownloadFileResp::GetClassData() const { return &_class_data_; }


void DownloadFileResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DownloadFileResp*>(&to_msg);
  auto& from = static_cast<const DownloadFileResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DownloadFileResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadFileResp::CopyFrom(const DownloadFileResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DownloadFileResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileResp::IsInitialized() const {
  return true;
}

void DownloadFileResp::InternalSwap(DownloadFileResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadFileResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[161]);
}

// ===================================================================

class GetOnlineClients_Params::_Internal {
 public:
};

GetOnlineClients_Params::GetOnlineClients_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetOnlineClients.Params)
}
GetOnlineClients_Params::GetOnlineClients_Params(const GetOnlineClients_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOnlineClients_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.no_cache_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.no_cache_ = from._impl_.no_cache_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetOnlineClients.Params)
}

inline void GetOnlineClients_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.no_cache_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOnlineClients_Params::~GetOnlineClients_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetOnlineClients.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOnlineClients_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOnlineClients_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOnlineClients_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetOnlineClients.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.no_cache_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOnlineClients_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool no_cache = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.no_cache_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOnlineClients_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetOnlineClients.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool no_cache = 1;
  if (this->_internal_no_cache() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_no_cache(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetOnlineClients.Params)
  return target;
}

size_t GetOnlineClients_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetOnlineClients.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool no_cache = 1;
  if (this->_internal_no_cache() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOnlineClients_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOnlineClients_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOnlineClients_Params::GetClassData() const { return &_class_data_; }


void GetOnlineClients_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOnlineClients_Params*>(&to_msg);
  auto& from = static_cast<const GetOnlineClients_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetOnlineClients.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_no_cache() != 0) {
    _this->_internal_set_no_cache(from._internal_no_cache());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOnlineClients_Params::CopyFrom(const GetOnlineClients_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetOnlineClients.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineClients_Params::IsInitialized() const {
  return true;
}

void GetOnlineClients_Params::InternalSwap(GetOnlineClients_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.no_cache_, other->_impl_.no_cache_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOnlineClients_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[162]);
}

// ===================================================================

class GetOnlineClients::_Internal {
 public:
  static const ::cqhttp::GetOnlineClients_Params& params(const GetOnlineClients* msg);
};

const ::cqhttp::GetOnlineClients_Params&
GetOnlineClients::_Internal::params(const GetOnlineClients* msg) {
  return *msg->_impl_.params_;
}
GetOnlineClients::GetOnlineClients(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetOnlineClients)
}
GetOnlineClients::GetOnlineClients(const GetOnlineClients& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOnlineClients* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetOnlineClients_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetOnlineClients)
}

inline void GetOnlineClients::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOnlineClients::~GetOnlineClients() {
  // @@protoc_insertion_point(destructor:cqhttp.GetOnlineClients)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOnlineClients::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetOnlineClients::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOnlineClients::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetOnlineClients)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOnlineClients::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetOnlineClients.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetOnlineClients.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOnlineClients::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetOnlineClients)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetOnlineClients.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetOnlineClients.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetOnlineClients)
  return target;
}

size_t GetOnlineClients::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetOnlineClients)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetOnlineClients.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOnlineClients::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOnlineClients::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOnlineClients::GetClassData() const { return &_class_data_; }


void GetOnlineClients::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOnlineClients*>(&to_msg);
  auto& from = static_cast<const GetOnlineClients&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetOnlineClients)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetOnlineClients_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOnlineClients::CopyFrom(const GetOnlineClients& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetOnlineClients)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineClients::IsInitialized() const {
  return true;
}

void GetOnlineClients::InternalSwap(GetOnlineClients* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOnlineClients, _impl_.action_)
      + sizeof(GetOnlineClients::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetOnlineClients, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOnlineClients::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[163]);
}

// ===================================================================

class GetOnlineClientsResp::_Internal {
 public:
};

void GetOnlineClientsResp::clear_clients() {
  _impl_.clients_.Clear();
}
GetOnlineClientsResp::GetOnlineClientsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetOnlineClientsResp)
}
GetOnlineClientsResp::GetOnlineClientsResp(const GetOnlineClientsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOnlineClientsResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.clients_){from._impl_.clients_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetOnlineClientsResp)
}

inline void GetOnlineClientsResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.clients_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOnlineClientsResp::~GetOnlineClientsResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetOnlineClientsResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOnlineClientsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.clients_.~RepeatedPtrField();
}

void GetOnlineClientsResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOnlineClientsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetOnlineClientsResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clients_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOnlineClientsResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.Device clients = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clients(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOnlineClientsResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetOnlineClientsResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.Device clients = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_clients_size()); i < n; i++) {
    const auto& repfield = this->_internal_clients(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetOnlineClientsResp)
  return target;
}

size_t GetOnlineClientsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetOnlineClientsResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.Device clients = 1;
  total_size += 1UL * this->_internal_clients_size();
  for (const auto& msg : this->_impl_.clients_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOnlineClientsResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOnlineClientsResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOnlineClientsResp::GetClassData() const { return &_class_data_; }


void GetOnlineClientsResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOnlineClientsResp*>(&to_msg);
  auto& from = static_cast<const GetOnlineClientsResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetOnlineClientsResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.clients_.MergeFrom(from._impl_.clients_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOnlineClientsResp::CopyFrom(const GetOnlineClientsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetOnlineClientsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlineClientsResp::IsInitialized() const {
  return true;
}

void GetOnlineClientsResp::InternalSwap(GetOnlineClientsResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.clients_.InternalSwap(&other->_impl_.clients_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOnlineClientsResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[164]);
}

// ===================================================================

class GetGroupMsgHistory_Params::_Internal {
 public:
};

GetGroupMsgHistory_Params::GetGroupMsgHistory_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMsgHistory.Params)
}
GetGroupMsgHistory_Params::GetGroupMsgHistory_Params(const GetGroupMsgHistory_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMsgHistory_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_seq_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.message_seq_, &from._impl_.message_seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.group_id_) -
    reinterpret_cast<char*>(&_impl_.message_seq_)) + sizeof(_impl_.group_id_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMsgHistory.Params)
}

inline void GetGroupMsgHistory_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_seq_){int64_t{0}}
    , decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupMsgHistory_Params::~GetGroupMsgHistory_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMsgHistory.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMsgHistory_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGroupMsgHistory_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMsgHistory_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMsgHistory.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.message_seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.group_id_) -
      reinterpret_cast<char*>(&_impl_.message_seq_)) + sizeof(_impl_.group_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMsgHistory_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 message_seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 group_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMsgHistory_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMsgHistory.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 message_seq = 1;
  if (this->_internal_message_seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_message_seq(), target);
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMsgHistory.Params)
  return target;
}

size_t GetGroupMsgHistory_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMsgHistory.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 message_seq = 1;
  if (this->_internal_message_seq() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_message_seq());
  }

  // int64 group_id = 2;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMsgHistory_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMsgHistory_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMsgHistory_Params::GetClassData() const { return &_class_data_; }


void GetGroupMsgHistory_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMsgHistory_Params*>(&to_msg);
  auto& from = static_cast<const GetGroupMsgHistory_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMsgHistory.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_seq() != 0) {
    _this->_internal_set_message_seq(from._internal_message_seq());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMsgHistory_Params::CopyFrom(const GetGroupMsgHistory_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMsgHistory.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMsgHistory_Params::IsInitialized() const {
  return true;
}

void GetGroupMsgHistory_Params::InternalSwap(GetGroupMsgHistory_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMsgHistory_Params, _impl_.group_id_)
      + sizeof(GetGroupMsgHistory_Params::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMsgHistory_Params, _impl_.message_seq_)>(
          reinterpret_cast<char*>(&_impl_.message_seq_),
          reinterpret_cast<char*>(&other->_impl_.message_seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMsgHistory_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[165]);
}

// ===================================================================

class GetGroupMsgHistory::_Internal {
 public:
  static const ::cqhttp::GetGroupMsgHistory_Params& params(const GetGroupMsgHistory* msg);
};

const ::cqhttp::GetGroupMsgHistory_Params&
GetGroupMsgHistory::_Internal::params(const GetGroupMsgHistory* msg) {
  return *msg->_impl_.params_;
}
GetGroupMsgHistory::GetGroupMsgHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMsgHistory)
}
GetGroupMsgHistory::GetGroupMsgHistory(const GetGroupMsgHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMsgHistory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetGroupMsgHistory_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMsgHistory)
}

inline void GetGroupMsgHistory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetGroupMsgHistory::~GetGroupMsgHistory() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMsgHistory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMsgHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetGroupMsgHistory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMsgHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMsgHistory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMsgHistory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetGroupMsgHistory.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMsgHistory.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMsgHistory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMsgHistory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetGroupMsgHistory.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMsgHistory.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMsgHistory)
  return target;
}

size_t GetGroupMsgHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMsgHistory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetGroupMsgHistory.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMsgHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMsgHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMsgHistory::GetClassData() const { return &_class_data_; }


void GetGroupMsgHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMsgHistory*>(&to_msg);
  auto& from = static_cast<const GetGroupMsgHistory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMsgHistory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetGroupMsgHistory_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMsgHistory::CopyFrom(const GetGroupMsgHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMsgHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMsgHistory::IsInitialized() const {
  return true;
}

void GetGroupMsgHistory::InternalSwap(GetGroupMsgHistory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupMsgHistory, _impl_.action_)
      + sizeof(GetGroupMsgHistory::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetGroupMsgHistory, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMsgHistory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[166]);
}

// ===================================================================

class GetGroupMsgHistoryResp::_Internal {
 public:
};

GetGroupMsgHistoryResp::GetGroupMsgHistoryResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetGroupMsgHistoryResp)
}
GetGroupMsgHistoryResp::GetGroupMsgHistoryResp(const GetGroupMsgHistoryResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGroupMsgHistoryResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetGroupMsgHistoryResp)
}

inline void GetGroupMsgHistoryResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGroupMsgHistoryResp::~GetGroupMsgHistoryResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetGroupMsgHistoryResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGroupMsgHistoryResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void GetGroupMsgHistoryResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGroupMsgHistoryResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetGroupMsgHistoryResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupMsgHistoryResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_messages();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetGroupMsgHistoryResp.messages"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGroupMsgHistoryResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetGroupMsgHistoryResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string messages = 1;
  for (int i = 0, n = this->_internal_messages_size(); i < n; i++) {
    const auto& s = this->_internal_messages(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetGroupMsgHistoryResp.messages");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetGroupMsgHistoryResp)
  return target;
}

size_t GetGroupMsgHistoryResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetGroupMsgHistoryResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string messages = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.messages_.size());
  for (int i = 0, n = _impl_.messages_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.messages_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGroupMsgHistoryResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGroupMsgHistoryResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGroupMsgHistoryResp::GetClassData() const { return &_class_data_; }


void GetGroupMsgHistoryResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGroupMsgHistoryResp*>(&to_msg);
  auto& from = static_cast<const GetGroupMsgHistoryResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetGroupMsgHistoryResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGroupMsgHistoryResp::CopyFrom(const GetGroupMsgHistoryResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetGroupMsgHistoryResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupMsgHistoryResp::IsInitialized() const {
  return true;
}

void GetGroupMsgHistoryResp::InternalSwap(GetGroupMsgHistoryResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupMsgHistoryResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[167]);
}

// ===================================================================

class SetEssenceMsg_Params::_Internal {
 public:
};

SetEssenceMsg_Params::SetEssenceMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetEssenceMsg.Params)
}
SetEssenceMsg_Params::SetEssenceMsg_Params(const SetEssenceMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetEssenceMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetEssenceMsg.Params)
}

inline void SetEssenceMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetEssenceMsg_Params::~SetEssenceMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetEssenceMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetEssenceMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetEssenceMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetEssenceMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetEssenceMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEssenceMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetEssenceMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetEssenceMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetEssenceMsg.Params)
  return target;
}

size_t SetEssenceMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetEssenceMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetEssenceMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetEssenceMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetEssenceMsg_Params::GetClassData() const { return &_class_data_; }


void SetEssenceMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetEssenceMsg_Params*>(&to_msg);
  auto& from = static_cast<const SetEssenceMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetEssenceMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetEssenceMsg_Params::CopyFrom(const SetEssenceMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetEssenceMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEssenceMsg_Params::IsInitialized() const {
  return true;
}

void SetEssenceMsg_Params::InternalSwap(SetEssenceMsg_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEssenceMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[168]);
}

// ===================================================================

class SetEssenceMsg::_Internal {
 public:
  static const ::cqhttp::SetEssenceMsg_Params& params(const SetEssenceMsg* msg);
};

const ::cqhttp::SetEssenceMsg_Params&
SetEssenceMsg::_Internal::params(const SetEssenceMsg* msg) {
  return *msg->_impl_.params_;
}
SetEssenceMsg::SetEssenceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetEssenceMsg)
}
SetEssenceMsg::SetEssenceMsg(const SetEssenceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetEssenceMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetEssenceMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetEssenceMsg)
}

inline void SetEssenceMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetEssenceMsg::~SetEssenceMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.SetEssenceMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetEssenceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetEssenceMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetEssenceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetEssenceMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEssenceMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetEssenceMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetEssenceMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetEssenceMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetEssenceMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetEssenceMsg)
  return target;
}

size_t SetEssenceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetEssenceMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetEssenceMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetEssenceMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetEssenceMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetEssenceMsg::GetClassData() const { return &_class_data_; }


void SetEssenceMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetEssenceMsg*>(&to_msg);
  auto& from = static_cast<const SetEssenceMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetEssenceMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetEssenceMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetEssenceMsg::CopyFrom(const SetEssenceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetEssenceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEssenceMsg::IsInitialized() const {
  return true;
}

void SetEssenceMsg::InternalSwap(SetEssenceMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetEssenceMsg, _impl_.action_)
      + sizeof(SetEssenceMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetEssenceMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEssenceMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[169]);
}

// ===================================================================

class DeleteEssenceMsg_Params::_Internal {
 public:
};

DeleteEssenceMsg_Params::DeleteEssenceMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteEssenceMsg.Params)
}
DeleteEssenceMsg_Params::DeleteEssenceMsg_Params(const DeleteEssenceMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteEssenceMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteEssenceMsg.Params)
}

inline void DeleteEssenceMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteEssenceMsg_Params::~DeleteEssenceMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteEssenceMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteEssenceMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteEssenceMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteEssenceMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteEssenceMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteEssenceMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteEssenceMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteEssenceMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteEssenceMsg.Params)
  return target;
}

size_t DeleteEssenceMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteEssenceMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteEssenceMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteEssenceMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteEssenceMsg_Params::GetClassData() const { return &_class_data_; }


void DeleteEssenceMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteEssenceMsg_Params*>(&to_msg);
  auto& from = static_cast<const DeleteEssenceMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteEssenceMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteEssenceMsg_Params::CopyFrom(const DeleteEssenceMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteEssenceMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEssenceMsg_Params::IsInitialized() const {
  return true;
}

void DeleteEssenceMsg_Params::InternalSwap(DeleteEssenceMsg_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteEssenceMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[170]);
}

// ===================================================================

class DeleteEssenceMsg::_Internal {
 public:
  static const ::cqhttp::DeleteEssenceMsg_Params& params(const DeleteEssenceMsg* msg);
};

const ::cqhttp::DeleteEssenceMsg_Params&
DeleteEssenceMsg::_Internal::params(const DeleteEssenceMsg* msg) {
  return *msg->_impl_.params_;
}
DeleteEssenceMsg::DeleteEssenceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteEssenceMsg)
}
DeleteEssenceMsg::DeleteEssenceMsg(const DeleteEssenceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteEssenceMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteEssenceMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteEssenceMsg)
}

inline void DeleteEssenceMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteEssenceMsg::~DeleteEssenceMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteEssenceMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteEssenceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteEssenceMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteEssenceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteEssenceMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteEssenceMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteEssenceMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteEssenceMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteEssenceMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteEssenceMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteEssenceMsg)
  return target;
}

size_t DeleteEssenceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteEssenceMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteEssenceMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteEssenceMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteEssenceMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteEssenceMsg::GetClassData() const { return &_class_data_; }


void DeleteEssenceMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteEssenceMsg*>(&to_msg);
  auto& from = static_cast<const DeleteEssenceMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteEssenceMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteEssenceMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteEssenceMsg::CopyFrom(const DeleteEssenceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteEssenceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEssenceMsg::IsInitialized() const {
  return true;
}

void DeleteEssenceMsg::InternalSwap(DeleteEssenceMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteEssenceMsg, _impl_.action_)
      + sizeof(DeleteEssenceMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteEssenceMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteEssenceMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[171]);
}

// ===================================================================

class GetEssenceMsgList_Params::_Internal {
 public:
};

GetEssenceMsgList_Params::GetEssenceMsgList_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetEssenceMsgList.Params)
}
GetEssenceMsgList_Params::GetEssenceMsgList_Params(const GetEssenceMsgList_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEssenceMsgList_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetEssenceMsgList.Params)
}

inline void GetEssenceMsgList_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEssenceMsgList_Params::~GetEssenceMsgList_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetEssenceMsgList.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEssenceMsgList_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetEssenceMsgList_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEssenceMsgList_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetEssenceMsgList.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEssenceMsgList_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEssenceMsgList_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetEssenceMsgList.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetEssenceMsgList.Params)
  return target;
}

size_t GetEssenceMsgList_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetEssenceMsgList.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEssenceMsgList_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEssenceMsgList_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEssenceMsgList_Params::GetClassData() const { return &_class_data_; }


void GetEssenceMsgList_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEssenceMsgList_Params*>(&to_msg);
  auto& from = static_cast<const GetEssenceMsgList_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetEssenceMsgList.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEssenceMsgList_Params::CopyFrom(const GetEssenceMsgList_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetEssenceMsgList.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEssenceMsgList_Params::IsInitialized() const {
  return true;
}

void GetEssenceMsgList_Params::InternalSwap(GetEssenceMsgList_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEssenceMsgList_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[172]);
}

// ===================================================================

class GetEssenceMsgList::_Internal {
 public:
  static const ::cqhttp::GetEssenceMsgList_Params& params(const GetEssenceMsgList* msg);
};

const ::cqhttp::GetEssenceMsgList_Params&
GetEssenceMsgList::_Internal::params(const GetEssenceMsgList* msg) {
  return *msg->_impl_.params_;
}
GetEssenceMsgList::GetEssenceMsgList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetEssenceMsgList)
}
GetEssenceMsgList::GetEssenceMsgList(const GetEssenceMsgList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEssenceMsgList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetEssenceMsgList_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetEssenceMsgList)
}

inline void GetEssenceMsgList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEssenceMsgList::~GetEssenceMsgList() {
  // @@protoc_insertion_point(destructor:cqhttp.GetEssenceMsgList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEssenceMsgList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetEssenceMsgList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEssenceMsgList::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetEssenceMsgList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEssenceMsgList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetEssenceMsgList.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetEssenceMsgList.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEssenceMsgList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetEssenceMsgList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetEssenceMsgList.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetEssenceMsgList.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetEssenceMsgList)
  return target;
}

size_t GetEssenceMsgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetEssenceMsgList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetEssenceMsgList.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEssenceMsgList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEssenceMsgList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEssenceMsgList::GetClassData() const { return &_class_data_; }


void GetEssenceMsgList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEssenceMsgList*>(&to_msg);
  auto& from = static_cast<const GetEssenceMsgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetEssenceMsgList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetEssenceMsgList_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEssenceMsgList::CopyFrom(const GetEssenceMsgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetEssenceMsgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEssenceMsgList::IsInitialized() const {
  return true;
}

void GetEssenceMsgList::InternalSwap(GetEssenceMsgList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEssenceMsgList, _impl_.action_)
      + sizeof(GetEssenceMsgList::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetEssenceMsgList, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEssenceMsgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[173]);
}

// ===================================================================

class GetEssenceMsgListResp::_Internal {
 public:
};

GetEssenceMsgListResp::GetEssenceMsgListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetEssenceMsgListResp)
}
GetEssenceMsgListResp::GetEssenceMsgListResp(const GetEssenceMsgListResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEssenceMsgListResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_nick_){}
    , decltype(_impl_.operator_nick_){}
    , decltype(_impl_.sender_id_){}
    , decltype(_impl_.sender_time_){}
    , decltype(_impl_.operator_id_){}
    , decltype(_impl_.operator_time_){}
    , decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_nick().empty()) {
    _this->_impl_.sender_nick_.Set(from._internal_sender_nick(), 
      _this->GetArenaForAllocation());
  }
  _impl_.operator_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operator_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operator_nick().empty()) {
    _this->_impl_.operator_nick_.Set(from._internal_operator_nick(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.sender_id_, &from._impl_.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.message_id_) -
    reinterpret_cast<char*>(&_impl_.sender_id_)) + sizeof(_impl_.message_id_));
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetEssenceMsgListResp)
}

inline void GetEssenceMsgListResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_nick_){}
    , decltype(_impl_.operator_nick_){}
    , decltype(_impl_.sender_id_){int64_t{0}}
    , decltype(_impl_.sender_time_){int64_t{0}}
    , decltype(_impl_.operator_id_){int64_t{0}}
    , decltype(_impl_.operator_time_){int64_t{0}}
    , decltype(_impl_.message_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.operator_nick_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operator_nick_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEssenceMsgListResp::~GetEssenceMsgListResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetEssenceMsgListResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEssenceMsgListResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_nick_.Destroy();
  _impl_.operator_nick_.Destroy();
}

void GetEssenceMsgListResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEssenceMsgListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetEssenceMsgListResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_nick_.ClearToEmpty();
  _impl_.operator_nick_.ClearToEmpty();
  ::memset(&_impl_.sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.message_id_) -
      reinterpret_cast<char*>(&_impl_.sender_id_)) + sizeof(_impl_.message_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEssenceMsgListResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 sender_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sender_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sender_nick = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sender_nick();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetEssenceMsgListResp.sender_nick"));
        } else
          goto handle_unusual;
        continue;
      // int64 sender_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.sender_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 operator_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.operator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string operator_nick = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_operator_nick();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetEssenceMsgListResp.operator_nick"));
        } else
          goto handle_unusual;
        continue;
      // int64 operator_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.operator_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 message_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEssenceMsgListResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetEssenceMsgListResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sender_id = 1;
  if (this->_internal_sender_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_sender_id(), target);
  }

  // string sender_nick = 2;
  if (!this->_internal_sender_nick().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_nick().data(), static_cast<int>(this->_internal_sender_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetEssenceMsgListResp.sender_nick");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sender_nick(), target);
  }

  // int64 sender_time = 3;
  if (this->_internal_sender_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_sender_time(), target);
  }

  // int64 operator_id = 4;
  if (this->_internal_operator_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_operator_id(), target);
  }

  // string operator_nick = 5;
  if (!this->_internal_operator_nick().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operator_nick().data(), static_cast<int>(this->_internal_operator_nick().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetEssenceMsgListResp.operator_nick");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_operator_nick(), target);
  }

  // int64 operator_time = 6;
  if (this->_internal_operator_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_operator_time(), target);
  }

  // int32 message_id = 7;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetEssenceMsgListResp)
  return target;
}

size_t GetEssenceMsgListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetEssenceMsgListResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender_nick = 2;
  if (!this->_internal_sender_nick().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_nick());
  }

  // string operator_nick = 5;
  if (!this->_internal_operator_nick().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operator_nick());
  }

  // int64 sender_id = 1;
  if (this->_internal_sender_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sender_id());
  }

  // int64 sender_time = 3;
  if (this->_internal_sender_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sender_time());
  }

  // int64 operator_id = 4;
  if (this->_internal_operator_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_operator_id());
  }

  // int64 operator_time = 6;
  if (this->_internal_operator_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_operator_time());
  }

  // int32 message_id = 7;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEssenceMsgListResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEssenceMsgListResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEssenceMsgListResp::GetClassData() const { return &_class_data_; }


void GetEssenceMsgListResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEssenceMsgListResp*>(&to_msg);
  auto& from = static_cast<const GetEssenceMsgListResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetEssenceMsgListResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_nick().empty()) {
    _this->_internal_set_sender_nick(from._internal_sender_nick());
  }
  if (!from._internal_operator_nick().empty()) {
    _this->_internal_set_operator_nick(from._internal_operator_nick());
  }
  if (from._internal_sender_id() != 0) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (from._internal_sender_time() != 0) {
    _this->_internal_set_sender_time(from._internal_sender_time());
  }
  if (from._internal_operator_id() != 0) {
    _this->_internal_set_operator_id(from._internal_operator_id());
  }
  if (from._internal_operator_time() != 0) {
    _this->_internal_set_operator_time(from._internal_operator_time());
  }
  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEssenceMsgListResp::CopyFrom(const GetEssenceMsgListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetEssenceMsgListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEssenceMsgListResp::IsInitialized() const {
  return true;
}

void GetEssenceMsgListResp::InternalSwap(GetEssenceMsgListResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sender_nick_, lhs_arena,
      &other->_impl_.sender_nick_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operator_nick_, lhs_arena,
      &other->_impl_.operator_nick_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEssenceMsgListResp, _impl_.message_id_)
      + sizeof(GetEssenceMsgListResp::_impl_.message_id_)
      - PROTOBUF_FIELD_OFFSET(GetEssenceMsgListResp, _impl_.sender_id_)>(
          reinterpret_cast<char*>(&_impl_.sender_id_),
          reinterpret_cast<char*>(&other->_impl_.sender_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEssenceMsgListResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[174]);
}

// ===================================================================

class CheckUlrSafely_Params::_Internal {
 public:
};

CheckUlrSafely_Params::CheckUlrSafely_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CheckUlrSafely.Params)
}
CheckUlrSafely_Params::CheckUlrSafely_Params(const CheckUlrSafely_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckUlrSafely_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.CheckUlrSafely.Params)
}

inline void CheckUlrSafely_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckUlrSafely_Params::~CheckUlrSafely_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.CheckUlrSafely.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckUlrSafely_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
}

void CheckUlrSafely_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckUlrSafely_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CheckUlrSafely.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckUlrSafely_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CheckUlrSafely.Params.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckUlrSafely_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CheckUlrSafely.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CheckUlrSafely.Params.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CheckUlrSafely.Params)
  return target;
}

size_t CheckUlrSafely_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CheckUlrSafely.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckUlrSafely_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckUlrSafely_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckUlrSafely_Params::GetClassData() const { return &_class_data_; }


void CheckUlrSafely_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckUlrSafely_Params*>(&to_msg);
  auto& from = static_cast<const CheckUlrSafely_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CheckUlrSafely.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckUlrSafely_Params::CopyFrom(const CheckUlrSafely_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CheckUlrSafely.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUlrSafely_Params::IsInitialized() const {
  return true;
}

void CheckUlrSafely_Params::InternalSwap(CheckUlrSafely_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckUlrSafely_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[175]);
}

// ===================================================================

class CheckUlrSafely::_Internal {
 public:
  static const ::cqhttp::CheckUlrSafely_Params& params(const CheckUlrSafely* msg);
};

const ::cqhttp::CheckUlrSafely_Params&
CheckUlrSafely::_Internal::params(const CheckUlrSafely* msg) {
  return *msg->_impl_.params_;
}
CheckUlrSafely::CheckUlrSafely(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CheckUlrSafely)
}
CheckUlrSafely::CheckUlrSafely(const CheckUlrSafely& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckUlrSafely* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::CheckUlrSafely_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CheckUlrSafely)
}

inline void CheckUlrSafely::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckUlrSafely::~CheckUlrSafely() {
  // @@protoc_insertion_point(destructor:cqhttp.CheckUlrSafely)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckUlrSafely::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void CheckUlrSafely::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckUlrSafely::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CheckUlrSafely)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckUlrSafely::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.CheckUlrSafely.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.CheckUlrSafely.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckUlrSafely::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CheckUlrSafely)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.CheckUlrSafely.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.CheckUlrSafely.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CheckUlrSafely)
  return target;
}

size_t CheckUlrSafely::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CheckUlrSafely)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.CheckUlrSafely.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckUlrSafely::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckUlrSafely::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckUlrSafely::GetClassData() const { return &_class_data_; }


void CheckUlrSafely::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckUlrSafely*>(&to_msg);
  auto& from = static_cast<const CheckUlrSafely&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CheckUlrSafely)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::CheckUlrSafely_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckUlrSafely::CopyFrom(const CheckUlrSafely& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CheckUlrSafely)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUlrSafely::IsInitialized() const {
  return true;
}

void CheckUlrSafely::InternalSwap(CheckUlrSafely* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckUlrSafely, _impl_.action_)
      + sizeof(CheckUlrSafely::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(CheckUlrSafely, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckUlrSafely::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[176]);
}

// ===================================================================

class CheckUlrSafelyResp::_Internal {
 public:
};

CheckUlrSafelyResp::CheckUlrSafelyResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.CheckUlrSafelyResp)
}
CheckUlrSafelyResp::CheckUlrSafelyResp(const CheckUlrSafelyResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckUlrSafelyResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.level_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.level_ = from._impl_.level_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.CheckUlrSafelyResp)
}

inline void CheckUlrSafelyResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.level_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckUlrSafelyResp::~CheckUlrSafelyResp() {
  // @@protoc_insertion_point(destructor:cqhttp.CheckUlrSafelyResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckUlrSafelyResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckUlrSafelyResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckUlrSafelyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.CheckUlrSafelyResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckUlrSafelyResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckUlrSafelyResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.CheckUlrSafelyResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.CheckUlrSafelyResp)
  return target;
}

size_t CheckUlrSafelyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.CheckUlrSafelyResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckUlrSafelyResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckUlrSafelyResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckUlrSafelyResp::GetClassData() const { return &_class_data_; }


void CheckUlrSafelyResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckUlrSafelyResp*>(&to_msg);
  auto& from = static_cast<const CheckUlrSafelyResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.CheckUlrSafelyResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckUlrSafelyResp::CopyFrom(const CheckUlrSafelyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.CheckUlrSafelyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUlrSafelyResp::IsInitialized() const {
  return true;
}

void CheckUlrSafelyResp::InternalSwap(CheckUlrSafelyResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.level_, other->_impl_.level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckUlrSafelyResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[177]);
}

// ===================================================================

class GetModelShow_Params::_Internal {
 public:
};

GetModelShow_Params::GetModelShow_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetModelShow.Params)
}
GetModelShow_Params::GetModelShow_Params(const GetModelShow_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelShow_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    _this->_impl_.model_.Set(from._internal_model(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetModelShow.Params)
}

inline void GetModelShow_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetModelShow_Params::~GetModelShow_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.GetModelShow.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelShow_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_.Destroy();
}

void GetModelShow_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelShow_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetModelShow.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelShow_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetModelShow.Params.model"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelShow_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetModelShow.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model = 1;
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetModelShow.Params.model");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetModelShow.Params)
  return target;
}

size_t GetModelShow_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetModelShow.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model = 1;
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelShow_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelShow_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelShow_Params::GetClassData() const { return &_class_data_; }


void GetModelShow_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelShow_Params*>(&to_msg);
  auto& from = static_cast<const GetModelShow_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetModelShow.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelShow_Params::CopyFrom(const GetModelShow_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetModelShow.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelShow_Params::IsInitialized() const {
  return true;
}

void GetModelShow_Params::InternalSwap(GetModelShow_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_, lhs_arena,
      &other->_impl_.model_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelShow_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[178]);
}

// ===================================================================

class GetModelShow::_Internal {
 public:
  static const ::cqhttp::GetModelShow_Params& params(const GetModelShow* msg);
};

const ::cqhttp::GetModelShow_Params&
GetModelShow::_Internal::params(const GetModelShow* msg) {
  return *msg->_impl_.params_;
}
GetModelShow::GetModelShow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetModelShow)
}
GetModelShow::GetModelShow(const GetModelShow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelShow* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::GetModelShow_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetModelShow)
}

inline void GetModelShow::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetModelShow::~GetModelShow() {
  // @@protoc_insertion_point(destructor:cqhttp.GetModelShow)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelShow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void GetModelShow::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelShow::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetModelShow)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelShow::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.GetModelShow.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetModelShow.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelShow::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetModelShow)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.GetModelShow.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetModelShow.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetModelShow)
  return target;
}

size_t GetModelShow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetModelShow)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.GetModelShow.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelShow::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelShow::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelShow::GetClassData() const { return &_class_data_; }


void GetModelShow::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelShow*>(&to_msg);
  auto& from = static_cast<const GetModelShow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetModelShow)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::GetModelShow_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelShow::CopyFrom(const GetModelShow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetModelShow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelShow::IsInitialized() const {
  return true;
}

void GetModelShow::InternalSwap(GetModelShow* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetModelShow, _impl_.action_)
      + sizeof(GetModelShow::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(GetModelShow, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelShow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[179]);
}

// ===================================================================

class GetModelShowResp_Variant::_Internal {
 public:
};

GetModelShowResp_Variant::GetModelShowResp_Variant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetModelShowResp.Variant)
}
GetModelShowResp_Variant::GetModelShowResp_Variant(const GetModelShowResp_Variant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelShowResp_Variant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_show_){}
    , decltype(_impl_.need_pay_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_show_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_show().empty()) {
    _this->_impl_.model_show_.Set(from._internal_model_show(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.need_pay_ = from._impl_.need_pay_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetModelShowResp.Variant)
}

inline void GetModelShowResp_Variant::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_show_){}
    , decltype(_impl_.need_pay_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_show_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetModelShowResp_Variant::~GetModelShowResp_Variant() {
  // @@protoc_insertion_point(destructor:cqhttp.GetModelShowResp.Variant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelShowResp_Variant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_show_.Destroy();
}

void GetModelShowResp_Variant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelShowResp_Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetModelShowResp.Variant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_show_.ClearToEmpty();
  _impl_.need_pay_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelShowResp_Variant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_show();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.GetModelShowResp.Variant.model_show"));
        } else
          goto handle_unusual;
        continue;
      // bool need_pay = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.need_pay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelShowResp_Variant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetModelShowResp.Variant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_show = 1;
  if (!this->_internal_model_show().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_show().data(), static_cast<int>(this->_internal_model_show().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.GetModelShowResp.Variant.model_show");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_show(), target);
  }

  // bool need_pay = 2;
  if (this->_internal_need_pay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_need_pay(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetModelShowResp.Variant)
  return target;
}

size_t GetModelShowResp_Variant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetModelShowResp.Variant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_show = 1;
  if (!this->_internal_model_show().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_show());
  }

  // bool need_pay = 2;
  if (this->_internal_need_pay() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelShowResp_Variant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelShowResp_Variant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelShowResp_Variant::GetClassData() const { return &_class_data_; }


void GetModelShowResp_Variant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelShowResp_Variant*>(&to_msg);
  auto& from = static_cast<const GetModelShowResp_Variant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetModelShowResp.Variant)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model_show().empty()) {
    _this->_internal_set_model_show(from._internal_model_show());
  }
  if (from._internal_need_pay() != 0) {
    _this->_internal_set_need_pay(from._internal_need_pay());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelShowResp_Variant::CopyFrom(const GetModelShowResp_Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetModelShowResp.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelShowResp_Variant::IsInitialized() const {
  return true;
}

void GetModelShowResp_Variant::InternalSwap(GetModelShowResp_Variant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_show_, lhs_arena,
      &other->_impl_.model_show_, rhs_arena
  );
  swap(_impl_.need_pay_, other->_impl_.need_pay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelShowResp_Variant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[180]);
}

// ===================================================================

class GetModelShowResp::_Internal {
 public:
};

GetModelShowResp::GetModelShowResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.GetModelShowResp)
}
GetModelShowResp::GetModelShowResp(const GetModelShowResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelShowResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variants_){from._impl_.variants_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cqhttp.GetModelShowResp)
}

inline void GetModelShowResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variants_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetModelShowResp::~GetModelShowResp() {
  // @@protoc_insertion_point(destructor:cqhttp.GetModelShowResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelShowResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variants_.~RepeatedPtrField();
}

void GetModelShowResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelShowResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.GetModelShowResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variants_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelShowResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .cqhttp.GetModelShowResp.Variant variants = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variants(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelShowResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.GetModelShowResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cqhttp.GetModelShowResp.Variant variants = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_variants_size()); i < n; i++) {
    const auto& repfield = this->_internal_variants(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.GetModelShowResp)
  return target;
}

size_t GetModelShowResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.GetModelShowResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.GetModelShowResp.Variant variants = 1;
  total_size += 1UL * this->_internal_variants_size();
  for (const auto& msg : this->_impl_.variants_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelShowResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelShowResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelShowResp::GetClassData() const { return &_class_data_; }


void GetModelShowResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelShowResp*>(&to_msg);
  auto& from = static_cast<const GetModelShowResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.GetModelShowResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.variants_.MergeFrom(from._impl_.variants_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelShowResp::CopyFrom(const GetModelShowResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.GetModelShowResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelShowResp::IsInitialized() const {
  return true;
}

void GetModelShowResp::InternalSwap(GetModelShowResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.variants_.InternalSwap(&other->_impl_.variants_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelShowResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[181]);
}

// ===================================================================

class SetModelShow_Params::_Internal {
 public:
};

SetModelShow_Params::SetModelShow_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetModelShow.Params)
}
SetModelShow_Params::SetModelShow_Params(const SetModelShow_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetModelShow_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){}
    , decltype(_impl_.model_show_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    _this->_impl_.model_.Set(from._internal_model(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_show_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_show().empty()) {
    _this->_impl_.model_show_.Set(from._internal_model_show(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetModelShow.Params)
}

inline void SetModelShow_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){}
    , decltype(_impl_.model_show_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_show_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetModelShow_Params::~SetModelShow_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SetModelShow.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetModelShow_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_.Destroy();
  _impl_.model_show_.Destroy();
}

void SetModelShow_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetModelShow_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetModelShow.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_.ClearToEmpty();
  _impl_.model_show_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetModelShow_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetModelShow.Params.model"));
        } else
          goto handle_unusual;
        continue;
      // string model_show = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_show();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SetModelShow.Params.model_show"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetModelShow_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetModelShow.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model = 1;
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetModelShow.Params.model");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model(), target);
  }

  // string model_show = 2;
  if (!this->_internal_model_show().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_show().data(), static_cast<int>(this->_internal_model_show().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SetModelShow.Params.model_show");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_show(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetModelShow.Params)
  return target;
}

size_t SetModelShow_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetModelShow.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model = 1;
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  // string model_show = 2;
  if (!this->_internal_model_show().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_show());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetModelShow_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetModelShow_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetModelShow_Params::GetClassData() const { return &_class_data_; }


void SetModelShow_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetModelShow_Params*>(&to_msg);
  auto& from = static_cast<const SetModelShow_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetModelShow.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  if (!from._internal_model_show().empty()) {
    _this->_internal_set_model_show(from._internal_model_show());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetModelShow_Params::CopyFrom(const SetModelShow_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetModelShow.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetModelShow_Params::IsInitialized() const {
  return true;
}

void SetModelShow_Params::InternalSwap(SetModelShow_Params* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_, lhs_arena,
      &other->_impl_.model_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_show_, lhs_arena,
      &other->_impl_.model_show_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SetModelShow_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[182]);
}

// ===================================================================

class SetModelShow::_Internal {
 public:
  static const ::cqhttp::SetModelShow_Params& params(const SetModelShow* msg);
};

const ::cqhttp::SetModelShow_Params&
SetModelShow::_Internal::params(const SetModelShow* msg) {
  return *msg->_impl_.params_;
}
SetModelShow::SetModelShow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SetModelShow)
}
SetModelShow::SetModelShow(const SetModelShow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetModelShow* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SetModelShow_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SetModelShow)
}

inline void SetModelShow::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetModelShow::~SetModelShow() {
  // @@protoc_insertion_point(destructor:cqhttp.SetModelShow)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetModelShow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SetModelShow::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetModelShow::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SetModelShow)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetModelShow::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SetModelShow.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetModelShow::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SetModelShow)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SetModelShow.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SetModelShow)
  return target;
}

size_t SetModelShow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SetModelShow)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.SetModelShow.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetModelShow::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetModelShow::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetModelShow::GetClassData() const { return &_class_data_; }


void SetModelShow::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetModelShow*>(&to_msg);
  auto& from = static_cast<const SetModelShow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SetModelShow)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SetModelShow_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetModelShow::CopyFrom(const SetModelShow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SetModelShow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetModelShow::IsInitialized() const {
  return true;
}

void SetModelShow::InternalSwap(SetModelShow* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetModelShow, _impl_.action_)
      + sizeof(SetModelShow::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SetModelShow, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetModelShow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[183]);
}

// ===================================================================

class DeleteUnidirectionalFriend_Params::_Internal {
 public:
};

DeleteUnidirectionalFriend_Params::DeleteUnidirectionalFriend_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteUnidirectionalFriend.Params)
}
DeleteUnidirectionalFriend_Params::DeleteUnidirectionalFriend_Params(const DeleteUnidirectionalFriend_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteUnidirectionalFriend_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteUnidirectionalFriend.Params)
}

inline void DeleteUnidirectionalFriend_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteUnidirectionalFriend_Params::~DeleteUnidirectionalFriend_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteUnidirectionalFriend.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteUnidirectionalFriend_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteUnidirectionalFriend_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteUnidirectionalFriend_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteUnidirectionalFriend.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUnidirectionalFriend_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUnidirectionalFriend_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteUnidirectionalFriend.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteUnidirectionalFriend.Params)
  return target;
}

size_t DeleteUnidirectionalFriend_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteUnidirectionalFriend.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUnidirectionalFriend_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteUnidirectionalFriend_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUnidirectionalFriend_Params::GetClassData() const { return &_class_data_; }


void DeleteUnidirectionalFriend_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteUnidirectionalFriend_Params*>(&to_msg);
  auto& from = static_cast<const DeleteUnidirectionalFriend_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteUnidirectionalFriend.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUnidirectionalFriend_Params::CopyFrom(const DeleteUnidirectionalFriend_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteUnidirectionalFriend.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUnidirectionalFriend_Params::IsInitialized() const {
  return true;
}

void DeleteUnidirectionalFriend_Params::InternalSwap(DeleteUnidirectionalFriend_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUnidirectionalFriend_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[184]);
}

// ===================================================================

class DeleteUnidirectionalFriend::_Internal {
 public:
  static const ::cqhttp::DeleteUnidirectionalFriend_Params& params(const DeleteUnidirectionalFriend* msg);
};

const ::cqhttp::DeleteUnidirectionalFriend_Params&
DeleteUnidirectionalFriend::_Internal::params(const DeleteUnidirectionalFriend* msg) {
  return *msg->_impl_.params_;
}
DeleteUnidirectionalFriend::DeleteUnidirectionalFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.DeleteUnidirectionalFriend)
}
DeleteUnidirectionalFriend::DeleteUnidirectionalFriend(const DeleteUnidirectionalFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteUnidirectionalFriend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::DeleteUnidirectionalFriend_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.DeleteUnidirectionalFriend)
}

inline void DeleteUnidirectionalFriend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteUnidirectionalFriend::~DeleteUnidirectionalFriend() {
  // @@protoc_insertion_point(destructor:cqhttp.DeleteUnidirectionalFriend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteUnidirectionalFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void DeleteUnidirectionalFriend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteUnidirectionalFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.DeleteUnidirectionalFriend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUnidirectionalFriend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.DeleteUnidirectionalFriend.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUnidirectionalFriend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.DeleteUnidirectionalFriend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.DeleteUnidirectionalFriend.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.DeleteUnidirectionalFriend)
  return target;
}

size_t DeleteUnidirectionalFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.DeleteUnidirectionalFriend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cqhttp.DeleteUnidirectionalFriend.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUnidirectionalFriend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteUnidirectionalFriend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUnidirectionalFriend::GetClassData() const { return &_class_data_; }


void DeleteUnidirectionalFriend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteUnidirectionalFriend*>(&to_msg);
  auto& from = static_cast<const DeleteUnidirectionalFriend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.DeleteUnidirectionalFriend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::DeleteUnidirectionalFriend_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUnidirectionalFriend::CopyFrom(const DeleteUnidirectionalFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.DeleteUnidirectionalFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUnidirectionalFriend::IsInitialized() const {
  return true;
}

void DeleteUnidirectionalFriend::InternalSwap(DeleteUnidirectionalFriend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteUnidirectionalFriend, _impl_.action_)
      + sizeof(DeleteUnidirectionalFriend::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(DeleteUnidirectionalFriend, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUnidirectionalFriend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[185]);
}

// ===================================================================

class SendPrivateForwardMsg_Params::_Internal {
 public:
};

void SendPrivateForwardMsg_Params::clear_messages() {
  _impl_.messages_.Clear();
}
SendPrivateForwardMsg_Params::SendPrivateForwardMsg_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateForwardMsg.Params)
}
SendPrivateForwardMsg_Params::SendPrivateForwardMsg_Params(const SendPrivateForwardMsg_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateForwardMsg_Params* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateForwardMsg.Params)
}

inline void SendPrivateForwardMsg_Params::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.user_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendPrivateForwardMsg_Params::~SendPrivateForwardMsg_Params() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateForwardMsg.Params)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateForwardMsg_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void SendPrivateForwardMsg_Params::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateForwardMsg_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.user_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateForwardMsg_Params::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .cqhttp.ForwardMessage messages = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateForwardMsg_Params::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateForwardMsg.Params)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_user_id(), target);
  }

  // repeated .cqhttp.ForwardMessage messages = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateForwardMsg.Params)
  return target;
}

size_t SendPrivateForwardMsg_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateForwardMsg.Params)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cqhttp.ForwardMessage messages = 2;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateForwardMsg_Params::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateForwardMsg_Params::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateForwardMsg_Params::GetClassData() const { return &_class_data_; }


void SendPrivateForwardMsg_Params::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateForwardMsg_Params*>(&to_msg);
  auto& from = static_cast<const SendPrivateForwardMsg_Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateForwardMsg.Params)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateForwardMsg_Params::CopyFrom(const SendPrivateForwardMsg_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateForwardMsg.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateForwardMsg_Params::IsInitialized() const {
  return true;
}

void SendPrivateForwardMsg_Params::InternalSwap(SendPrivateForwardMsg_Params* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateForwardMsg_Params::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[186]);
}

// ===================================================================

class SendPrivateForwardMsg::_Internal {
 public:
  static const ::cqhttp::SendPrivateForwardMsg_Params& params(const SendPrivateForwardMsg* msg);
};

const ::cqhttp::SendPrivateForwardMsg_Params&
SendPrivateForwardMsg::_Internal::params(const SendPrivateForwardMsg* msg) {
  return *msg->_impl_.params_;
}
SendPrivateForwardMsg::SendPrivateForwardMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateForwardMsg)
}
SendPrivateForwardMsg::SendPrivateForwardMsg(const SendPrivateForwardMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateForwardMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_echo().empty()) {
    _this->_impl_.echo_.Set(from._internal_echo(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::cqhttp::SendPrivateForwardMsg_Params(*from._impl_.params_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateForwardMsg)
}

inline void SendPrivateForwardMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.echo_){}
    , decltype(_impl_.params_){nullptr}
    , decltype(_impl_.action_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.echo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.echo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendPrivateForwardMsg::~SendPrivateForwardMsg() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateForwardMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateForwardMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.echo_.Destroy();
  if (this != internal_default_instance()) delete _impl_.params_;
}

void SendPrivateForwardMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateForwardMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateForwardMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.echo_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _impl_.action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateForwardMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cqhttp.Action action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::cqhttp::Action>(val));
        } else
          goto handle_unusual;
        continue;
      // .cqhttp.SendPrivateForwardMsg.Params params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string echo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_echo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendPrivateForwardMsg.echo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateForwardMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateForwardMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // .cqhttp.SendPrivateForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_echo().data(), static_cast<int>(this->_internal_echo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendPrivateForwardMsg.echo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_echo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateForwardMsg)
  return target;
}

size_t SendPrivateForwardMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateForwardMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string echo = 3;
  if (!this->_internal_echo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_echo());
  }

  // .cqhttp.SendPrivateForwardMsg.Params params = 2;
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  // .cqhttp.Action action = 1;
  if (this->_internal_action() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateForwardMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateForwardMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateForwardMsg::GetClassData() const { return &_class_data_; }


void SendPrivateForwardMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateForwardMsg*>(&to_msg);
  auto& from = static_cast<const SendPrivateForwardMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateForwardMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_echo().empty()) {
    _this->_internal_set_echo(from._internal_echo());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::cqhttp::SendPrivateForwardMsg_Params::MergeFrom(
        from._internal_params());
  }
  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateForwardMsg::CopyFrom(const SendPrivateForwardMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateForwardMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateForwardMsg::IsInitialized() const {
  return true;
}

void SendPrivateForwardMsg::InternalSwap(SendPrivateForwardMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.echo_, lhs_arena,
      &other->_impl_.echo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendPrivateForwardMsg, _impl_.action_)
      + sizeof(SendPrivateForwardMsg::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(SendPrivateForwardMsg, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateForwardMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[187]);
}

// ===================================================================

class SendPrivateForwardMsgResp::_Internal {
 public:
};

SendPrivateForwardMsgResp::SendPrivateForwardMsgResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cqhttp.SendPrivateForwardMsgResp)
}
SendPrivateForwardMsgResp::SendPrivateForwardMsgResp(const SendPrivateForwardMsgResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendPrivateForwardMsgResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.forward_id_){}
    , decltype(_impl_.message_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.forward_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forward_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_forward_id().empty()) {
    _this->_impl_.forward_id_.Set(from._internal_forward_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_id_ = from._impl_.message_id_;
  // @@protoc_insertion_point(copy_constructor:cqhttp.SendPrivateForwardMsgResp)
}

inline void SendPrivateForwardMsgResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.forward_id_){}
    , decltype(_impl_.message_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.forward_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forward_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendPrivateForwardMsgResp::~SendPrivateForwardMsgResp() {
  // @@protoc_insertion_point(destructor:cqhttp.SendPrivateForwardMsgResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendPrivateForwardMsgResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.forward_id_.Destroy();
}

void SendPrivateForwardMsgResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendPrivateForwardMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:cqhttp.SendPrivateForwardMsgResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forward_id_.ClearToEmpty();
  _impl_.message_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendPrivateForwardMsgResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string forward_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_forward_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cqhttp.SendPrivateForwardMsgResp.forward_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendPrivateForwardMsgResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cqhttp.SendPrivateForwardMsgResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_message_id(), target);
  }

  // string forward_id = 2;
  if (!this->_internal_forward_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_forward_id().data(), static_cast<int>(this->_internal_forward_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cqhttp.SendPrivateForwardMsgResp.forward_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_forward_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cqhttp.SendPrivateForwardMsgResp)
  return target;
}

size_t SendPrivateForwardMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cqhttp.SendPrivateForwardMsgResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string forward_id = 2;
  if (!this->_internal_forward_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_forward_id());
  }

  // int64 message_id = 1;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendPrivateForwardMsgResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendPrivateForwardMsgResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendPrivateForwardMsgResp::GetClassData() const { return &_class_data_; }


void SendPrivateForwardMsgResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendPrivateForwardMsgResp*>(&to_msg);
  auto& from = static_cast<const SendPrivateForwardMsgResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cqhttp.SendPrivateForwardMsgResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_forward_id().empty()) {
    _this->_internal_set_forward_id(from._internal_forward_id());
  }
  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendPrivateForwardMsgResp::CopyFrom(const SendPrivateForwardMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cqhttp.SendPrivateForwardMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendPrivateForwardMsgResp::IsInitialized() const {
  return true;
}

void SendPrivateForwardMsgResp::InternalSwap(SendPrivateForwardMsgResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.forward_id_, lhs_arena,
      &other->_impl_.forward_id_, rhs_arena
  );
  swap(_impl_.message_id_, other->_impl_.message_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendPrivateForwardMsgResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cqhttp_5fapi_2eproto_getter, &descriptor_table_cqhttp_5fapi_2eproto_once,
      file_level_metadata_cqhttp_5fapi_2eproto[188]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace cqhttp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateMsg*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupMsg*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupForwardMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupForwardMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupForwardMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupForwardMsg*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupForwardMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupForwardMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupForwardMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupForwardMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupForwardMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendMessage_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendMessage_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendMessage_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendMessage*
Arena::CreateMaybeMessage< ::cqhttp::SendMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendMessageResp*
Arena::CreateMaybeMessage< ::cqhttp::SendMessageResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendMessageResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteMsg*
Arena::CreateMaybeMessage< ::cqhttp::DeleteMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::getMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getMsg*
Arena::CreateMaybeMessage< ::cqhttp::getMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::getMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetForwardMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetForwardMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetForwardMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetForwardMsg*
Arena::CreateMaybeMessage< ::cqhttp::GetForwardMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetForwardMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetForwardMsgResp_Messages*
Arena::CreateMaybeMessage< ::cqhttp::GetForwardMsgResp_Messages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetForwardMsgResp_Messages >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetForwardMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::GetForwardMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetForwardMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetImage_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetImage_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetImage_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetImage*
Arena::CreateMaybeMessage< ::cqhttp::GetImage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetImage >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetImageResp*
Arena::CreateMaybeMessage< ::cqhttp::GetImageResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetImageResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::MarkMsgAsRead_Params*
Arena::CreateMaybeMessage< ::cqhttp::MarkMsgAsRead_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::MarkMsgAsRead_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::MarkMsgAsRead*
Arena::CreateMaybeMessage< ::cqhttp::MarkMsgAsRead >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::MarkMsgAsRead >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupKick_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupKick_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupKick_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupKick*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupKick >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupKick >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupBan_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupBan_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupBan_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupBan*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupBan >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupBan >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAnonymousBan_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAnonymousBan_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAnonymousBan_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAnonymousBan*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAnonymousBan >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAnonymousBan >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupWholeBan_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupWholeBan_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupWholeBan_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupWholeBan*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupWholeBan >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupWholeBan >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAdmin_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAdmin_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAdmin_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAdmin*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAdmin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAdmin >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAnonymous_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAnonymous_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAnonymous_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAnonymous*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAnonymous >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAnonymous >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupCard_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupCard_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupCard_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupCard*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupCard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupCard >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupName_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupName_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupName_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupName*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupName >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupLeave_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupLeave_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupLeave_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupLeave*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupLeave >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupLeave >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupSpecialTitle_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupSpecialTitle_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupSpecialTitle_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupSpecialTitle*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupSpecialTitle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupSpecialTitle >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupSign_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupSign_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupSign_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupSign*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupSign >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupSign >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetFriendAddRequest_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetFriendAddRequest_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetFriendAddRequest_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetFriendAddRequest*
Arena::CreateMaybeMessage< ::cqhttp::SetFriendAddRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetFriendAddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAddRequest_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAddRequest_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAddRequest_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupAddRequest*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupAddRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupAddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetLoginInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetLoginInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetLoginInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetLoginInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetLoginInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetLoginInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetLoginInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetLoginInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetLoginInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::QiDianGetAccountInfo*
Arena::CreateMaybeMessage< ::cqhttp::QiDianGetAccountInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::QiDianGetAccountInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::QiDianGetAccountInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::QiDianGetAccountInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::QiDianGetAccountInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetQQProfile_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetQQProfile_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetQQProfile_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetQQProfile*
Arena::CreateMaybeMessage< ::cqhttp::SetQQProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetQQProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStrangerInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetStrangerInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStrangerInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStrangerInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetStrangerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStrangerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStrangerInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetStrangerInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStrangerInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetFriendList*
Arena::CreateMaybeMessage< ::cqhttp::GetFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetFriendList >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetFriendListResp_Friend*
Arena::CreateMaybeMessage< ::cqhttp::GetFriendListResp_Friend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetFriendListResp_Friend >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetFriendListResp*
Arena::CreateMaybeMessage< ::cqhttp::GetFriendListResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetFriendListResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UnidirectionalFriendList*
Arena::CreateMaybeMessage< ::cqhttp::UnidirectionalFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UnidirectionalFriendList >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UnidirectionalFriendListResp_Friend*
Arena::CreateMaybeMessage< ::cqhttp::UnidirectionalFriendListResp_Friend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UnidirectionalFriendListResp_Friend >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UnidirectionalFriendListResp*
Arena::CreateMaybeMessage< ::cqhttp::UnidirectionalFriendListResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UnidirectionalFriendListResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteFriend_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteFriend_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteFriend_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteFriend*
Arena::CreateMaybeMessage< ::cqhttp::DeleteFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupList_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupList_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupList_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupList*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupList >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupListResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupListResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupListResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberList_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberList_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberList_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberList*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberList >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMemberListResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMemberListResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMemberListResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupHonorInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupHonorInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupHonorInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupHonorInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupHonorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupHonorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupHonorInfoResp_Talkative*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupHonorInfoResp_Talkative >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupHonorInfoResp_Talkative >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupHonorInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupHonorInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupHonorInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCoolies_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetCoolies_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCoolies_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCoolies*
Arena::CreateMaybeMessage< ::cqhttp::GetCoolies >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCoolies >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCooliesResp*
Arena::CreateMaybeMessage< ::cqhttp::GetCooliesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCooliesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCsrfToken*
Arena::CreateMaybeMessage< ::cqhttp::GetCsrfToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCsrfToken >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCsrfTokenResp*
Arena::CreateMaybeMessage< ::cqhttp::GetCsrfTokenResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCsrfTokenResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCredentials_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetCredentials_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCredentials_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCredentials*
Arena::CreateMaybeMessage< ::cqhttp::GetCredentials >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetCredentialsResp*
Arena::CreateMaybeMessage< ::cqhttp::GetCredentialsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetCredentialsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetRecord_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetRecord_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetRecord_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetRecord*
Arena::CreateMaybeMessage< ::cqhttp::GetRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetRecordResp*
Arena::CreateMaybeMessage< ::cqhttp::GetRecordResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetRecordResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CanSendImage*
Arena::CreateMaybeMessage< ::cqhttp::CanSendImage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CanSendImage >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CanSendImageResp*
Arena::CreateMaybeMessage< ::cqhttp::CanSendImageResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CanSendImageResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CanSendRecord*
Arena::CreateMaybeMessage< ::cqhttp::CanSendRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CanSendRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CanSendRecordResp*
Arena::CreateMaybeMessage< ::cqhttp::CanSendRecordResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CanSendRecordResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetVersionInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetVersionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetVersionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetVersionInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetVersionInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetVersionInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetRestart_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetRestart_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetRestart_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetRestart*
Arena::CreateMaybeMessage< ::cqhttp::SetRestart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetRestart >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CleanCache*
Arena::CreateMaybeMessage< ::cqhttp::CleanCache >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CleanCache >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupPortrait_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupPortrait_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupPortrait_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetGroupPortrait*
Arena::CreateMaybeMessage< ::cqhttp::SetGroupPortrait >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetGroupPortrait >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetWordSlices_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetWordSlices_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetWordSlices_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetWordSlices*
Arena::CreateMaybeMessage< ::cqhttp::GetWordSlices >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetWordSlices >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetWordSlicesResp*
Arena::CreateMaybeMessage< ::cqhttp::GetWordSlicesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetWordSlicesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::OcrImage_Params*
Arena::CreateMaybeMessage< ::cqhttp::OcrImage_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::OcrImage_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::OcrImage*
Arena::CreateMaybeMessage< ::cqhttp::OcrImage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::OcrImage >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::OcrImageResp_TextDetection*
Arena::CreateMaybeMessage< ::cqhttp::OcrImageResp_TextDetection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::OcrImageResp_TextDetection >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::OcrImageResp*
Arena::CreateMaybeMessage< ::cqhttp::OcrImageResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::OcrImageResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupSystemMsg*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupSystemMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupSystemMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupSystemMsgResp_InvitedRequest*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupSystemMsgResp_InvitedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupSystemMsgResp_InvitedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupSystemMsgResp_JoinRequest*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupSystemMsgResp_JoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupSystemMsgResp_JoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupSystemMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupSystemMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupSystemMsgResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UploadPrivateFile_Params*
Arena::CreateMaybeMessage< ::cqhttp::UploadPrivateFile_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UploadPrivateFile_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UploadPrivateFile*
Arena::CreateMaybeMessage< ::cqhttp::UploadPrivateFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UploadPrivateFile >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UploadGroupFile_Params*
Arena::CreateMaybeMessage< ::cqhttp::UploadGroupFile_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UploadGroupFile_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::UploadGroupFile*
Arena::CreateMaybeMessage< ::cqhttp::UploadGroupFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::UploadGroupFile >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileSystemInfo_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileSystemInfo_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileSystemInfo_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileSystemInfo*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileSystemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileSystemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileSystemInfoResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileSystemInfoResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileSystemInfoResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupRootFiles_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupRootFiles_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupRootFiles_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupRootFiles*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupRootFiles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupRootFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupRootFilesResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupRootFilesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupRootFilesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getGroupFileByFolder_Params*
Arena::CreateMaybeMessage< ::cqhttp::getGroupFileByFolder_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getGroupFileByFolder_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getGroupFileByFolder*
Arena::CreateMaybeMessage< ::cqhttp::getGroupFileByFolder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getGroupFileByFolder >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::getGroupFileByFolderResp*
Arena::CreateMaybeMessage< ::cqhttp::getGroupFileByFolderResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::getGroupFileByFolderResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CreateGroupFileFolder_Params*
Arena::CreateMaybeMessage< ::cqhttp::CreateGroupFileFolder_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CreateGroupFileFolder_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CreateGroupFileFolder*
Arena::CreateMaybeMessage< ::cqhttp::CreateGroupFileFolder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CreateGroupFileFolder >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteGroupFolder_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteGroupFolder_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteGroupFolder_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteGroupFolder*
Arena::CreateMaybeMessage< ::cqhttp::DeleteGroupFolder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteGroupFolder >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteGroupFile_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteGroupFile_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteGroupFile_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteGroupFile*
Arena::CreateMaybeMessage< ::cqhttp::DeleteGroupFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteGroupFile >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileUrl_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileUrl_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileUrl_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileUrl*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileUrl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileUrl >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupFileUrlResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupFileUrlResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupFileUrlResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStatus*
Arena::CreateMaybeMessage< ::cqhttp::GetStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStatusResp_Statistics*
Arena::CreateMaybeMessage< ::cqhttp::GetStatusResp_Statistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStatusResp_Statistics >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetStatusResp*
Arena::CreateMaybeMessage< ::cqhttp::GetStatusResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetStatusResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupAtAllRemain_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupAtAllRemain_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupAtAllRemain_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupAtAllRemain*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupAtAllRemain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupAtAllRemain >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupAtAllRemainResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupAtAllRemainResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupAtAllRemainResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::HandleQuickOperation_Params*
Arena::CreateMaybeMessage< ::cqhttp::HandleQuickOperation_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::HandleQuickOperation_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::HandleQuickOperation*
Arena::CreateMaybeMessage< ::cqhttp::HandleQuickOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::HandleQuickOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupNotice_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupNotice_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupNotice_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendGroupNotice*
Arena::CreateMaybeMessage< ::cqhttp::SendGroupNotice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendGroupNotice >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNotice_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNotice_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNotice_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNotice*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNotice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNotice >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage_Image >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNoticeResp_Notice_NoticeMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNoticeResp_Notice*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNoticeResp_Notice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNoticeResp_Notice >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupNoticeResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupNoticeResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupNoticeResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::ReloadEventFilter_Params*
Arena::CreateMaybeMessage< ::cqhttp::ReloadEventFilter_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::ReloadEventFilter_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::ReloadEventFilter*
Arena::CreateMaybeMessage< ::cqhttp::ReloadEventFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::ReloadEventFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DownloadFile_Params*
Arena::CreateMaybeMessage< ::cqhttp::DownloadFile_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DownloadFile_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DownloadFile*
Arena::CreateMaybeMessage< ::cqhttp::DownloadFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DownloadFile >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DownloadFileResp*
Arena::CreateMaybeMessage< ::cqhttp::DownloadFileResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DownloadFileResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetOnlineClients_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetOnlineClients_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetOnlineClients_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetOnlineClients*
Arena::CreateMaybeMessage< ::cqhttp::GetOnlineClients >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetOnlineClients >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetOnlineClientsResp*
Arena::CreateMaybeMessage< ::cqhttp::GetOnlineClientsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetOnlineClientsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMsgHistory_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMsgHistory_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMsgHistory_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMsgHistory*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMsgHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMsgHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetGroupMsgHistoryResp*
Arena::CreateMaybeMessage< ::cqhttp::GetGroupMsgHistoryResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetGroupMsgHistoryResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetEssenceMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetEssenceMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetEssenceMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetEssenceMsg*
Arena::CreateMaybeMessage< ::cqhttp::SetEssenceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetEssenceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteEssenceMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteEssenceMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteEssenceMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteEssenceMsg*
Arena::CreateMaybeMessage< ::cqhttp::DeleteEssenceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteEssenceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetEssenceMsgList_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetEssenceMsgList_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetEssenceMsgList_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetEssenceMsgList*
Arena::CreateMaybeMessage< ::cqhttp::GetEssenceMsgList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetEssenceMsgList >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetEssenceMsgListResp*
Arena::CreateMaybeMessage< ::cqhttp::GetEssenceMsgListResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetEssenceMsgListResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CheckUlrSafely_Params*
Arena::CreateMaybeMessage< ::cqhttp::CheckUlrSafely_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CheckUlrSafely_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CheckUlrSafely*
Arena::CreateMaybeMessage< ::cqhttp::CheckUlrSafely >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CheckUlrSafely >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::CheckUlrSafelyResp*
Arena::CreateMaybeMessage< ::cqhttp::CheckUlrSafelyResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::CheckUlrSafelyResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetModelShow_Params*
Arena::CreateMaybeMessage< ::cqhttp::GetModelShow_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetModelShow_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetModelShow*
Arena::CreateMaybeMessage< ::cqhttp::GetModelShow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetModelShow >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetModelShowResp_Variant*
Arena::CreateMaybeMessage< ::cqhttp::GetModelShowResp_Variant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetModelShowResp_Variant >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::GetModelShowResp*
Arena::CreateMaybeMessage< ::cqhttp::GetModelShowResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::GetModelShowResp >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetModelShow_Params*
Arena::CreateMaybeMessage< ::cqhttp::SetModelShow_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetModelShow_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SetModelShow*
Arena::CreateMaybeMessage< ::cqhttp::SetModelShow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SetModelShow >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteUnidirectionalFriend_Params*
Arena::CreateMaybeMessage< ::cqhttp::DeleteUnidirectionalFriend_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteUnidirectionalFriend_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::DeleteUnidirectionalFriend*
Arena::CreateMaybeMessage< ::cqhttp::DeleteUnidirectionalFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::DeleteUnidirectionalFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateForwardMsg_Params*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateForwardMsg_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateForwardMsg_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateForwardMsg*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateForwardMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateForwardMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::cqhttp::SendPrivateForwardMsgResp*
Arena::CreateMaybeMessage< ::cqhttp::SendPrivateForwardMsgResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cqhttp::SendPrivateForwardMsgResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
